Strings , widely use Java programming , sequence character . In Java programming language , string object . The Java platform provide String class create manipulate string . Creating Strings The direct way create string write : String greet = `` Hello world ! `` ; In case , `` Hello world ! '' string literal—a series character code enclose double quote . Whenever encounter string literal code , compiler create String object value—in case , Hello world ! . As object , create String object use new keyword constructor . The String class thirteen constructor allow provide initial value string use different source , array character : char [ ] helloArray = { 'h ' , 'e ' , 'l ' , 'l ' , 'o ' , ' . ' } ; String helloString = new String ( helloArray ) ; System.out.println ( helloString ) ; The last line code snippet display hello . Note : The String class immutable , create String object change . The String class number method , discuss , appear modify string . Since string immutable , method really create return new string contain result operation . String Length Methods use obtain information object know accessor method . One accessor method use string length ( ) method , return number character contain string object . After following two line code execute , len equal 17 : String palindrome = `` Dot saw I Tod '' ; int len = palindrome.length ( ) ; A palindrome word sentence symmetric—it spell forward backward , ignore case punctuation . Here short inefficient program reverse palindrome string . It invoke String method charAt ( ) , return ith character string , count 0. public class StringDemo { public static void main ( String [ ] args ) { String palindrome = `` Dot saw I Tod '' ; int len = palindrome.length ( ) ; char [ ] tempCharArray = new char [ len ] ; char [ ] charArray = new char [ len ] ; // put original string // array char ( int = 0 ; < len ; i++ ) { tempCharArray [ ] = palindrome.charAt ( ) ; } // reverse array char ( int j = 0 ; j < len ; j++ ) { charArray [ j ] = tempCharArray [ len - 1 - j ] ; } String reversePalindrome = new String ( charArray ) ; System.out.println ( reversePalindrome ) ; } } Running program produce output : doT saw I toD To accomplish string reversal , program convert string array character ( first loop ) , reverse array second array ( second loop ) , convert back string . The String class include method , getChars ( ) , convert string , portion string , array character could replace first loop program palindrome.getChars ( 0 , len , tempCharArray , 0 ) ; Concatenating Strings The String class include method concatenate two string : string1.concat ( string2 ) ; This return new string string1 string2 add end . You also use concat ( ) method string literal , : '' My name `` .concat ( `` Rumplestiltskin '' ) ; Strings commonly concatenate + operator , '' Hello , '' + `` world '' + `` ! '' result '' Hello , world ! '' The + operator widely use print statement . For example : String string1 = `` saw I `` ; System.out.println ( `` Dot `` + string1 + `` Tod '' ) ; print Dot saw I Tod Such concatenation mixture object . For object String , toString ( ) method call convert String . Note : The Java programming language permit literal string span line source file , must use + concatenation operator end line multi-line string . For example : String quote = `` Now time good `` + `` men come aid country . `` ; Breaking string line use + concatenation operator , , common print statement . Creating Format Strings You see use printf ( ) format ( ) method print output formatted number . The String class equivalent class method , format ( ) , return String object rather PrintStream object . Using String 's static format ( ) method allow create formatted string reuse , oppose one-time print statement . For example , instead System.out.printf ( `` The value float `` + `` variable % f , `` + `` value `` + `` integer variable % , `` + `` string % '' , floatVar , intVar , stringVar ) ; write String f ; f = String.format ( `` The value float `` + `` variable % f , `` + `` value `` + `` integer variable % , `` + `` string % '' , floatVar , intVar , stringVar ) ; System.out.println ( f ) ;