Programmers use Microsoft 's DirectX API may already familiar full-screen exclusive mode . Other programmer may somewhat new concept . In either case , full-screen exclusive mode powerful feature J2SEâ„¢ version 1.4 allow programmer suspend windowing system draw directly screen . This slight paradigm shift usual kind GUI program many way . In traditional Java GUI program , AWT responsible propagate paint event operating system , event dispatch thread , call AWT 's Component.paint method appropriate . In full-screen exclusive application , painting usually actively program . Additionally , traditional GUI application limit bit depth size screen choose user . In full-screen exclusive application , program control bit depth size ( display mode ) screen . Finally , many advanced technique , page flipping ( discuss ) stereo buffering ( utilize system use separate set frame eye ) require , platform , application first full-screen exclusive mode . Hardware-Accelerated Image Basics To understand full-screen exclusive mode API , need understand basic principle hardware-accelerated image . The VolatileImage interface encapsulate surface may may take advantage hardware acceleration . Such surface may lose hardware acceleration memory behest operating system ( hence , name 'volatile ' ) . See VolatileImage Tutorial ( come soon ) information volatile image . Full-screen exclusive mode handle java.awt.GraphicsDevice object . For list available screen graphic device ( single multi-monitor system ) , call method getScreenDevices local java.awt.GraphicsEnvironment ; default ( primary ) screen ( screen single-monitor system ) , call method getDefaultScreenDevice . Once graphic device , call one following method : public boolean isFullScreenSupported ( ) This method return whether full-screen exclusive mode available . On system full-screen exclusive mode available , probably well run application windowed mode fixed size rather set full-screen window . public void setFullScreenWindow ( Window w ) Given window , method enter full-screen exclusive mode use window . If full-screen exclusive mode available , window position ( 0,0 ) resize fit screen . Use method null parameter exit full-screen exclusive mode . Programming Tips Here tip program use full-screen exclusive mode : Check isFullScreenSupported enter full-screen exclusive mode . If n't support , performance may degrade . Entering exit full-screen mode robust use try ... finally clause . This good coding practice , also prevent program stay full-screen exclusive mode longer : GraphicsDevice myDevice ; Window myWindow ; try { myDevice.setFullScreenWindow ( myWindow ) ; ... } finally { myDevice.setFullScreenWindow ( null ) ; } Most full-screen exclusive application well suit use undecorated window . Turn decoration frame dialog use setUndecorated method . Full-screen exclusive application resizable , since resize full-screen application cause unpredictable ( possibly dangerous ) behavior . For security reason , user must grant fullScreenExclusive permission use full-screen exclusive mode applet .