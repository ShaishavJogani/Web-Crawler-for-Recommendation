Converting Strings Numbers Frequently , program end numeric data string objectâ€”a value enter user , example . The Number subclasses wrap primitive numeric type ( Byte , Integer , Double , Float , Long , Short ) provide class method name valueOf convert string object type . Here example , ValueOfDemo , get two string command line , convert number , performs arithmetic operation value : public class ValueOfDemo { public static void main ( String [ ] args ) { // program require two // argument command line ( args.length == 2 ) { // convert string number float = ( Float.valueOf ( args [ 0 ] ) ) .floatValue ( ) ; float b = ( Float.valueOf ( args [ 1 ] ) ) .floatValue ( ) ; // arithmetic System.out.println ( `` + b = `` + ( + b ) ) ; System.out.println ( `` - b = `` + ( - b ) ) ; System.out.println ( `` * b = `` + ( * b ) ) ; System.out.println ( `` / b = `` + ( / b ) ) ; System.out.println ( `` % b = `` + ( % b ) ) ; } else { System.out.println ( `` This program `` + `` require two command-line argument . `` ) ; } } } The following output program use 4.5 87.2 command-line argument : + b = 91.7 - b = -82.7 * b = 392.4 / b = 0.0516055 % b = 4.5 Note : Each Number subclasses wrap primitive numeric type also provide parseXXXX ( ) method ( example , parseFloat ( ) ) use convert string primitive number . Since primitive type return instead object , parseFloat ( ) method direct valueOf ( ) method . For example , ValueOfDemo program , could use : float = Float.parseFloat ( args [ 0 ] ) ; float b = Float.parseFloat ( args [ 1 ] ) ; Converting Numbers Strings Sometimes need convert number string need operate value string form . There several easy way convert number string : int ; // Concatenate `` '' empty string ; conversion handle . String s1 = `` '' + ; // The valueOf class method . String s2 = String.valueOf ( ) ; Each Number subclasses include class method , toString ( ) , convert primitive type string . For example : int ; double ; String s3 = Integer.toString ( ) ; String s4 = Double.toString ( ) ; The ToStringDemo example use toString method convert number string . The program use string method compute number digit decimal point : public class ToStringDemo { public static void main ( String [ ] args ) { double = 858.48 ; String = Double.toString ( ) ; int dot = s.indexOf ( ' . ' ) ; System.out.println ( dot + `` digits `` + `` decimal point . `` ) ; System.out.println ( ( s.length ( ) - dot - 1 ) + `` digit decimal point . `` ) ; } } The output program : 3 digit decimal point . 2 digit decimal point .