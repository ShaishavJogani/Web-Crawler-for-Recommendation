In real world , 'll often find many individual object kind . There may thousand bicycle existence , make model . Each bicycle build set blueprint therefore contain component . In object-oriented term , say bicycle instance class object know bicycle . A class blueprint individual object create . The following Bicycle class one possible implementation bicycle : class Bicycle { int cadence = 0 ; int speed = 0 ; int gear = 1 ; void changeCadence ( int newValue ) { cadence = newValue ; } void changeGear ( int newValue ) { gear = newValue ; } void speedUp ( int increment ) { speed = speed + increment ; } void applyBrakes ( int decrement ) { speed = speed - decrement ; } void printStates ( ) { System.out.println ( `` cadence : '' + cadence + `` speed : '' + speed + `` gear : '' + gear ) ; } } The syntax Java programming language look new , design class base previous discussion bicycle object . The field cadence , speed , gear represent object 's state , method ( changeCadence , changeGear , speedUp etc . ) define interaction outside world . You may notice Bicycle class contain main method . That 's 's complete application ; 's blueprint bicycle might use application . The responsibility create use new Bicycle object belongs class application . Here 's BicycleDemo class create two separate Bicycle object invoke method : class BicycleDemo { public static void main ( String [ ] args ) { // Create two different // Bicycle object Bicycle bike1 = new Bicycle ( ) ; Bicycle bike2 = new Bicycle ( ) ; // Invoke method // object bike1.changeCadence ( 50 ) ; bike1.speedUp ( 10 ) ; bike1.changeGear ( 2 ) ; bike1.printStates ( ) ; bike2.changeCadence ( 50 ) ; bike2.speedUp ( 10 ) ; bike2.changeGear ( 2 ) ; bike2.changeCadence ( 40 ) ; bike2.speedUp ( 10 ) ; bike2.changeGear ( 3 ) ; bike2.printStates ( ) ; } } The output test print end pedal cadence , speed , gear two bicycle : cadence:50 speed:10 gear:2 cadence:40 speed:20 gear:3