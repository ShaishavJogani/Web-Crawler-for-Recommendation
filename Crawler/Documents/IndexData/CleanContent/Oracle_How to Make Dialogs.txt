A Dialog window independent subwindow mean carry temporary notice apart main Swing Application Window . Most Dialogs present error message warn user , Dialogs present image , directory tree , anything compatible main Swing Application manage . For convenience , several Swing component class directly instantiate display dialog . To create simple , standard dialog , use JOptionPane class . The ProgressMonitor class put dialog show progress operation . Two class , JColorChooser JFileChooser , also supply standard dialog . To bring print dialog , use Printing API . To create custom dialog , use JDialog class directly . The code simple dialog minimal . For example , informational dialog : Here code create show : JOptionPane.showMessageDialog ( frame , `` Eggs suppose green . `` ) ; The rest section cover following topic : An Overview Dialogs The DialogDemo Example JOptionPane Features Creating Showing Simple Dialogs Customizing Button Text Getting User 's Input Dialog Stopping Automatic Dialog Closing The Dialog API Examples Use Dialogs An Overview Dialogs Every dialog dependent Frame component . When Frame destroy , dependent Dialogs . When frame iconified , dependent Dialogs also disappear screen . When frame deiconified , dependent Dialogs return screen . A swing JDialog class inherit behavior AWT Dialog class . A Dialog modal . When modal Dialog visible , block user input window program . JOptionPane create JDialogs modal . To create non-modal Dialog , must use JDialog class directly . Starting JDK 7 , modify dialog window modality behavior use new Modality API . See The New Modality API detail . The JDialog class subclass AWT java.awt.Dialog class . It add root pane container support default close operation Dialog object . These feature JFrame , use JDialog directly similar use JFrame . If 're go use JDialog directly , understand material Using Top-Level Containers How Make Frames , especially Responding Window-Closing Events . Even use JOptionPane implement dialog , 're still use JDialog behind scene . The reason JOptionPane simply container automatically create JDialog add JDialog 's content pane . The DialogDemo Example Here picture application display dialog . Try : : Click Launch button run Dialog Demo use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Click Show ! button . A modal dialog appear . Until close , application unresponsive , although repaint necessary . You close dialog either click button dialog explicitly , use dialog window decoration . In More Dialogs pane , click bottom radio button Show ! button . A non-modal dialog appear . Note DialogDemo window remain fully functional non-modal dialog . While non-modal dialog show , iconify DialogDemo window . The dialog disappear screen deiconify DialogDemo window . JOptionPane Features Using JOptionPane , quickly create customize several different kind dialog . JOptionPane provide support lay standard dialog , provide icon , specify dialog title text , customize button text . Other feature allow customize component dialog display specify dialog appear onscreen . You even specify option pane put internal frame ( JInternalFrame ) instead JDialog . When create JOptionPane , look-and-feel-specific code add component JOptionPane determine layout component . JOptionPane 's icon support let easily specify icon dialog display . You use custom icon , icon , one four standard JOptionPane icon ( question , information , warning , error ) . Each look feel version four standard icon . The following figure show icon use Java ( Windows ) look feel . Icons use JOptionPane Icon description Java look feel Windows look feel question information warn error Creating Showing Simple Dialogs For simple modal dialog , create show dialog use one JOptionPane 's showXxxDialog method . If dialog internal frame , add Internal show — example , showMessageDialog change showInternalMessageDialog . If need control dialog window-closing behavior want dialog modal , directly instantiate JOptionPane add JDialog instance . Then invoke setVisible ( true ) JDialog make appear . The two useful showXxxDialog method showMessageDialog showOptionDialog . The showMessageDialog method display simple , one-button dialog . The showOptionDialog method display customized dialog — display variety button customized button text , contain standard text message collection component . The two showXxxDialog method use less often . The showConfirmDialog method ask user confirm something , present standard button text ( Yes/No localized equivalent , example ) rather button text customize user situation ( Start/Cancel , example ) . A fourth method , showInputDialog , design display modal dialog get string user , use either text field , uneditable combo box list . Here example , take DialogDemo.java , use showMessageDialog , showOptionDialog , JOptionPane constructor . For example code , see DialogDemo.java program list Examples Use Dialogs . showMessageDialog Displays modal dialog one button , label `` OK '' ( localized equivalent ) . You easily specify message , icon , title dialog display . Here example use showMessageDialog : //default title icon JOptionPane.showMessageDialog ( frame , `` Eggs suppose green . `` ) ; //custom title , warn icon JOptionPane.showMessageDialog ( frame , `` Eggs suppose green . `` , `` Inane warning '' , JOptionPane.WARNING_MESSAGE ) ; //custom title , error icon JOptionPane.showMessageDialog ( frame , `` Eggs suppose green . `` , `` Inane error '' , JOptionPane.ERROR_MESSAGE ) ; //custom title , icon JOptionPane.showMessageDialog ( frame , `` Eggs suppose green . `` , `` A plain message '' , JOptionPane.PLAIN_MESSAGE ) ; //custom title , custom icon JOptionPane.showMessageDialog ( frame , `` Eggs suppose green . `` , `` Inane custom dialog '' , JOptionPane.INFORMATION_MESSAGE , icon ) ; showOptionDialog Displays modal dialog specified button , icon , message , title , . With method , change text appear button standard dialog . You also perform many kind customization . //Custom button text Object [ ] option = { `` Yes , please '' , `` No , thanks '' , `` No egg , ham ! `` } ; int n = JOptionPane.showOptionDialog ( frame , `` Would like green egg go `` + `` ham ? `` , `` A Silly Question '' , JOptionPane.YES_NO_CANCEL_OPTION , JOptionPane.QUESTION_MESSAGE , null , option , option [ 2 ] ) ; JOptionPane ( constructor ) Creates JOptionPane specified button , icon , message , title , . You must add option pane JDialog , register property-change listener option pane , show dialog . See Stopping Automatic Dialog Closing detail . final JOptionPane optionPane = new JOptionPane ( `` The way close dialog by\n '' + `` press one following buttons.\n '' + `` Do understand ? `` , JOptionPane.QUESTION_MESSAGE , JOptionPane.YES_NO_OPTION ) ; The argument showXxxDialog method JOptionPane constructor standardize , though number argument method constructor varies . The following list describe argument . To see exact list argument particular method , see The Dialog API . Component parentComponent The first argument showXxxDialog method always parent component , must Frame , component inside Frame , null . If specify Frame Dialog , Dialog appear center Frame follow focus behavior Frame . If specify component inside Frame , Dialog appear center component follow focus behavior component 's Frame . If specify null , look feel pick appropriate position dialog — generally center screen — Dialog necessarily follow focus behavior visible Frame Dialog . The JOptionPane constructor include argument . Instead , specify parent frame create JDialog contain JOptionPane , use JDialog setLocationRelativeTo method set dialog position . Object message This required argument specifies dialog display main area . Generally , specify string , result dialog display label specify text . You split message several line put newline ( \n ) character inside message string . For example : '' Complete sentence : \n \ '' Green egg ... \ '' '' String title The title dialog . int optionType Specifies set button appear bottom dialog . Choose one following standard set : DEFAULT_OPTION , YES_NO_OPTION , YES_NO_CANCEL_OPTION , OK_CANCEL_OPTION . int messageType This argument determine icon display dialog . Choose one following value : PLAIN_MESSAGE ( icon ) , ERROR_MESSAGE , INFORMATION_MESSAGE , WARNING_MESSAGE , QUESTION_MESSAGE . Icon icon The icon display dialog . Object [ ] option Generally use specify string display button bottom dialog . See Customizing Button Text Standard Dialog information . Can also use specify icon display button non-button component add button row . Object initialValue Specifies default value select . You either let option pane display default icon specify icon use message type icon argument . By default , option pane create showMessageDialog display information icon , one create showConfirmDialog showInputDialog display question icon , one create JOptionPane constructor display icon . To specify dialog display standard icon icon , specify message type correspond icon desire . To specify custom icon , use icon argument . The icon argument take precedence message type ; long icon argument non-null value , dialog display specified icon . Customizing Button Text When use JOptionPane create dialog , either use standard button text ( might vary look feel locale ) specify different text . By default , option pane type determine many button appear . For example , YES_NO_OPTION dialog two button , YES_NO_CANCEL_OPTION dialog three button . The following code , take DialogDemo.java , create two Yes/No dialog . The first dialog implement showConfirmDialog , use look-and-feel wording two button . The second dialog use showOptionDialog customize wording . With exception wording change , dialog identical . //default icon , custom title int n = JOptionPane.showConfirmDialog ( frame , `` Would like green egg ham ? `` , `` An Inane Question '' , JOptionPane.YES_NO_OPTION ) ; Object [ ] option = { `` Yes , please '' , `` No way ! `` } ; int n = JOptionPane.showOptionDialog ( frame , `` Would like green egg ham ? `` , `` A Silly Question '' , JOptionPane.YES_NO_OPTION , JOptionPane.QUESTION_MESSAGE , null , //do use custom Icon option , //the title button option [ 0 ] ) ; //default button title As previous code snippet show , showMessageDialog , showConfirmDialog , showOptionDialog method return integer indicate user 's choice . The value integer YES_OPTION , NO_OPTION , CANCEL_OPTION , OK_OPTION , CLOSED_OPTION . Except CLOSED_OPTION , option correspond button user press . When CLOSED_OPTION return , indicate user close dialog window explicitly , rather choose button inside option pane . Even change string standard dialog button display , return value still one pre-defined integer . For example , YES_NO_OPTION dialog always return one following value : YES_OPTION , NO_OPTION , CLOSED_OPTION . Getting User 's Input Dialog The form showXxxDialog return integer showInputDialog , return Object instead . This Object generally String reflect user 's choice . Here example use showInputDialog create dialog let user choose one three string : Object [ ] possibility = { `` ham '' , `` spam '' , `` yam '' } ; String = ( String ) JOptionPane.showInputDialog ( frame , `` Complete sentence : \n '' + `` \ '' Green egg ... \ '' '' , `` Customized Dialog '' , JOptionPane.PLAIN_MESSAGE , icon , possibility , `` ham '' ) ; //If string return , say . ( ( ! = null ) & & ( s.length ( ) > 0 ) ) { setLabel ( `` Green egg ... `` + + `` ! `` ) ; return ; } //If 're , return value null/empty . setLabel ( `` Come , finish sentence ! `` ) ; If care limit user 's choice , either use form showInputDialog method take argument specify null array object . In Java look feel , substitute null possibility result dialog text field look like : Because user type anything text field , might want check return value ask user try invalid . Another approach create custom dialog validate user-entered data return . See CustomDialog.java example validate data . If 're design custom dialog , need design dialog 's API query dialog user chose . For example , CustomDialog getValidatedText method return text user enter . Stopping Automatic Dialog Closing By default , user click JOptionPane-created button , dialog close . But want check user 's answer close dialog ? In case , must implement property change listener user click button , dialog automatically close . DialogDemo contain two dialog implement property change listener . One dialog custom modal dialog , implement CustomDialog , use JOptionPane get standard icon get layout assistance . The dialog , whose code , use standard Yes/No JOptionPane . Though dialog rather useless write , code simple enough use template complex dialog . Besides set property change listener , following code also call JDialog 's setDefaultCloseOperation method implement window listener handle window close attempt properly . If care notify user close window explicitly , ignore bold code . final JOptionPane optionPane = new JOptionPane ( `` The way close dialog by\n '' + `` press one following buttons.\n '' + `` Do understand ? `` , JOptionPane.QUESTION_MESSAGE , JOptionPane.YES_NO_OPTION ) ; final JDialog dialog = new JDialog ( frame , `` Click button '' , true ) ; dialog.setContentPane ( optionPane ) ; dialog.setDefaultCloseOperation ( JDialog.DO_NOTHING_ON_CLOSE ) ; dialog.addWindowListener ( new WindowAdapter ( ) { public void windowClosing ( WindowEvent ) { setLabel ( `` Thwarted user attempt close window . `` ) ; } } ) ; optionPane.addPropertyChangeListener ( new PropertyChangeListener ( ) { public void propertyChange ( PropertyChangeEvent e ) { String prop = e.getPropertyName ( ) ; ( dialog.isVisible ( ) & & ( e.getSource ( ) == optionPane ) & & ( prop.equals ( JOptionPane.VALUE_PROPERTY ) ) ) { //If go check something //before close window , 'd //it . dialog.setVisible ( false ) ; } } } ) ; dialog.pack ( ) ; dialog.setVisible ( true ) ; int value = ( ( Integer ) optionPane.getValue ( ) ) .intValue ( ) ; ( value == JOptionPane.YES_OPTION ) { setLabel ( `` Good . `` ) ; } else ( value == JOptionPane.NO_OPTION ) { setLabel ( `` Try use window decoration `` + `` close non-auto-closing dialog. `` + `` You ca n't ! `` ) ; } The Dialog API The following table list commonly use JOptionPane JDialog constructor method . Other method 're likely call define Dialog , Window Component class include pack , setSize , setVisible . The API list follow : Showing Standard Modal Dialogs ( use JOptionPane Class Methods ) Methods Using JOptionPanes Directly Frequently Used JDialog Constructors Methods Showing Standard Modal Dialogs ( Using JOptionPane Class Methods ) Method Purpose static void showMessageDialog ( Component , Object ) static void showMessageDialog ( Component , Object , String , int ) static void showMessageDialog ( Component , Object , String , int , Icon ) Show one-button , modal dialog give user information . The argument specify ( order ) parent component , message , title , message type , icon dialog . See Creating Showing Simple Dialogs discussion argument effect . static int showOptionDialog ( Component , Object , String , int , int , Icon , Object [ ] , Object ) Show customized modal dialog . The argument specify ( order ) parent component , message , title , option type , message type , icon , option , initial value dialog . See Creating Showing Simple Dialogs discussion argument effect . static int showConfirmDialog ( Component , Object ) static int showConfirmDialog ( Component , Object , String , int ) static int showConfirmDialog ( Component , Object , String , int , int ) static int showConfirmDialog ( Component , Object , String , int , int , Icon ) Show modal dialog ask user question . The argument specify ( order ) parent component , message , title , option type , message type , icon dialog . See Creating Showing Simple Dialogs discussion argument effect . static String showInputDialog ( Object ) static String showInputDialog ( Component , Object ) static String showInputDialog ( Component , Object , String , int ) static String showInputDialog ( Component , Object , String , int , Icon , Object [ ] , Object ) Show modal dialog prompt user input . The single-argument version specifies message , parent component assume null . The argument version specify ( order ) parent component , message , title , message type , icon , option , initial value dialog . See Creating Showing Simple Dialogs discussion argument effect . static void showInternalMessageDialog ( ... ) static void showInternalOptionDialog ( ... ) static void showInternalConfirmDialog ( ... ) static String showInternalInputDialog ( ... ) Implement standard dialog internal frame . See JOptionPane API documentation exact list argument . Methods Using JOptionPanes Directly Method Constructor Purpose JOptionPane ( ) JOptionPane ( Object ) JOptionPane ( Object , int ) JOptionPane ( Object , int , int ) JOptionPane ( Object , int , int , Icon ) JOptionPane ( Object , int , int , Icon , Object [ ] ) JOptionPane ( Object , int , int , Icon , Object [ ] , Object ) Creates JOptionPane instance . See Creating Showing Simple Dialogs discussion argument effect . static Frame getFrameForComponent ( Component ) static JDesktopPane getDesktopPaneForComponent ( Component ) Handy JOptionPane class method find frame desktop pane , respectively , specified component . int getMaxCharactersPerLineCount ( ) Determines line break automatically insert option pane text . ( The default Integer.MAX_VALUE . ) To use method , must create JOptionPane subclass . For example , following code result option pane one word per line , due fact word string 5 character less : JOptionPane op = new JOptionPane ( `` This text . '' ) { public int getMaxCharactersPerLineCount ( ) { return 5 ; } } ; Frequently Used JDialog Constructors Methods Method Constructor Purpose JDialog ( ) JDialog ( Dialog ) JDialog ( Dialog , boolean ) JDialog ( Dialog , String ) JDialog ( Dialog , String , boolean ) JDialog ( Dialog , String , boolean , GraphicsConfiguration ) JDialog ( Frame ) JDialog ( Frame , boolean ) JDialog ( Frame , String ) JDialog ( Frame , String , boolean ) JDialog ( Frame , String , boolean , GraphicsConfiguration ) JDialog ( Window owner ) JDialog ( Window owner , Dialog.ModalityType modalityType ) JDialog ( Window owner , String title ) JDialog ( Window owner , String title , Dialog.ModalityType modalityType ) JDialog ( Window owner , String title , Dialog.ModalityType modalityType , GraphicsConfiguration gc ) Creates JDialog instance . The Frame argument , , frame ( usually JFrame object ) dialog depend . Make boolean argument true specify modal dialog , false absent specify non-modal dialog . You also specify title dialog , use string argument . void setContentPane ( Container ) Container getContentPane ( ) Get set content pane , usually container dialog 's component . See Using Top-Level Containers information . void setDefaultCloseOperation ( int ) int getDefaultCloseOperation ( ) Get set happen user try close dialog . Possible value : DISPOSE_ON_CLOSE , DO_NOTHING_ON_CLOSE , HIDE_ON_CLOSE ( default ) . See Responding Window-Closing Events information . void setLocationRelativeTo ( Component ) Centers dialog specified component . static void setDefaultLookAndFeelDecorated ( boolean ) static boolean isDefaultLookAndFeelDecorated ( ) Set get hint whether dialog 's window decoration ( border , widget close window ) provide current look feel . Otherwise dialog 's decoration provide current window manager . See Specifying Window Decorations information . Examples Use Dialogs This table list example use JOptionPane JDialog . To find example use dialog , see example list progress bar , color chooser , file chooser . Example Where Described Notes DialogDemo , CustomDialog This section Creates many kind dialog , use JOptionPane JDialog . Framework — Brings confirmation dialog user select Quit menu item . ListDialog How Use BoxLayout Implements modal dialog contain scrolling list two button . Does use JOptionPane , except utility method getFrameForComponent .