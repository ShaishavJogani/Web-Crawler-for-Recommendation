The easy way create URL object String represent human-readable form URL address . This typically form another person use URL . In Java program , use String contain text create URL object : URL myURL = new URL ( `` http : //example.com/ '' ) ; The URL object create represent absolute URL . An absolute URL contain information necessary reach resource question . You also create URL object relative URL address . Creating URL Relative Another A relative URL contain enough information reach resource relative ( context ) another URL . Relative URL specification often use within HTML file . For example , suppose write HTML file call JoesHomePage.html . Within page , link page , PicturesOfMe.html MyKids.html , machine directory JoesHomePage.html . The link PicturesOfMe.html MyKids.html JoesHomePage.html could specify filename , like : < href= '' PicturesOfMe.html '' > Pictures Me < /a > < href= '' MyKids.html '' > Pictures My Kids < /a > These URL address relative URLs . That , URLs specify relative file contain â€” JoesHomePage.html . In Java program , create URL object relative URL specification . For example , suppose know two URLs site example.com : http : //example.com/pages/page1.html http : //example.com/pages/page2.html You create URL object page relative common base URL : http : //example.com/pages/ like : URL myURL = new URL ( `` http : //example.com/pages/ '' ) ; URL page1URL = new URL ( myURL , `` page1.html '' ) ; URL page2URL = new URL ( myURL , `` page2.html '' ) ; This code snippet use URL constructor let create URL object another URL object ( base ) relative URL specification . The general form constructor : URL ( URL baseURL , String relativeURL ) The first argument URL object specify base new URL . The second argument String specify rest resource name relative base . If baseURL null , constructor treat relativeURL like absolute URL specification . Conversely , relativeURL absolute URL specification , constructor ignore baseURL . This constructor also useful create URL object name anchor ( also call reference ) within file . For example , suppose page1.html file name anchor call BOTTOM bottom file . You use relative URL constructor create URL object like : URL page1BottomURL = new URL ( page1URL , '' # BOTTOM '' ) ; Other URL Constructors The URL class provide two additional constructor create URL object . These constructor useful work URLs , HTTP URLs , host name , filename , port number , reference component resource name portion URL . These two constructor useful String contain complete URL specification , know various component URL . For example , suppose design network browse panel similar file browse panel allow user choose protocol , host name , port number , filename . You construct URL panel 's component . The first constructor create URL object protocol , host name , filename . The following code snippet create URL page1.html file example.com site : new URL ( `` http '' , `` example.com '' , `` /pages/page1.html '' ) ; This equivalent new URL ( `` http : //example.com/pages/page1.html '' ) ; The first argument protocol , second host name , last pathname file . Note filename contain forward slash beginning . This indicate filename specify root host . The final URL constructor add port number list argument use previous constructor : URL gamelan = new URL ( `` http '' , `` example.com '' , 80 , `` pages/page1.html '' ) ; This create URL object following URL : http : //example.com:80/pages/page1.html If construct URL object use one constructor , get String contain complete URL address use URL object 's toString method equivalent toExternalForm method . URL address Special character Some URL address contain special character , example space character . Like : http : //example.com/hello world/ To make character legal need encode pass URL constructor . URL url = new URL ( `` http : //example.com/hello % 20world '' ) ; Encoding special character ( ) example easy one character need encoding , URL address several character unsure write code URL address need access , use multi-argument constructor java.net.URI class automatically take care encode . URI uri = new URI ( `` http '' , `` example.com '' , `` /hello world/ '' , `` '' ) ; And convert URI URL . URL url = uri.toURL ( ) ; MalformedURLException Each four URL constructor throw MalformedURLException argument constructor refer null unknown protocol . Typically , want catch handle exception embed URL constructor statement try/catch pair , like : try { URL myURL = new URL ( ... ) ; } catch ( MalformedURLException e ) { // exception handler code // ... } See Exceptions information handle exception . Note : URLs `` write-once '' object . Once 've create URL object , change attribute ( protocol , host name , filename , port number ) .