If look internationalized source code , 'll notice hardcoded English message remove . Because message longer hardcoded language code specify run time , executable distribute worldwide . No recompilation require localization . The program internationalize . You may wonder happen text message language country code mean . Do n't worry . You 'll learn concept step process internationalize sample program . 1 . Create Properties Files A property file store information characteristic program environment . A property file plain-text format . You create file text editor . In example property file store translatable text message display . Before program internationalize , English version text hardcoded System.out.println statement . The default property file , call MessagesBundle.properties , contain following line : greeting = Hello farewell = Goodbye inquiry = How ? Now message property file , translate various language . No change source code require . The French translator create property file call MessagesBundle_fr_FR.properties , contain line : greeting = Bonjour . farewell = Au revoir . inquiry = Comment allez-vous ? Notice value right side equal sign translate key left side change . These key must change , reference program fetch translated text . The name property file important . For example , name MessagesBundle_fr_FR.properties file contain fr language code FR country code . These code also use create Locale object . 2 . Define Locale The Locale object identify particular language country . The following statement define Locale language English country United States : aLocale = new Locale ( `` en '' , '' US '' ) ; The next example create Locale object French language Canada France : caLocale = new Locale ( `` fr '' , '' CA '' ) ; frLocale = new Locale ( `` fr '' , '' FR '' ) ; The program flexible . Instead use hardcoded language country code , program get command line run time : String language = new String ( args [ 0 ] ) ; String country = new String ( args [ 1 ] ) ; currentLocale = new Locale ( language , country ) ; Locale object identifier . After define Locale , pass object perform useful task , format date number . These object locale-sensitive behavior varies accord Locale . A ResourceBundle example locale-sensitive object . 3 . Create ResourceBundle ResourceBundle object contain locale-specific object . You use ResourceBundle object isolate locale-sensitive data , translatable text . In sample program ResourceBundle back property file contain message text want display . The ResourceBundle create follow : message = ResourceBundle.getBundle ( `` MessagesBundle '' , currentLocale ) ; The argument pass getBundle method identify property file access . The first argument , MessagesBundle , refer family property file : MessagesBundle_en_US.properties MessagesBundle_fr_FR.properties MessagesBundle_de_DE.properties The Locale , second argument getBundle , specifies MessagesBundle file choose . When Locale create , language code country code pass constructor . Note language country code follow MessagesBundle name property file . Now get translated message ResourceBundle . 4 . Fetch Text ResourceBundle The property file contain key-value pair . The value consist translated text program display . You specify key fetch translate message ResourceBundle getString method . For example , retrieve message identify greeting key , invoke getString follow : String msg1 = messages.getString ( `` greeting '' ) ; The sample program use key greeting reflect content message , could use another String , s1 msg1 . Just remember key hardcoded program must present property file . If translator accidentally modify key property file , getString wo n't able find message . Conclusion That 's . As see , internationalize program n't difficult . It require planning little extra coding , benefit enormous . To provide overview internationalization process , sample program lesson intentionally kept simple . As read lesson follow , 'll learn advanced internationalization feature Java programming language .