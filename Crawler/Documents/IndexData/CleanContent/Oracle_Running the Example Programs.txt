A Note About Security The server client program run security manager instal . When run either program , need specify security policy file code grant security permission need run . Here example policy file use server program : grant codeBase `` file : /home/ann/src/ '' { permission java.security.AllPermission ; } ; Here example policy file use client program : grant codeBase `` file : /home/jones/src/ '' { permission java.security.AllPermission ; } ; For example policy file , permission grant class program 's local class path , local application code trust , permission grant code download location . Therefore , compute engine server restrict task execute ( whose code know trust might hostile ) perform operation require security permission . The example client 's Pi task require permission execute . In example , policy file server program name server.policy , policy file client program name client.policy . Starting Server Before start compute engine , need start RMI registry . The RMI registry simple server-side bootstrap name facility enable remote client obtain reference initial remote object . It start rmiregistry command . Before execute rmiregistry , must make sure shell window run rmiregistry either CLASSPATH environment variable set CLASSPATH environment variable include path class want download client remote object . To start registry server , execute rmiregistry command . This command produce output typically run background . For example , registry start host mycomputer . Microsoft Windows ( use javaw start available ) : start rmiregistry Solaris OS Linux : rmiregistry & By default , registry run port 1099 . To start registry different port , specify port number command line . Do forget unset CLASSPATH environment variable . Microsoft Windows : start rmiregistry 2001 Solaris OS Linux : rmiregistry 2001 & Once registry start , start server . You need make sure compute.jar file remote object implementation class class path . When start compute engine , need specify , use java.rmi.server.codebase property , server 's class network accessible . In example , server-side class make available download Compute Task interface , available compute.jar file public_html\classes directory user ann . The compute engine server start host mycomputer , host registry start . Microsoft Windows : java -cp c : \home\ann\src ; c : \home\ann\public_html\classes\compute.jar -Djava.rmi.server.codebase=file : /c : /home/ann/public_html/classes/compute.jar -Djava.rmi.server.hostname=mycomputer.example.com -Djava.security.policy=server.policy engine.ComputeEngine Solaris OS Linux : java -cp /home/ann/src : /home/ann/public_html/classes/compute.jar -Djava.rmi.server.codebase=http : //mycomputer/~ann/classes/compute.jar -Djava.rmi.server.hostname=mycomputer.example.com -Djava.security.policy=server.policy engine.ComputeEngine The java command define following system property : The java.rmi.server.codebase property specify location , codebase URL , definition class originate server download . If codebase specify directory hierarchy ( oppose JAR file ) , must include trailing slash end codebase URL . The java.rmi.server.hostname property specify host name address put stub remote object export Java virtual machine . This value host name address use client attempt communicate remote method invocation . By default , RMI implementation use server 's IP address indicate java.net.InetAddress.getLocalHost API . However , sometimes , address appropriate client fully qualify host name would effective . To ensure RMI use host name ( IP address ) server routable potential client , set java.rmi.server.hostname property . The java.security.policy property use specify policy file contain permission intend grant . Starting Client Once registry compute engine run , start client , specify following : The location client serve class ( Pi class ) use java.rmi.server.codebase property The java.security.policy property , use specify security policy file contain permission intend grant various piece code As command-line argument , host name server ( client know locate Compute remote object ) number decimal place use calculation Start client another host ( host name mysecondcomputer , example ) follow : Microsoft Windows : java -cp c : \home\jones\src ; c : \home\jones\public_html\classes\compute.jar -Djava.rmi.server.codebase=file : /c : /home/jones/public_html/classes/ -Djava.security.policy=client.policy client.ComputePi mycomputer.example.com 45 Solaris OS Linux : java -cp /home/jones/src : /home/jones/public_html/classes/compute.jar -Djava.rmi.server.codebase=http : //mysecondcomputer/~jones/classes/ -Djava.security.policy=client.policy client.ComputePi mycomputer.example.com 45 Note class path set command line interpreter find client class JAR file contain interface . Also note value java.rmi.server.codebase property , specify directory hierarchy , end trail slash . After start client , following output display : 3.141592653589793238462643383279502884197169399 The following figure illustrate rmiregistry , ComputeEngine server , ComputePi client obtain class program execution . When ComputeEngine server bind remote object reference registry , registry download Compute Task interface stub class depend . These class download either ComputeEngine server 's web server file system , depend type codebase URL use start server . Because ComputePi client Compute Task interface available class path , load definition class path , server 's codebase . Finally , Pi class load ComputeEngine server 's Java virtual machine Pi object pass executeTask remote call ComputeEngine object . The Pi class load server either client 's web server file system , depend type codebase URL use start client .