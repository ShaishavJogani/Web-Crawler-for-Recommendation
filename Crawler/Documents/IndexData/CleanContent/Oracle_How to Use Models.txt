Most Swing component model . A button ( JButton ) , example , model ( ButtonModel object ) store button 's state — keyboard mnemonic , whether 's enable , select , press , . Some component multiple model . A list ( JList ) , example , use ListModel hold list 's content , ListSelectionModel track list 's current selection . You often n't need know model component us . For example , program use button usually deal directly JButton object , n't deal ButtonModel object . Why model exist ? The big reason give flexibility determine data store retrieve . For example , 're design spreadsheet application display data sparsely populated table , create table model optimize use . Models benefit , . They mean data n't copy program 's data structure Swing component . Also , model automatically propagate change interested listener , make easy GUI stay sync data . For example , add item list invoke method list model . When model 's data change , model fire event JList registered listener , GUI update accordingly . Although Swing 's model architecture sometimes refer Model-View-Controller ( MVC ) design , really n't . Swing component generally implement view controller indivisible , implement single UI object provide look feel . The Swing model architecture accurately describe separable model architecture . If 're interested learn Swing model architecture , see A Swing Architecture Overview , article The Swing Connection . An Example : Converter This section feature example call Converter , application continuously convert distance measurement metric U.S. unit . You run Converter ( download JDK 7 later ) . Or , compile run example , consult example index . As following picture show , Converter feature two slider , tie text field . The slider text field display data — distance — use two different unit measure . The important thing program ensure one model control value data . There various way achieve ; defer top slider 's model . The bottom slider 's model ( instance custom class call FollowerRangeModel ) forward data query top slider 's model ( instance custom class call ConverterRangeModel ) . Each text field keep sync slider , vice versa , event handler listen change value . Care take ensure top slider 's model final say distance display . When start implement custom slider model , first look API section How Use Sliders . It inform u slider data model must implement BoundedRangeModel interface . The BoundedRangeModel API documentation tell u interface implementing class name DefaultBoundedRangeModel . The API documentation DefaultBoundedRangeModel show 's general-purpose implementation BoundedRangeModel . We n't use DefaultBoundedRangeModel directly store data integer , Converter use floating-point data . Thus , implement ConverterRangeModel subclass Object . We implement FollowerRangeModel subclass ConverterRangeModel . For Further Information To find model individual component , see `` How '' page API documentation individual component . Here example use model directly : All simple table examples implement custom table data model . The color chooser demo change listener color chooser 's selection model notify user select new color . In ColorChooserDemo2 , CrayonPanel class directly use color selection model set current color . The DynamicTreeDemo example set tree model ( instance DefaultTreeModel ) , interact directly , listen change . ListDemo set list data model ( instance DefaultListModel ) interact directly . SharedModelDemo define SharedDataModel class extend DefaultListModel implement TableModel . A JList JTable share instance SharedDataModel , provide different view model 's data . In event listener example , ListDataEventDemo create use DefaultListModel directly . Our spinner example create spinner model . As 've already see , Converter example defines two custom slider model .