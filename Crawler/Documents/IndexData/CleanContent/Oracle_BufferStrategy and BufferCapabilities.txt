BufferStrategy In Java 2 Standard Edition , n't worry video pointer video memory order take full advantage either double-buffering page-flipping . The new class java.awt.image.BufferStrategy add convenience deal draw surface component general way , regardless number buffer use technique use display . A buffer strategy give two all-purpose method draw : getDrawGraphics show . When want start drawing , get draw graphic use . When finish draw want present information screen , call show . These two method design fit rather gracefully render loop : BufferStrategy myStrategy ; ( ! ) { Graphics g = myStrategy.getDrawGraphics ( ) ; render ( g ) ; g.dispose ( ) ; myStrategy.show ( ) ; } Buffer strategy also set help monitor VolatileImage issue . When full-screen exclusive mode , VolatileImage issue especially important windowing system sometimes take back video memory give . One important example user press ALT+TAB key combination Windows -- suddenly full-screen program run background video memory lose . You call contentsLost method find happen . Similarly , windowing system return memory , find use contentsRestored method . BufferCapabilities As mention , different operate system , even different graphic card operating system , different technique available disposal . These capability expose pick best technique application . The class java.awt.BufferCapabilities encapsulate capability . Every buffer strategy control buffer capability , pick right one application crucial . To find capability available , call getBufferCapabilities method GraphicsConfiguration object available graphic device . The capability available Java 2 Standard Edition version 1.4 : isPageFlipping This capability return whether hardware page-flipping available graphic configuration . isFullScreenRequired This capability return whether full-screen exclusive mode require hardware page-flipping attempt . isMultiBufferAvailable This capability return whether multiple buffering ( two back buffer plus primary surface ) hardware available . getFlipContents This capability return hint technique use hardware page-flipping . This important content back buffer show different depend technique use . The value return null ( isPageFlipping return false ) one following value . Any value specify buffer strategy long isPageFlipping method return true , though performance vary depend available capability . FlipContents.COPIED This value mean content back buffer copy primary surface . A `` flip '' probably perform hardware blt , mean hardware double-buffering probably use blitting instead true page-flipping . This ( theory ) faster , least fast , blitting VolatileImage primary surface , though mileage may vary . The content back buffer primary surface flip . FlipContents.BACKGROUND This value mean content back buffer clear background color . Either true page-flip blt occur . FlipContents.PRIOR This value mean content back buffer content old primary surface , vice versa . Generally value indicate true page-flipping occurs , though guarantee , , mileage operation may vary . FlipContents.UNKNOWN This value mean content back buffer undefined flip . You may experiment find technique work best ( may care ) , definitely set content back buffer time draw . To create buffer strategy component , call createBufferStrategy method , supply number buffer desire ( number include primary surface ) . If particular buffering technique desire , supply appropriate BufferCapabilities object . Note use version method , must catch AWTException event choice available . Also note method available Canvas Window . Once particular buffer strategy create component , manipulate use getBufferStrategy method . Note method also available canvas window . Programming Tips Some tip use buffer capability buffer strategy : Getting , use , dispose graphic object robust try ... finally clause : BufferStrategy myStrategy ; ( ! ) { Graphics g ; try { g = myStrategy.getDrawGraphics ( ) ; render ( g ) ; } finally { g.dispose ( ) ; } myStrategy.show ( ) ; } Check available capability use buffer strategy . For best result , create buffer strategy full-screen exclusive window . Make sure check isFullScreenRequired isPageFlipping capability use page-flipping . Do n't make assumption performance . Tweak code necessary , remember different operate system graphic card different capability . Profile application ! You may want subclass component override createBufferStrategy method . Use algorithm choose strategy best suit application . The FlipBufferStrategy BltBufferStrategy inner class protect subclassed . Do n't forget may lose draw surface ! Be sure check contentsLost contentsRestored drawing . All buffer lose redrawn restore . If use buffer strategy double-buffering Swing application , probably want turn double-buffering Swing component , since already double-buffered . Video memory somewhat valuable use whenever absolutely necessary . It may end wasteful use one back buffer . Multi-buffering useful drawing time exceed time spend show . Profile application !