We already know load exist image , create store system network location . But , probably would like also create new image pixel data buffer . In case , create BufferedImage object manually , use three constructor class : new BufferedImage ( width , height , type ) - construct BufferedImage one predefined image type . new BufferedImage ( width , height , type , colorModel ) - construct BufferedImage one predefined image type : TYPE_BYTE_BINARY TYPE_BYTE_INDEXED . new BufferedImage ( colorModel , raster , premultiplied , property ) - construct new BufferedImage specify ColorModel Raster . On hand , use method Component class . These method analyze display resolution give Component GraphicsConfiguration create image appropriate type . Component.createImage ( width , height ) GraphicsConfiguration.createCompatibleImage ( width , height ) GraphicsConfiguration.createCompatibleImage ( width , height , transparency ) GraphicsConfiguration return object BufferedImage type , Component return object Image type , need BufferedImage object instead perform instanceof cast BufferedImage code . As already mention previous lesson , render image screen . An image consider draw surface . You use createGraphics ( ) method BufferedImage class purpose : ... BufferedImage off_Image = new BufferedImage ( 100 , 50 , BufferedImage.TYPE_INT_ARGB ) ; Graphics2D g2 = off_Image.createGraphics ( ) ; Another interesting use offscreen image automaticdouble buffering . This feature allow avoid flicker animated image draw image back buffer copy buffer onto screen instead draw directly screen . Java 2D also allow access hardware acceleration offscreen image , provide good performance render copy image . You get benefit functionality use following method Image class : The getCapabilities method allow determine whether image currently accelerate . The setAccelerationPriority method let set hint important acceleration image . The getAccelerationPriority method get hint acceleration importance .