The default SearchControls specify search perform name context ( SearchControls.ONELEVEL_SCOPE ) . This default use example Search Filters section . In addition default , specify search perform entire subtree name object . Search Subtree A search entire subtree search name object descendant . To make search behave way , pass SearchControls.SUBTREE_SCOPE SearchControls.setSearchScope ( ) follow . // Specify id attribute return String [ ] attrIDs = { `` sn '' , `` telephonenumber '' , `` golfhandicap '' , `` mail '' } ; SearchControls ctls = new SearchControls ( ) ; ctls.setReturningAttributes ( attrIDs ) ; ctls.setSearchScope ( SearchControls.SUBTREE_SCOPE ) ; // Specify search filter match // Ask object attribute `` sn '' == `` Geisel '' // `` mail '' attribute String filter = `` ( & ( sn=Geisel ) ( mail=* ) ) '' ; // Search subtree object use filter NamingEnumeration answer = ctx.search ( `` '' , filter , ctls ) ; This example search context ctx 's subtree entry satisfy specified filter . It find entry `` cn= Ted Geisel , ou=People '' subtree satisfy filter . # java SearchSubtree > > > cn=Ted Geisel , ou=People attribute : sn value : Geisel attribute : mail value : Ted.Geisel @ JNDITutorial.example.com attribute : telephonenumber value : +1 408 555 5252 Search Named Object You also search name object . This useful , example , test whether name object satisfy search filter . To search name object , pas SearchControls.OBJECT_SCOPE setSearchScope ( ) . // Specify id attribute return String [ ] attrIDs = { `` sn '' , `` telephonenumber '' , `` golfhandicap '' , `` mail '' } ; SearchControls ctls = new SearchControls ( ) ; ctls.setReturningAttributes ( attrIDs ) ; ctls.setSearchScope ( SearchControls.OBJECT_SCOPE ) ; // Specify search filter match // Ask object attribute `` sn '' == `` Geisel '' // `` mail '' attribute String filter = `` ( & ( sn=Geisel ) ( mail=* ) ) '' ; // Search subtree object use filter NamingEnumeration answer = ctx.search ( `` cn=Ted Geisel , ou=People '' , filter , ctls ) ; This example test whether object `` cn=Ted Geisel , ou=People '' satisfy give filter . # java SearchObject > > > attribute : sn value : Geisel attribute : mail value : Ted.Geisel @ JNDITutorial.example.com attribute : telephonenumber value : +1 408 555 5252 The example find one answer print . Notice name result empty string . This name object always name relative context search ( case , `` cn=Ted Geisel , ou=People '' ) .