The StAX project spearhead BEA support Sun Microsystems , JSR 173 specification pass Java Community Process final approval ballot March , 2004 . The primary goal StAX API give “ parse control programmer expose simple iterator base API . This allow programmer ask next event ( pull event ) allow state store procedural fashion. ” StAX create address limitation two prevalent parsing APIs , SAX DOM . Streaming versus DOM Generally speaking , two program model work XML infosets : streaming document object model ( DOM ) . The DOM model involve create in-memory object represent entire document tree complete infoset state XML document . Once memory , DOM tree navigate freely parse arbitrarily , provide maximum flexibility developer . However , cost flexibility potentially large memory footprint significant processor requirement , entire representation document must hold memory object duration document processing . This may issue work small document , memory processor requirement escalate quickly document size . Streaming refers program model XML infosets transmit parse serially application runtime , often real time , often dynamic source whose content precisely know beforehand . Moreover , stream-based parser start generate output immediately , infoset element discard garbage collect immediately use . While provide small memory footprint , reduce processor requirement , high performance certain situation , primary trade-off stream processing see infoset state one location time document . You essentially limit “ cardboard tube ” view document , implication need know process want read XML document . Streaming model XML processing particularly useful application strict memory limitation , cellphone run Java Platform , Micro Edition ( Java ME platform ) , application need process several request simultaneously , application server . In fact , argue majority XML business logic benefit stream processing , require in-memory maintenance entire DOM tree . Pull Parsing versus Push Parsing Streaming pull parse refers program model client application call method XML parse library need interact XML infoset—that , client get ( pull ) XML data explicitly ask . Streaming push parse refers program model XML parser sends ( push ) XML data client parser encounter element XML infoset—that , parser send data whether client ready use time . Pull parse provide several advantage push parse work XML stream : With pull parsing , client control application thread , call method parser need . By contrast , push processing , parser control application thread , client accept invocation parser . Pull parse library much small client code interact library much simple push library , even complex document . Pull client read multiple document one time single thread . A StAX pull parser filter XML document element unnecessary client ignore , support XML view non-XML data . StAX Use Cases The StAX specification define number use case API : Data bind Unmarshalling XML document Marshalling XML document Parallel document process Wireless communication Simple Object Access Protocol ( SOAP ) message process Parsing simple predictable structure Parsing graph representation forward reference Parsing Web Services Description Language ( WSDL ) Virtual data source Viewing XML data store database Viewing data Java object create XML data bind Navigating DOM tree stream event Parsing specific XML vocabulary Pipelined XML process A complete discussion use case beyond scope lesson . Please refer StAX specification information . Comparing StAX Other JAXP APIs As API JAXP family , StAX compare , among APIs , SAX , TrAX , JDOM . Of latter two , StAX powerful flexible TrAX JDOM , neither require much memory processor load useful , StAX , many case , outperform DOM-based APIs . The argument outline , weigh cost/benefits DOM model versus stream model , apply . With mind , close comparison make StAX SAX , StAX offer feature beneficial many case ; include : StAX-enabled client generally easy code SAX client . While argue SAX parser marginally easy write , StAX parser code small code necessary client interact parser simpler . StAX bidirectional API , mean read write XML document . SAX read , another API need want write XML document . SAX push API , whereas StAX pull . The trade-off push pull APIs outline apply . The follow table summarize comparative feature StAX , SAX , DOM , TrAX . ( The table adapt Does StAX Belong Your XML Toolbox ? Jeff Ryan ) . XML Parser API Feature Summary Feature StAX SAX DOM TrAX API Type Pull , stream Push , stream In memory tree XSLT Rule Ease Use High Medium High Medium XPath Capability No No Yes Yes CPU Memory Efficiency Good Good Varies Varies Forward Only Yes Yes No No Read XML Yes Yes Yes Yes Write XML Yes No Yes Yes Create , Read , Update , Delete No No Yes No