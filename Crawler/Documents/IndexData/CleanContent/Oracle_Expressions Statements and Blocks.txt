Now understand variable operator , 's time learn expression , statement , block . Operators may use building expression , compute value ; expression core component statement ; statement may group block . Expressions An expression construct make variable , operator , method invocation , construct accord syntax language , evaluate single value . You 've already see example expression , illustrate bold : int cadence = 0 ; anArray [ 0 ] = 100 ; System.out.println ( `` Element 1 index 0 : `` + anArray [ 0 ] ) ; int result = 1 + 2 ; // result 3 ( value1 == value2 ) System.out.println ( `` value1 == value2 '' ) ; The data type value return expression depend element use expression . The expression cadence = 0 return int assignment operator return value data type left-hand operand ; case , cadence int . As see expression , expression return type value well , boolean String . The Java programming language allow construct compound expression various small expression long data type require one part expression match data type . Here 's example compound expression : 1 * 2 * 3 In particular example , order expression evaluate unimportant result multiplication independent order ; outcome always , matter order apply multiplication . However , true expression . For example , following expression give different result , depend whether perform addition division operation first : x + / 100 // ambiguous You specify exactly expression evaluate use balanced parenthesis : ( ) . For example , make previous expression unambiguous , could write following : ( x + ) / 100 // unambiguous , recommended If n't explicitly indicate order operation perform , order determine precedence assign operator use within expression . Operators high precedence get evaluate first . For example , division operator high precedence addition operator . Therefore , follow two statement equivalent : x + / 100 x + ( / 100 ) // unambiguous , recommend When write compound expression , explicit indicate parenthesis operator evaluate first . This practice make code easy read maintain . Statements Statements roughly equivalent sentence natural language . A statement form complete unit execution . The following type expression make statement terminate expression semicolon ( ; ) . Assignment expression Any use ++ -- Method invocation Object creation expression Such statement call expression statement . Here example expression statement . // assignment statement aValue = 8933.234 ; // increment statement aValue++ ; // method invocation statement System.out.println ( `` Hello World ! `` ) ; // object creation statement Bicycle myBike = new Bicycle ( ) ; In addition expression statement , two kind statement : declaration statement control flow statement . A declaration statement declare variable . You 've see many example declaration statement already : // declaration statement double aValue = 8933.234 ; Finally , control flow statement regulate order statement get execute . You 'll learn control flow statement next section , Control Flow Statements Blocks A block group zero statement balance brace use anywhere single statement allow . The following example , BlockDemo , illustrate use block : class BlockDemo { public static void main ( String [ ] args ) { boolean condition = true ; ( condition ) { // begin block 1 System.out.println ( `` Condition true . `` ) ; } // end block one else { // begin block 2 System.out.println ( `` Condition false . `` ) ; } // end block 2 } }