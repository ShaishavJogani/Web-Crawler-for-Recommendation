Installed extension JAR file lib/ext directory Java Runtime Environment ( JRE™ ) software . As name implies , JRE runtime portion Java Development Kit contain platform 's core API without development tool compiler debugger . The JRE available either part Java Development Kit . The JRE strict subset JDK software . A subset JDK software directory tree look like : The JRE consist directory within highlight box diagram . Whether JRE stand-alone part JDK software , JAR file lib/ext JRE directory automatically treat runtime environment extension . Since instal extension extend platform 's core API , use judiciously . They rarely appropriate interface use single , small set application . Furthermore , since symbol define installed extension visible Java process , care take ensure visible symbol follow appropriate `` reverse domain name '' `` class hierarchy '' convention . For example , com.mycompany.MyClass . As Java 6 , extension JAR file may also place location independent particular JRE , extension share JREs instal system . Prior Java 6 , value java.ext.dirs refer single directory , Java 6 list directory ( like CLASSPATH ) specify location extension search . The first element path always lib/ext directory JRE . The second element directory outside JRE . This location allow extension JAR file instal use several JREs instal system . The location vary depend operating system : Solaris™ Operating System : /usr/jdk/packages/lib/ext Linux : /usr/java/packages/lib/ext Microsoft Windows : % SystemRoot % \Sun\Java\lib\ext Note installed extension place one directory extend platform JREs ( Java 6 later ) system . A Simple Example Let 's create simple installed extension . Our extension consist one class , RectangleArea , compute area rectangle : public final class RectangleArea { public static int area ( java.awt.Rectangle r ) { return r.width * r.height ; } } This class single method , area , take instance java.awt.Rectangle return rectangle 's area . Suppose want test RectangleArea application call AreaApp : import java.awt . * ; public class AreaApp { public static void main ( String [ ] args ) { int width = 10 ; int height = 5 ; Rectangle r = new Rectangle ( width , height ) ; System.out.println ( `` The rectangle 's area `` + RectangleArea.area ( r ) ) ; } } This application instantiate 10 x 5 rectangle , print rectangle 's area use RectangleArea.area method . Running AreaApp Without Extension Mechanism Let 's first review would run AreaApp application without use extension mechanism . We 'll assume RectangleArea class bundle JAR file name area.jar . The RectangleArea class part Java platform , course , would need place area.jar file class path order run AreaApp without get runtime exception . If area.jar directory /home/user , example , could use command : java -classpath . : /home/user/area.jar AreaApp The class path specify command contain current directory , contain AreaApp.class , path JAR file contain RectangleArea package . You would get desire output run command : The rectangle 's area 50 Running AreaApp Using Extension Mechanism Now let 's look would run AreaApp use RectangleArea class extension . To make RectangleArea class extension , place file area.jar lib/ext directory JRE . Doing automatically give RectangleArea status installed extension . With area.jar instal extension , run AreaApp without need specify class path : java AreaApp Because 're use area.jar installed extension , runtime environment able find load RectangleArea class even though n't specify class path . Similarly , applet application run user system would able find use RectangleArea class . If multiple JREs ( Java 6 later ) instal system want RectangleArea class available extension , instead instal lib/ext directory particular JRE , install system-wide location . For example , system run Linux , install area.jar directory /usr/java/packages/lib/ext . Then AreaApp run use different JREs instal system , example different browser configure use different JREs .