In previous section , saw quantifier attach one character , character class , capture group time . But , discuss notion capture group detail . Capturing group way treat multiple character single unit . They create place character group inside set parenthesis . For example , regular expression ( dog ) create single group contain letter `` '' `` '' `` g '' . The portion input string match capture group save memory later recall via backreferences ( discuss section , Backreferences ) . Numbering As describe Pattern API , capture group number count opening parenthesis leave right . In expression ( ( A ) ( B ( C ) ) ) , example , four group : ( ( A ) ( B ( C ) ) ) ( A ) ( B ( C ) ) ( C ) To find many group present expression , call groupCount method matcher object . The groupCount method return int show number capture group present matcher 's pattern . In example , groupCount would return number 4 , show pattern contain 4 capturing group . There also special group , group 0 , always represent entire expression . This group include total report groupCount . Groups begin ( ? pure , non-capturing group capture text count towards group total . ( You 'll see example non-capturing group later section Methods Pattern Class . ) It 's important understand group number Matcher method accept int specify particular group number parameter : public int start ( int group ) : Returns start index subsequence capture give group previous match operation . public int end ( int group ) : Returns index last character , plus one , subsequence capture give group previous match operation . public String group ( int group ) : Returns input subsequence capture give group previous match operation . Backreferences The section input string match capture group ( ) save memory later recall via backreference . A backreference specify regular expression backslash ( \ ) follow digit indicate number group recall . For example , expression ( \d\d ) define one capturing group match two digit row , recall later expression via backreference \1 . To match 2 digit , follow exact two digit , would use ( \d\d ) \1 regular expression : Enter regex : ( \d\d ) \1 Enter input string search : 1212 I find text `` 1212 '' start index 0 end index 4 . If change last two digits match fail : Enter regex : ( \d\d ) \1 Enter input string search : 1234 No match find . For nested capturing group , backreferencing work exactly way : Specify backslash follow number group recall .