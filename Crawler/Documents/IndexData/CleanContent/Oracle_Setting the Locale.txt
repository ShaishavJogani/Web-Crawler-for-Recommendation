An internationalized program display information differently throughout world . For example , program display different message Paris , Tokyo , New York . If localization process fine-tuned , program display different message New York London account difference American British English . How internationalized program identify appropriate language region end user ? Easy . It reference Locale object . A Locale object identifier particular combination language region . If class vary behavior accord Locale , say locale-sensitive . For example , NumberFormat class locale-sensitive ; format number return depend Locale . Thus NumberFormat may return number 902 300 ( France ) , 902.300 ( Germany ) , 902,300 ( United States ) . Locale object identifier . The real work , formatting detect word boundary , perform method locale-sensitive class . The following section explain work Locale object : Creating Locale When create Locale object , usually specify language code country code . A third parameter , variant , optional . BCP 47 Extensions This section show add Unicode locale extension private use extension Locale . Identifying Available Locales Locale-sensitive class support certain Locale definition . This section show determine Locale definition support . Language Tag Filtering Lookup This section describe internationalization support language tag , language tag filtering , language tag lookup . The Scope Locale On Java platform specify global Locale set environment variable run application . Instead either rely default Locale assign Locale locale-sensitive object . Locale-Sensitive Services SPI This section explain enable plug-in locale-dependent data service . These SPIs ( Service Provider Interface ) provide support locale addition currently available locale .