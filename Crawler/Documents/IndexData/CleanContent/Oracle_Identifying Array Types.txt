Array type may identify invoke Class.isArray ( ) . To obtain Class use one method describe Retrieving Class Objects section trail . The ArrayFind example identify field named class array type report component type . import java.lang.reflect.Field ; import java.lang.reflect.Type ; import static java.lang.System.out ; public class ArrayFind { public static void main ( String ... args ) { boolean find = false ; try { Class < ? > cl = Class.forName ( args [ 0 ] ) ; Field [ ] flds = cls.getDeclaredFields ( ) ; ( Field f : flds ) { Class < ? > c = f.getType ( ) ; ( c.isArray ( ) ) { found = true ; out.format ( `` % % n '' + `` Field : % % n '' + `` Type : % % n '' + `` Component Type : % % n '' , f , f.getName ( ) , c , c.getComponentType ( ) ) ; } } ( ! find ) { out.format ( `` No array field % n '' ) ; } // production code handle exception gracefully } catch ( ClassNotFoundException x ) { x.printStackTrace ( ) ; } } } The syntax returned value Class.get*Type ( ) describe Class.getName ( ) . The number ' [ ' character beginning type name indicate number dimension ( i.e . depth nest ) array . Samples output follow . User input italic . An array primitive type byte : $ java ArrayFind java.nio.ByteBuffer final byte [ ] java.nio.ByteBuffer.hb Field : hb Type : class [ B Component Type : byte An array reference type StackTraceElement : $ java ArrayFind java.lang.Throwable private java.lang.StackTraceElement [ ] java.lang.Throwable.stackTrace Field : stackTrace Type : class [ Ljava.lang.StackTraceElement ; Component Type : class java.lang.StackTraceElement predefined one-dimensional array reference type java.awt.Cursor cursorProperties two-dimensional array reference type String : $ java ArrayFind java.awt.Cursor protect static java.awt.Cursor [ ] java.awt.Cursor.predefined Field : predefined Type : class [ Ljava.awt.Cursor ; Component Type : class java.awt.Cursor static final java.lang.String [ ] [ ] java.awt.Cursor.cursorProperties Field : cursorProperties Type : class [ [ Ljava.lang.String ; Component Type : class [ Ljava.lang.String ;