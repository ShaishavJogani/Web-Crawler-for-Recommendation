A layered pane Swing container provide third dimension position component : depth , also know Z order . When add component layered pane , specify depth integer . The high number , closer component `` top '' position within container . If component overlap , `` closer '' component draw top component low depth . The relationship component depth determine position within depth . Note : The AWT Container API allow manipulate component Z order . For information , see AWT Focus Specification . Every Swing container root pane — JFrame , JApplet , JDialog , JInternalFrame — automatically layer pane . Most program explicitly use root pane 's layered pane , section discuss . You find information The Root Pane , provide overview , The Layered Pane , detail . This section tell create layered pane use anywhere use regular Swing container . Swing provide two layer pane class . The first , JLayeredPane , class root pane use class use example section . The second , JDesktopPane , JLayeredPane subclass specialize task hold internal frame . For example use JDesktopPane , see How Use Internal Frames . Here picture application create layered pane place overlap , color label different depth : Try : : Click Launch button run LayeredPane Demo use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Move mouse around low part window . The image Duke drag behind green red label , front three label . Use combo box top window change Duke 's depth . Use check box set whether Duke top position — position 0 — within current depth . Here code LayeredPaneDemo.java create layered pane : layeredPane = new JLayeredPane ( ) ; layeredPane.setPreferredSize ( new Dimension ( 300 , 310 ) ) ; layeredPane.setBorder ( BorderFactory.createTitledBorder ( `` Move Mouse Move Duke '' ) ) ; layeredPane.addMouseMotionListener ( new MouseMotionAdapter ( ) { ... } ) ; The code use JLayeredPane 's constructor — no-argument constructor — create layered pane . The rest code use method inherit superclass give layered pane preferred size border , add mouse-motion listener . The mouse-motion listener move Duke image around response mouse movement . Although show code , example add layered pane frame 's content pane . As show bit later , add component layer pane use add method . When add component layered pane , specify component depth , optionally , position within depth . The layered pane demo program contain six label — five color label sixth one display Duke image . As program demonstrate , depth component position within depth change dynamically . The rest section cover topic : Adding Components Setting Component Depth Setting Component Position Within Its Depth Laying Out Components Layered Pane The Layered Pane API Examples Use Layered Panes Adding Components Setting Component Depth Here code sample program add colored label layer pane : ( int = 0 ; < ... number label ... ; i++ ) { JLabel label = createColoredLabel ( ... ) ; layeredPane.add ( label , new Integer ( ) ) ; ... } You find implementation createColoredLabel method source code program . It create opaque JLabel initialize background color , border , text , size . The example program use two-argument version add method . The first argument component add , second Integer object , specify depth . This program use loop iteration variable specify depth . The actual value matter much . What matter relative value depth consistent within program use depth . Note : If use root pane 's layered pane , sure use depth convention . Refer The Layered Pane detail . That section show modify LayeredPaneDemo use root pane 's layered pane . With modification , see dragging Duke image relate combo box control panel . As see example program , component overlap , component high depth top component low depth . To change component depth dynamically , use setLayer method . In example , user change Duke 's layer make selection combo box . Here actionPerformed method action listener register combo box : public void actionPerformed ( ActionEvent e ) { int position = onTop.isSelected ( ) ? 0 : 1 ; layeredPane.setLayer ( dukeLabel , layerList.getSelectedIndex ( ) , position ) ; } The setLayer method use take three argument : component whose depth set , new depth , position within depth . JLayeredPane two-argument version setLayer take component new depth . That method put component bottom position depth . A note caution : When add component layer pane specify layer Integer . When use setLayer change component 's layer , use int . You might think use int instead Integer add method , compiler would complain program would throw illegal argument exception . But compiler say nothing , result common layered pane problem . You use API table end section check type argument return value method deal layer . Setting Component 's Position Within Its Depth The following code create label display Duke 's image , add label layer pane . final ImageIcon icon = createImageIcon ( `` images/dukeWaveRed.gif '' ) ; ... dukeLabel = new JLabel ( icon ) ; ... dukeLabel.setBounds ( 15 , 225 , icon.getIconWidth ( ) , icon.getIconHeight ( ) ) ; ... layeredPane.add ( dukeLabel , new Integer ( 2 ) , 0 ) ; This code use three-argument version add method . The third argument specify Duke label position within depth , determine component 's relationship component depth . Positions specify int -1 ( n - 1 ) , n number component depth . Unlike layer number , small position number , high component within depth . Using -1 use n - 1 ; indicate bottom-most position . Using 0 specifies component top-most position within depth . As following figure show , exception -1 , low position number indicate high position within depth . A component 's position within layer change dynamically . In example , use check box determine whether Duke label top position depth . Here 's actionPerformed method action listener register check box : public void actionPerformed ( ActionEvent e ) { ( onTop.isSelected ( ) ) layeredPane.moveToFront ( dukeLabel ) ; else layeredPane.moveToBack ( dukeLabel ) ; } When user select check box , moveToFront method move Duke front ( position 0 ) . And user deselects check box , Duke get move back moveToBack method . You also use setPosition method three-argument version setLayer change component 's position . Laying Out Components Layered Pane By default layered pane layout manager . This mean typically write code position size component put layered pane . The example use setBounds method set size position label : dukeLabel.setBounds ( 15 , 225 , icon.getIconWidth ( ) , icon.getIconHeight ( ) ) ; ... label.setBounds ( origin.x , origin.y , 140 , 140 ) ; When user move mouse around , program call setPosition change Duke 's position : dukeLabel.setLocation ( e.getX ( ) -XFUDGE , e.getY ( ) -YFUDGE ) ; Although layered pane layout manager default , still assign layout manager layer pane . All layout manager provide Java platform arrange component one layer . Here version previous demo set layered pane 's layout manager instance GridLayout , use layout manager lay six colored label . You find code program LayeredPaneDemo2.java . You run LayeredPaneDemo2 ( download JDK 7 later ) . If want compile example , consult example index list necessary file . Many program use intermediate container ( panel ) layout manager lay component layer , use absolute positioning lay component different layer . For information absolute positioning , see Doing Without Layout Manager ( Absolute Positioning ) . The Layered Pane API The following table list commonly use JLayeredPane constructor method . Other method likely invoke JLayeredPane object inherit superclass , setBorder , setPreferredSize , . See The JComponent API table commonly use inherit method . The API use layered pane fall category : Creating Getting Layered Pane Layering Components Setting Component 's Intra-Layer Positions Creating Getting Layered Pane Method Constructor Purpose JLayeredPane ( ) Create layered pane . JLayeredPane getLayeredPane ( ) ( JApplet , JDialog , JFrame , JInternalFrame ) Get automatic layer pane applet , dialog , frame , internal frame . Layering Components Method Purpose void add ( Component ) void add ( Component , Object ) void add ( Component , Object , int ) Add specified component layer pane . The second argument , present , Integer indicate layer . The third argument , present , indicate component 's position within layer . If use one-argument version method , component add layer 0 . If use one- two-argument version method , component place underneath component currently layer . void setLayer ( Component , int ) void setLayer ( Component , int , int ) Change component 's layer . The second argument indicate layer . The third argument , present , indicate component 's position within layer . int getLayer ( Component ) int getLayer ( JComponent ) Get layer specified component . int getComponentCountInLayer ( int ) Get number component specify layer . The value return method useful compute position value . Component [ ] getComponentsInLayer ( int ) Get array component specify layer . int highestLayer ( ) int lowestLayer ( ) Compute high low layer currently use . Setting Components ' Intra-Layer Positions Method Purpose void setPosition ( Component , int ) int getPosition ( Component ) Set get position specified component within layer . void moveToFront ( Component ) void moveToBack ( Component ) Move specified component front back layer . Examples Use Layered Panes This table show example use JLayeredPane example describe . Example Where Described Notes LayeredPaneDemo This section Illustrates layer intra-layer position JLayeredPane . LayeredPaneDemo2 This section Uses layout manager help lay component layered pane . RootLayeredPaneDemo The Layered Pane A version LayeredPaneDemo modify use root pane 's layered pane . InternalFrameDemo How Use Internal Frames Uses JDesktopFrame manage internal frame .