Now create public key private key , ready sign data . In example sign data contain file . GenSig get file name command line . A digital signature create ( verify ) use instance Signature class . Signing data , generate digital signature data , following step . Get Signature Object : The follow get Signature object generate verify signature use DSA algorithm , algorithm program generate key previous step , Generate Public Private Keys . Signature dsa = Signature.getInstance ( `` SHA1withDSA '' , `` SUN '' ) ; Note : When specify signature algorithm name , also include name message digest algorithm use signature algorithm . SHA1withDSA way specify DSA signature algorithm , use SHA-1 message digest algorithm . Initialize Signature Object Before Signature object use sign verify , must initialize . The initialization method sign require private key . Use private key place PrivateKey object name priv previous step . dsa.initSign ( priv ) ; Supply Signature Object Data Be Signed This program use data file whose name specify first ( ) command line argument . The program read data buffer time supply Signature object call update method . FileInputStream fis = new FileInputStream ( args [ 0 ] ) ; BufferedInputStream bufin = new BufferedInputStream ( fis ) ; byte [ ] buffer = new byte [ 1024 ] ; int len ; ( ( len = bufin.read ( buffer ) ) > = 0 ) { dsa.update ( buffer , 0 , len ) ; } ; bufin.close ( ) ; Generate Signature Once data supply Signature object , generate digital signature data . byte [ ] realSig = dsa.sign ( ) ;