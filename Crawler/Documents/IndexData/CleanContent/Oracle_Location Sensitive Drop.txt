Sometimes complex component want user able drop part , others . Perhaps table allow data drop certain column ; perhaps tree allow data drop certain node . Obviously want cursor provide accurate feedback — show drop location specific part component accept drop . This simple accomplish instal necessary logic canImport ( TransferHandler.TransferSupport ) method TransferHandler class . It work particular version canImport call continously drag gesture bound component . When method return true , Swing show drop cursor drop location visually indicate ; method return false , Swing show `` no-drag '' cursor drop location display . For example , imagine table allow drop , first column . The canImport method might look something like : public boolean canImport ( TransferHandler.TransferSupport info ) { // demo , support drop ( clipboard paste ) ( ! info.isDrop ( ) ) { return false ; } // import Strings ( ! info.isDataFlavorSupported ( DataFlavor.stringFlavor ) ) { return false ; } // fetch drop location JTable.DropLocation dl = ( JTable.DropLocation ) info.getDropLocation ( ) ; int column = dl.getColumn ( ) ; // support invalid column first column ( column == -1 || column == 0 ) { return false ; } return true ; } The code display bold indicate location-sensitive drop logic : When user drop data way column calculate ( therefore invalid ) user drop text first column , canImport method return false — Swing show `` no-drag '' mouse cursor . As soon user move mouse first column canImport return true Swing show drag cursor . Next , show demo tree implement location-sensitive drop .