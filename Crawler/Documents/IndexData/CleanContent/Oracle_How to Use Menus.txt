A menu provide space-saving way let user choose one several option . Other component user make one-of-many choice include combo box , list , radio button , spinner , tool bar . If menu item perform action duplicate another menu item tool-bar button , addition section read How Use Actions . Menus unique , convention , n't place component UI . Instead , menu usually appear either menu bar popup menu . A menu bar contain one menu customary , platform-dependent location — usually along top window . A popup menu menu invisible user make platform-specific mouse action , press right mouse button , popup-enabled component . The popup menu appear cursor . The following figure show many menu-related component : menu bar , menu , menu item , radio button menu item , check box menu item , separator . As see , menu item either image text , . You also specify property , font color . The rest section teach menu component tell use various menu feature : The menu component hierarchy Creating menu Handling event menu item Enabling keyboard operation Bringing popup menu Customizing menu layout The Menu API Examples use menus The Menu Component Hierarchy Here picture inheritance hierarchy menu-related class : As figure show , menu item ( include menu ) simply button . You might wonder menu , 's button , show menu item . The answer menu activate , automatically bring popup menu display menu item . Creating Menus The following code create menu show near beginning menu section . The bold line code create connect menu object ; code set customize menu object . You find entire program MenuLookDemo.java . Other require file list example index . Try : Click Launch button run MenuLook Demo use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Because code event handling , menu nothing useful except look . If run example , 'll notice despite lack custom event handling , menu submenu appear , check box radio button respond appropriately user choose . //Where GUI create : JMenuBar menuBar ; JMenu menu , submenu ; JMenuItem menuItem ; JRadioButtonMenuItem rbMenuItem ; JCheckBoxMenuItem cbMenuItem ; //Create menu bar . menuBar = new JMenuBar ( ) ; //Build first menu . menu = new JMenu ( `` A Menu '' ) ; menu.setMnemonic ( KeyEvent.VK_A ) ; menu.getAccessibleContext ( ) .setAccessibleDescription ( `` The menu program menu item '' ) ; menuBar.add ( menu ) ; //a group JMenuItems menuItem = new JMenuItem ( `` A text-only menu item '' , KeyEvent.VK_T ) ; menuItem.setAccelerator ( KeyStroke.getKeyStroke ( KeyEvent.VK_1 , ActionEvent.ALT_MASK ) ) ; menuItem.getAccessibleContext ( ) .setAccessibleDescription ( `` This n't really anything '' ) ; menu.add ( menuItem ) ; menuItem = new JMenuItem ( `` Both text icon '' , new ImageIcon ( `` images/middle.gif '' ) ) ; menuItem.setMnemonic ( KeyEvent.VK_B ) ; menu.add ( menuItem ) ; menuItem = new JMenuItem ( new ImageIcon ( `` images/middle.gif '' ) ) ; menuItem.setMnemonic ( KeyEvent.VK_D ) ; menu.add ( menuItem ) ; //a group radio button menu item menu.addSeparator ( ) ; ButtonGroup group = new ButtonGroup ( ) ; rbMenuItem = new JRadioButtonMenuItem ( `` A radio button menu item '' ) ; rbMenuItem.setSelected ( true ) ; rbMenuItem.setMnemonic ( KeyEvent.VK_R ) ; group.add ( rbMenuItem ) ; menu.add ( rbMenuItem ) ; rbMenuItem = new JRadioButtonMenuItem ( `` Another one '' ) ; rbMenuItem.setMnemonic ( KeyEvent.VK_O ) ; group.add ( rbMenuItem ) ; menu.add ( rbMenuItem ) ; //a group check box menu item menu.addSeparator ( ) ; cbMenuItem = new JCheckBoxMenuItem ( `` A check box menu item '' ) ; cbMenuItem.setMnemonic ( KeyEvent.VK_C ) ; menu.add ( cbMenuItem ) ; cbMenuItem = new JCheckBoxMenuItem ( `` Another one '' ) ; cbMenuItem.setMnemonic ( KeyEvent.VK_H ) ; menu.add ( cbMenuItem ) ; //a submenu menu.addSeparator ( ) ; submenu = new JMenu ( `` A submenu '' ) ; submenu.setMnemonic ( KeyEvent.VK_S ) ; menuItem = new JMenuItem ( `` An item submenu '' ) ; menuItem.setAccelerator ( KeyStroke.getKeyStroke ( KeyEvent.VK_2 , ActionEvent.ALT_MASK ) ) ; submenu.add ( menuItem ) ; menuItem = new JMenuItem ( `` Another item '' ) ; submenu.add ( menuItem ) ; menu.add ( submenu ) ; //Build second menu menu bar . menu = new JMenu ( `` Another Menu '' ) ; menu.setMnemonic ( KeyEvent.VK_N ) ; menu.getAccessibleContext ( ) .setAccessibleDescription ( `` This menu nothing '' ) ; menuBar.add ( menu ) ; ... frame.setJMenuBar ( theJMenuBar ) ; As code show , set menu bar JFrame , use setJMenuBar method . To add JMenu JMenuBar , use add ( JMenu ) method . To add menu item submenu JMenu , use add ( JMenuItem ) method . Note : Menu item , like component , one container . If try add menu item second menu , menu item remove first menu add second . For way implement multiple component thing , see How Use Actions . Other method precede code include setAccelerator setMnemonic , discuss little later Enabling Keyboard Operation . The setAccessibleDescription method discuss How Support Assistive Technologies . Handling Events Menu Items To detect user choose JMenuItem , listen action event ( would JButton ) . To detect user choose JRadioButtonMenuItem , listen either action event item event , describe How Use Radio Buttons . For JCheckBoxMenuItems , generally listen item event , describe How Use Check Boxes . Try : Click Launch button run Menu Demo use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Here code implement event handling : public class MenuDemo ... implement ActionListener , ItemListener { ... public MenuDemo ( ) { // ... JMenuItem instance : menuItem.addActionListener ( ) ; ... //for JRadioButtonMenuItem : rbMenuItem.addActionListener ( ) ; ... //for JCheckBoxMenuItem : cbMenuItem.addItemListener ( ) ; ... } public void actionPerformed ( ActionEvent e ) { // ... Get information action event ... // ... Display text area ... } public void itemStateChanged ( ItemEvent e ) { // ... Get information item event ... // ... Display text area ... } For example handle action item event , see button , radio button , check box section , well list example end section . Enabling Keyboard Operation Menus support two kind keyboard alternative : mnemonic accelerator . Mnemonics offer way use keyboard navigate menu hierarchy , increase accessibility program . Accelerators , hand , offer keyboard shortcut bypass navigate menu hierarchy . Mnemonics user ; accelerator power user . A mnemonic key make already visible menu item choose . For example , MenuDemo first menu mnemonic A , second menu item mnemonic B . This mean , run MenuDemo Java look feel , press Alt A key make first menu appear . While first menu visible , press B key ( without Alt ) make second menu item choose . A menu item generally display mnemonic underline first occurrence mnemonic character menu item 's text , follow snapshot show . An accelerator key combination cause menu item choose , whether 's visible . For example , press Alt 2 key MenuDemo make first item first menu 's submenu choose , without bring menu . Only leaf menu item — menu n't bring menu — accelerator . The following snapshot show Java look feel display menu item accelerator . You specify mnemonic either construct menu item setMnemonic method . To specify accelerator , use setAccelerator method . Here example set mnemonic accelerator : //Setting mnemonic construct menu item : menuItem = new JMenuItem ( `` A text-only menu item '' , KeyEvent.VK_T ) ; //Setting mnemonic creation time : menuItem.setMnemonic ( KeyEvent.VK_T ) ; //Setting accelerator : menuItem.setAccelerator ( KeyStroke.getKeyStroke ( KeyEvent.VK_T , ActionEvent.ALT_MASK ) ) ; As see , set mnemonic specify KeyEvent constant corresponding key user press . To specify accelerator must use KeyStroke object , combine key ( specify KeyEvent constant ) modifier-key mask ( specify ActionEvent constant ) . Note : Because popup menu , unlike regular menu , n't always contain component , accelerator popup menu item n't work unless popup menu visible . Bringing Up Popup Menu To bring popup menu ( JPopupMenu ) , must register mouse listener component popup menu associate . The mouse listener must detect user request popup menu bring . The exact gesture bring popup menu varies look feel . In Microsoft Windows , user convention bring popup menu release right mouse button cursor component popup-enabled . In Java look feel , customary trigger either press right mouse button ( popup go away button release ) click ( popup stay ) . Try : Click Launch button run PopupMenu Demo use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . // ... instance variable declare : JPopupMenu popup ; // ... GUI construct : //Create popup menu . popup = new JPopupMenu ( ) ; menuItem = new JMenuItem ( `` A popup menu item '' ) ; menuItem.addActionListener ( ) ; popup.add ( menuItem ) ; menuItem = new JMenuItem ( `` Another popup menu item '' ) ; menuItem.addActionListener ( ) ; popup.add ( menuItem ) ; //Add listener component bring popup menu . MouseListener popupListener = new PopupListener ( ) ; output.addMouseListener ( popupListener ) ; menuBar.addMouseListener ( popupListener ) ; ... class PopupListener extend MouseAdapter { public void mousePressed ( MouseEvent e ) { maybeShowPopup ( e ) ; } public void mouseReleased ( MouseEvent e ) { maybeShowPopup ( e ) ; } private void maybeShowPopup ( MouseEvent e ) { ( e.isPopupTrigger ( ) ) { popup.show ( e.getComponent ( ) , e.getX ( ) , e.getY ( ) ) ; } } } Popup menu interesting implementation detail . One every menu associate popup menu . When menu activate , use associated popup menu show menu item . Another detail popup menu use another component implement window contain menu item . Depending circumstance popup menu display , popup menu might implement `` window '' use lightweight component ( JPanel ) , `` mediumweight '' component ( Panel ) , heavyweight window ( something inherit Window ) . Lightweight popup window efficient heavyweight window , prior Java SE Platform 6 Update 12 release , n't work well heavyweight component inside GUI . Specifically , lightweight popup 's display area intersect heavyweight component 's display area , heavyweight component draw top . This one reason , prior 6u12 release , recommend mix heavyweight lightweight component . If use old release absolutely need use heavyweight component GUI , invoke JPopupMenu.setLightWeightPopupEnabled ( false ) disable lightweight popup window . For information mix component 6u12 release later , please see Mixing Heavyweight Lightweight Components . Customizing Menu Layout Because menu make ordinary Swing component , easily customize . For example , add lightweight component JMenu JMenuBar . And JMenuBar use BoxLayout , customize menu bar 's layout add invisible component . Here example add glue component menu bar , last menu right edge menu bar : // ... create add menu ... menuBar.add ( Box.createHorizontalGlue ( ) ) ; // ... create rightmost menu ... menuBar.add ( rightMenu ) ; Try : Click Launch button run MenuGlue Demo use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Here 's modified menu layout MenuGlueDemo display : Another way change look menu change layout manager use control . For example , change menu bar 's layout manager default left-to-right BoxLayout something GridLayout . Try : Click Launch button run MenuLayout Demo use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Here 's picture menu layout MenuLayoutDemo create : The Menu API The following table list commonly use menu constructor method . The API use menu fall category : Creating Setting Up Menu Bars Creating Populating Menus Creating , Populating , Controlling Popup Menus Implementing Menu Items Creating Setting Up Menu Bars Constructor Method Purpose JMenuBar ( ) Creates menu bar . JMenu add ( JMenu ) Adds menu end menu bar . void setJMenuBar ( JMenuBar ) JMenuBar getJMenuBar ( ) ( JApplet , JDialog , JFrame , JInternalFrame , JRootPane ) Sets get menu bar applet , dialog , frame , internal frame , root pane . Creating Populating Menus Constructor Method Purpose JMenu ( ) JMenu ( String ) JMenu ( Action ) Creates menu . The string specify text display menu . The Action specify text property menu ( see How Use Actions ) . JMenuItem add ( JMenuItem ) JMenuItem add ( String ) Adds menu item current end menu . If argument string , menu automatically create JMenuItem object display specified text . void addSeparator ( ) Adds separator current end menu . JMenuItem insert ( JMenuItem , int ) void insert ( String , int ) void insertSeparator ( int ) Inserts menu item separator menu specified position . The first menu item position 0 , second position 1 , . The JMenuItem String argument treat corresponding add method . void remove ( JMenuItem ) void remove ( int ) void removeAll ( ) Removes specified item ( ) menu . If argument integer , specify position menu item remove . Creating , Populating , Controlling Popup Menus Constructor Method Purpose JPopupMenu ( ) JPopupMenu ( String ) Creates popup menu . The optional string argument specify title look feel might display part popup window . JMenuItem add ( JMenuItem ) JMenuItem add ( String ) Adds menu item current end popup menu . If argument string , menu automatically create JMenuItem object display specified text . void addSeparator ( ) Adds separator current end popup menu . void insert ( Component , int ) Inserts menu item menu specified position . The first menu item position 0 , second position 1 , . The Component argument specify menu item add . void remove ( int ) void removeAll ( ) Removes specified item ( ) menu . If argument integer , specify position menu item remove . static void setLightWeightPopupEnabled ( boolean ) By default , Swing implement menu 's window use lightweight component . This cause problem use heavyweight component Swing program , describe Bringing Up Popup Menu . ( This one several reason avoid use heavyweight component . ) As workaround , invoke JPopupMenu.setLightWeightPopupEnabled ( false ) . void show ( Component , int , int ) Display popup menu specified x , position ( specify order integer argument ) coordinate system specified component . Implementing Menu Items Constructor Method Purpose JMenuItem ( ) JMenuItem ( String ) JMenuItem ( Icon ) JMenuItem ( String , Icon ) JMenuItem ( String , int ) JMenuItem ( Action ) Creates ordinary menu item . The icon argument , present , specify icon menu item display . Similarly , string argument specify text menu item display . The integer argument specify keyboard mnemonic use . You specify relevant VK constant define KeyEvent class . For example , specify A key , use KeyEvent.VK_A . The constructor Action parameter set menu item 's Action , cause menu item 's property initialize Action . See How Use Actions detail . JCheckBoxMenuItem ( ) JCheckBoxMenuItem ( String ) JCheckBoxMenuItem ( Icon ) JCheckBoxMenuItem ( String , Icon ) JCheckBoxMenuItem ( String , boolean ) JCheckBoxMenuItem ( String , Icon , boolean ) Creates menu item look act like check box . The string argument , , specify text menu item display . If specify true boolean argument , menu item initially select ( check ) . Otherwise , menu item initially unselected . JRadioButtonMenuItem ( ) JRadioButtonMenuItem ( String ) JRadioButtonMenuItem ( Icon ) JRadioButtonMenuItem ( String , Icon ) JRadioButtonMenuItem ( String , boolean ) JRadioButtonMenuItem ( Icon , boolean ) JRadioButtonMenuItem ( String , Icon , boolean ) Creates menu item look act like radio button . The string argument , , specify text menu item display . If specify true boolean argument , menu item initially select . Otherwise , menu item initially unselected . void setState ( boolean ) boolean getState ( ) ( JCheckBoxMenuItem ) Set get selection state check box menu item . void setEnabled ( boolean ) If argument true , enable menu item . Otherwise , disable menu item . void setMnemonic ( int ) Set mnemonic enable keyboard navigation menu menu item . Use one VK constant define KeyEvent class . void setAccelerator ( KeyStroke ) Set accelerator activate menu item . void setActionCommand ( String ) Set name action perform menu item . void addActionListener ( ActionListener ) void addItemListener ( ItemListener ) Add event listener menu item . See Handling Events Menu Items detail . void setAction ( Action ) Set Action associate menu item . See How Use Actions detail . Many precede method inherit AbstractButton . See The Button API information useful method AbstractButton provide . Examples Use Menus Menus use example . Example Where Described Notes MenuLookDemo This section ( Creating Menus ) A simple example create kind menu except popup menu , n't handle event menu item . MenuDemo This section ( Handling Events Menu Items ) Adds event handle MenuLookDemo . PopupMenuDemo This section ( Bringing Up Popup Menu ) Adds popup menu MenuDemo . MenuGlueDemo This section ( Customizing Menu Layout ) Demonstrates affect menu layout add invisible component menu bar . MenuLayoutDemo This section ( Customizing Menu Layout ) Implements sideways-opening menu arrange vertical menu bar . MenuSelectionManagerDemo — Adds highlight detection MenuDemo . To see feature , click menu move mouse menu item submenu . Once per second , text area update information currently highlight menu item , confuse menu item user eventually choose . This demo use default MenuSelectionManager , track state menu hierarchy . ActionDemo How Use Actions Uses Action object implement menu item duplicate functionality provide tool bar button . Framework — Brings multiple identical frame , menu menu bar . InternalFrameDemo How Use Internal Frames Uses menu item create window . See Using JavaFX UI Controls : Menu tutorial learn create menu JavaFX .