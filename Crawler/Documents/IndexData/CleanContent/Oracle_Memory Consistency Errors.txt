Memory consistency error occur different thread inconsistent view data . The cause memory consistency error complex beyond scope tutorial . Fortunately , programmer need detailed understanding cause . All need strategy avoid . The key avoid memory consistency error understand happens-before relationship . This relationship simply guarantee memory writes one specific statement visible another specific statement . To see , consider following example . Suppose simple int field define initialize : int counter = 0 ; The counter field share two thread , A B . Suppose thread A increment counter : counter++ ; Then , shortly afterwards , thread B print counter : System.out.println ( counter ) ; If two statement execute thread , would safe assume value print would `` 1 '' . But two statement execute separate thread , value print might well `` 0 '' , 's guarantee thread A 's change counter visible thread B â€” unless programmer establish happens-before relationship two statement . There several action create happens-before relationship . One synchronization , see following section . We 've already see two action create happens-before relationship . When statement invoke Thread.start , every statement happens-before relationship statement also happens-before relationship every statement execute new thread . The effect code lead creation new thread visible new thread . When thread terminates cause Thread.join another thread return , statement execute terminate thread happens-before relationship statement follow successful join . The effect code thread visible thread perform join . For list action create happens-before relationship , refer Summary page java.util.concurrent package..