The HighScore class store protects access user 's high score ExampleGame ( game call ) . For simplicity , class save high score value file , call .highscore , user 's home directory . However , allow ExampleGame retrieve update user 's high score value , class check make sure user grant ExampleGame permission access high score his/her security policy file . Checking ExampleGame HighScorePermission To check whether ExampleGame permission access user 's high score , HighScore class must : Call System.getSecurityManager ( ) get currently instal security manager . If result null ( i.e. , security manager , oppose caller application unrestricted ) , Construct HighScorePermission object , Call security manager 's checkPermission method , pas newly construct HighScorePermission object . Here code : SecurityManager sm = System.getSecurityManager ( ) ; ( sm ! = null ) { sm.checkPermission ( new HighScorePermission ( gameName ) ) ; } The checkPermission method essentially ask security manager ExampleGame specify HighScorePermission . In word , ask security manager ExampleGame permission update user 's high score value specified game ( ExampleGame ) . The underlying security framework consult user 's security policy see ExampleGame indeed permission . The HighScore Code Here complete source code HighScore class . Note : The doPrivileged method call use enable HighScore temporarily access resource available available code call ( ExampleGame ) . For example , expect policy file grant HighScore permission access .highscore file user 's home directory , grant permission game , ExampleGame .