A PatternSyntaxException unchecked exception indicate syntax error regular expression pattern . The PatternSyntaxException class provide follow method help determine go wrong : public String getDescription ( ) : Retrieves description error . public int getIndex ( ) : Retrieves error index . public String getPattern ( ) : Retrieves erroneous regular expression pattern . public String getMessage ( ) : Returns multi-line string contain description syntax error index , erroneous regular-expression pattern , visual indication error index within pattern . The following source code , RegexTestHarness2.java , update test harness check malformed regular expression : import java.io.Console ; import java.util.regex.Pattern ; import java.util.regex.Matcher ; import java.util.regex.PatternSyntaxException ; public class RegexTestHarness2 { public static void main ( String [ ] args ) { Pattern pattern = null ; Matcher matcher = null ; Console console = System.console ( ) ; ( console == null ) { System.err.println ( `` No console . `` ) ; System.exit ( 1 ) ; } ( true ) { try { pattern = Pattern.compile ( console.readLine ( `` % nEnter regex : `` ) ) ; matcher = pattern.matcher ( console.readLine ( `` Enter input string search : `` ) ) ; } catch ( PatternSyntaxException pse ) { console.format ( `` There problem '' + `` regular expression ! % n '' ) ; console.format ( `` The pattern question : % % n '' , pse.getPattern ( ) ) ; console.format ( `` The description : % % n '' , pse.getDescription ( ) ) ; console.format ( `` The message : % % n '' , pse.getMessage ( ) ) ; console.format ( `` The index : % % n '' , pse.getIndex ( ) ) ; System.exit ( 0 ) ; } boolean found = false ; ( matcher.find ( ) ) { console.format ( `` I find text '' + `` \ '' % s\ '' start `` + `` index % end index % d. % n '' , matcher.group ( ) , matcher.start ( ) , matcher.end ( ) ) ; find = true ; } ( ! find ) { console.format ( `` No match found. % n '' ) ; } } } } To run test , enter ? ) foo regular expression . This mistake common scenario programmer forget opening parenthesis embedded flag expression ( ? ) . Doing produce following result : Enter regex : ? ) There problem regular expression ! The pattern question : ? ) The description : Dangling meta character ' ? ' The message : Dangling meta character ' ? ' near index 0 ? ) ^ The index : 0 From output , see syntax error dangle metacharacter ( question mark ) index 0 . A miss opening parenthesis culprit .