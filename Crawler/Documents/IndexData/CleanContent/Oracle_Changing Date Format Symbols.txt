Version note : This Date Time section use date time APIs java.util package . The java.time APIs , available JDK 8 release , provide comprehensive date time model offer significant improvement java.util class . The java.time APIs describe Date Time trail . The Legacy Date-Time Code page might particular interest . The format method SimpleDateFormat class return String compose digit symbol . For example , String `` Friday , April 10 , 2009 , '' symbol `` Friday '' `` April . '' If symbol encapsulate SimpleDateFormat n't meet need , change DateFormatSymbols . You change symbol represent name month , day week , time zone , among others . The following table list DateFormatSymbols method allow modify symbol : DateFormatSymbol Methods Setter Method Example Symbol Method Modifies setAmPmStrings PM setEras AD setMonths December setShortMonths Dec setShortWeekdays Tue setWeekdays Tuesday setZoneStrings PST The following example invokes setShortWeekdays change short name day week lowercase uppercase character . The full source code example DateFormatSymbolsDemo . The first element array argument setShortWeekdays null String . Therefore array one-based rather zero-based . The SimpleDateFormat constructor accept modified DateFormatSymbols object argument . Here source code : Date today ; String result ; SimpleDateFormat formatter ; DateFormatSymbols symbols ; String [ ] defaultDays ; String [ ] modifiedDays ; symbol = new DateFormatSymbols ( new Locale ( `` en '' , `` US '' ) ) ; defaultDays = symbols.getShortWeekdays ( ) ; ( int = 0 ; < defaultDays.length ; i++ ) { System.out.print ( defaultDays [ ] + `` `` ) ; } System.out.println ( ) ; String [ ] capitalDays = { `` '' , `` SUN '' , `` MON '' , `` TUE '' , `` WED '' , `` THU '' , `` FRI '' , `` SAT '' } ; symbols.setShortWeekdays ( capitalDays ) ; modifiedDays = symbols.getShortWeekdays ( ) ; ( int = 0 ; < modifiedDays.length ; i++ ) { System.out.print ( modifiedDays [ ] + `` `` ) ; } System.out.println ( ) ; System.out.println ( ) ; formatter = new SimpleDateFormat ( `` E '' , symbol ) ; today = new Date ( ) ; result = formatter.format ( today ) ; System.out.println ( `` Today 's day week : `` + result ) ; The precede code generate output : Sun Mon Tue Wed Thu Fri Sat SUN MON TUE WED THU FRI SAT Today 's day week : MON