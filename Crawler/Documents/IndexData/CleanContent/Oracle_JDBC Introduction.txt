The JDBC API Java API access kind tabular data , especially data store Relational Database . JDBC help write Java application manage three programming activity : Connect data source , like database Send query update statement database Retrieve process result receive database answer query The following simple code fragment give simple example three step : public void connectToAndQueryDatabase ( String username , String password ) { Connection con = DriverManager.getConnection ( `` jdbc : myDriver : myDatabase '' , username , password ) ; Statement stmt = con.createStatement ( ) ; ResultSet rs = stmt.executeQuery ( `` SELECT , b , c FROM Table1 '' ) ; ( rs.next ( ) ) { int x = rs.getInt ( `` '' ) ; String = rs.getString ( `` b '' ) ; float f = rs.getFloat ( `` c '' ) ; } } This short code fragment instantiate DriverManager object connect database driver log database , instantiate Statement object carry SQL language query database ; instantiate ResultSet object retrieve result query , execute simple loop , retrieve display result . It 's simple . JDBC Product Components JDBC include four component : The JDBC API — The JDBC™ API provide programmatic access relational data Java™ programming language . Using JDBC API , application execute SQL statement , retrieve result , propagate change back underlie data source . The JDBC API also interact multiple data source distributed , heterogeneous environment . The JDBC API part Java platform , include Java™ Standard Edition ( Java™ SE ) Java™ Enterprise Edition ( Java™ EE ) . The JDBC 4.0 API divide two package : java.sql javax.sql . Both package include Java SE Java EE platform . JDBC Driver Manager — The JDBC DriverManager class defines object connect Java application JDBC driver . DriverManager traditionally backbone JDBC architecture . It quite small simple . The Standard Extension package javax.naming javax.sql let use DataSource object register Java Naming Directory Interface™ ( JNDI ) name service establish connection data source . You use either connect mechanism , use DataSource object recommend whenever possible . JDBC Test Suite — The JDBC driver test suite help determine JDBC driver run program . These test comprehensive exhaustive , exercise many important feature JDBC API . JDBC-ODBC Bridge — The Java Software bridge provide JDBC access via ODBC driver . Note need load ODBC binary code onto client machine use driver . As result , ODBC driver appropriate corporate network client installation major problem , application server code write Java three-tier architecture . This Trail use first two four JDBC component connect database build java program use SQL command communicate test Relational Database . The last two component use specialized environment test web application , communicate ODBC-aware DBMSs . JDBC Architecture Two-tier Three-tier Processing Models The JDBC API support two-tier three-tier processing model database access . Figure 1 : Two-tier Architecture Data Access . In two-tier model , Java applet application talk directly data source . This require JDBC driver communicate particular data source access . A user 's command deliver database data source , result statement send back user . The data source may locate another machine user connect via network . This refer client/server configuration , user 's machine client , machine housing data source server . The network intranet , , example , connect employee within corporation , Internet . In three-tier model , command send `` middle tier '' service , send command data source . The data source process command send result back middle tier , send user . MIS director find three-tier model attractive middle tier make possible maintain control access kind update make corporate data . Another advantage simplify deployment application . Finally , many case , three-tier architecture provide performance advantage . Figure 2 : Three-tier Architecture Data Access . Until recently , middle tier often write language C C++ , offer fast performance . However , introduction optimize compiler translate Java bytecode efficient machine-specific code technology Enterprise JavaBeans™ , Java platform fast become standard platform middle-tier development . This big plus , make possible take advantage Java 's robustness , multithreading , security feature . With enterprise increasingly use Java programming language write server code , JDBC API use middle tier three-tier architecture . Some feature make JDBC server technology support connection pooling , distribute transaction , disconnect rowsets . The JDBC API also allow access data source Java middle tier . A Relational Database Overview A database mean store information way information retrieve . In simple term , relational database one present information table row column . A table refer relation sense collection object type ( row ) . Data table relate accord common key concept , ability retrieve relate data table basis term relational database . A Database Management System ( DBMS ) handle way data store , maintain , retrieve . In case relational database , Relational Database Management System ( RDBMS ) perform task . DBMS use book general term include RDBMS . Integrity Rules Relational table follow certain integrity rule ensure data contain stay accurate always accessible . First , row relational table distinct . If duplicate row , problem resolve two possible selection correct one . For DBMSs , user specify duplicate row allow , , DBMS prevent addition row duplicate exist row . A second integrity rule traditional relational model column value must repeat group array . A third aspect data integrity involve concept null value . A database take care situation data may available use null value indicate value miss . It equate blank zero . A blank consider equal another blank , zero equal another zero , two null value consider equal . When row table different , possible use one column identify particular row . This unique column group column call primary key . Any column part primary key null ; , primary key contain would longer complete identifier . This rule refer entity integrity . The Employees table illustrate relational database concept . It five column six row , row represent different employee . Employees Table Employee_Number First_name Last_Name Date_of_Birth Car_Number 10001 Axel Washington 28-Aug-43 5 10083 Arvid Sharma 24-Nov-54 null 10120 Jonas Ginsberg 01-Jan-69 null 10005 Florence Wojokowski 04-Jul-71 12 10099 Sean Washington 21-Sep-66 null 10035 Elizabeth Yamaguchi 24-Dec-59 null The primary key table would generally employee number one guarantee different . ( A number also efficient string make comparison . ) It would also possible use First_Name Last_Name combination two also identify one row sample database . Using last name alone would work two employee last name `` Washington . '' In particular case first name different , one could conceivably use column primary key , best avoid use column duplicate could occur . If Elizabeth Yamaguchi get job company primary key First_Name , RDBMS allow name add ( specify duplicate permit ) . Because already Elizabeth table , add second one would make primary key useless way identify one row . Note although use First_Name Last_Name unique composite key example , might unique large database . Note also Employee table assume one car per employee . SELECT Statements SQL language design use relational database . There set basic SQL command consider standard use RDBMSs . For example , RDBMSs use SELECT statement . A SELECT statement , also call query , use get information table . It specify one column heading , one table select , criterion selection . The RDBMS return row column entry satisfy stated requirement . A SELECT statement following fetch first last name employee company car : SELECT First_Name , Last_Name FROM Employees WHERE Car_Number IS NOT NULL The result set ( set row satisfy requirement null Car_Number column ) follow . The first name last name print row satisfy requirement SELECT statement ( first line ) specify column First_Name Last_Name . The FROM clause ( second line ) give table column select . FIRST_NAME LAST_NAME Axel Washington Florence Wojokowski The following code produce result set include whole table ask column table Employees restriction ( WHERE clause ) . Note SELECT * mean `` SELECT column . '' SELECT * FROM Employees WHERE Clauses The WHERE clause SELECT statement provide criterion select value . For example , following code fragment , value select occur row column Last_Name begin string 'Washington ' . SELECT First_Name , Last_Name FROM Employees WHERE Last_Name LIKE 'Washington % ' The keyword LIKE use compare string , offer feature pattern contain wildcards use . For example , code fragment , percent sign ( % ) end 'Washington ' , signify value contain string 'Washington ' plus zero additional character satisfy selection criterion . So 'Washington ' 'Washingtonian ' would match , 'Washing ' would . The wildcard use LIKE clause underbar ( _ ) , stand one character . For example , WHERE Last_Name LIKE 'Ba_man' would match 'Batman ' , 'Barman ' , 'Badman ' , 'Balman ' , 'Bagman ' , 'Bamman ' , . The code fragment WHERE clause use equal sign ( = ) compare number . It select first last name employee assign car 12 . SELECT First_Name , Last_Name FROM Employees WHERE Car_Number = 12 The next code fragment select first last name employee whose employee number great 10005 : SELECT First_Name , Last_Name FROM Employees WHERE Employee_Number > 10005 WHERE clause get rather elaborate , multiple condition , DBMSs , nested condition . This overview cover complicate WHERE clause , following code fragment WHERE clause two condition ; query select first last name employee whose employee number less 10100 company car . SELECT First_Name , Last_Name FROM Employees WHERE Employee_Number < 10100 Car_Number IS NULL A special type WHERE clause involve join , explain next section . Joins A distinguishing feature relational database possible get data one table call join . Suppose retrieve name employee company car , one want find car , include make , model , year car . This information store another table , Cars : Cars Table Car_Number Make Model Year 5 Honda Civic DX 1996 12 Toyota Corolla 1999 There must one column appear table order relate . This column , must primary key one table , call foreign key table . In case , column appear two table Car_Number , primary key table Cars foreign key table Employees . If 1996 Honda Civic wreck delete Cars table , Car_Number 5 would also remove Employees table order maintain call referential integrity . Otherwise , foreign key column ( Car_Number ) Employees table would contain entry refer anything Cars . A foreign key must either null equal exist primary key value table refer . This different primary key , may null . There several null value Car_Number column table Employees possible employee company car . The following code asks first last name employee company car make , model , year car . Note FROM clause list Employees Cars request data contain table . Using table name dot ( . ) column name indicate table contain column . SELECT Employees.First_Name , Employees.Last_Name , Cars.Make , Cars.Model , Cars.Year FROM Employees , Cars WHERE Employees.Car_Number = Cars.Car_Number This return result set look similar following : FIRST_NAME LAST_NAME MAKE MODEL YEAR Axel Washington Honda Civic DX 1996 Florence Wojokowski Toyota Corolla 1999 Common SQL Commands SQL command divide category , two main one Data Manipulation Language ( DML ) command Data Definition Language ( DDL ) command . DML command deal data , either retrieve modify keep up-to-date . DDL command create change table database object view index . A list common DML command follow : SELECT — use query display data database . The SELECT statement specifies columns include result set . The vast majority SQL command use application SELECT statement . INSERT — add new row table . INSERT use populate newly create table add new row ( row ) already-existing table . DELETE — remove specified row set row table UPDATE — change exist value column group column table The common DDL command follow : CREATE TABLE — create table column name user provide . The user also need specify type data column . Data type vary one RDBMS another , user might need use metadata establish data type use particular database . CREATE TABLE normally use less often data manipulation command table create , whereas add delete row change individual value generally occur frequently . DROP TABLE — delete row remove table definition database . A JDBC API implementation require support DROP TABLE command specify SQL92 , Transitional Level . However , support CASCADE RESTRICT option DROP TABLE optional . In addition , behavior DROP TABLE implementation-defined view integrity constraint define reference table drop . ALTER TABLE — add remove column table . It also add drop table constraint alters column attribute Result Sets Cursors The row satisfy condition query call result set . The number row return result set zero , one , many . A user access data result set one row time , cursor provide mean . A cursor think pointer file contain row result set , pointer ability keep track row currently access . A cursor allow user process row result set top bottom consequently may use iterative processing . Most DBMSs create cursor automatically result set generate . Earlier JDBC API version add new capability result set 's cursor , allow move forward backward also allow move specify row row whose position relative another row . Transactions When one user access data database , another user may access data time . If , instance , first user update column table time second user select column table , possible second user get partly old data partly update data . For reason , DBMSs use transaction maintain data consistent state ( data consistency ) allow one user access database time ( data concurrency ) . A transaction set one SQL statement make logical unit work . A transaction end either commit rollback , depend whether problem data consistency data concurrency . The commit statement make permanent change result SQL statement transaction , rollback statement undoes change result SQL statement transaction . A lock mechanism prohibit two transaction manipulate data time . For example , table lock prevent table drop uncommitted transaction table . In DBMSs , table lock also lock row table . A row lock prevents two transaction modify row , prevent one transaction select row another transaction still modify . Stored Procedures A stored procedure group SQL statement call name . In word , executable code , mini-program , perform particular task invoke way one call function method . Traditionally , store procedure write DBMS-specific programming language . The late generation database product allow stored procedure write use Java programming language JDBC API . Stored procedure write Java programming language bytecode portable DBMSs . Once stored procedure write , use reuse DBMS support store procedure , name implies , store database . The following code example create simple stored procedure use Java programming language . Note stored procedure static Java method contain normal JDBC code . It accept two input parameter use change employee 's car number . Do worry understand example point . The code example present illustrate stored procedure look like . You learn write code example tutorial follow . import java.sql . * ; public class UpdateCar { public static void UpdateCarNum ( int carNo , int empNo ) throw SQLException { Connection con = null ; PreparedStatement pstmt = null ; try { con = DriverManager.getConnection ( `` jdbc : default : connection '' ) ; pstmt = con.prepareStatement ( `` UPDATE EMPLOYEES `` + `` SET CAR_NUMBER = ? `` + `` WHERE EMPLOYEE_NUMBER = ? `` ) ; pstmt.setInt ( 1 , carNo ) ; pstmt.setInt ( 2 , empNo ) ; pstmt.executeUpdate ( ) ; } finally { ( pstmt ! = null ) pstmt.close ( ) ; } } } Metadata Databases store user data , also store information database . Most DBMSs set system table , list table database , column name table , primary key , foreign key , store procedure , forth . Each DBMS function get information table layout database feature . JDBC provide interface DatabaseMetaData , driver writer must implement method return information driver and/or DBMS driver write . For example , large number method return whether driver support particular functionality . This interface give user tool standardized way get metadata . In general , developer write tool driver one likely concern metadata .