If byte array contain non-Unicode text , convert text Unicode one String constructor method . Conversely , convert String object byte array non-Unicode character String.getBytes method . When invoke either method , specify encode identifier one parameter . The example follow convert character UTF-8 Unicode . UTF-8 transmission format Unicode safe UNIX file system . The full source code example file StringConverter.java . The StringConverter program start create String containing Unicode character : String original = new String ( `` A '' + `` \u00ea '' + `` \u00f1 '' + `` \u00fc '' + `` C '' ) ; When print , String name original appear : AêñüC To convert String object UTF-8 , invoke getBytes method specify appropriate encode identifier parameter . The getBytes method return array byte UTF-8 format . To create String object array non-Unicode byte , invoke String constructor encode parameter . The code make call enclose try block , case specify encoding unsupported : try { byte [ ] utf8Bytes = original.getBytes ( `` UTF8 '' ) ; byte [ ] defaultBytes = original.getBytes ( ) ; String roundTrip = new String ( utf8Bytes , `` UTF8 '' ) ; System.out.println ( `` roundTrip = `` + roundTrip ) ; System.out.println ( ) ; printBytes ( utf8Bytes , `` utf8Bytes '' ) ; System.out.println ( ) ; printBytes ( defaultBytes , `` defaultBytes '' ) ; } catch ( UnsupportedEncodingException e ) { e.printStackTrace ( ) ; } The StringConverter program print value utf8Bytes defaultBytes array demonstrate important point : The length convert text might length source text . Some Unicode character translate single byte , others pair triplet byte . The printBytes method display byte array invoke byteToHex method , define source file , UnicodeFormatter.java . Here printBytes method : public static void printBytes ( byte [ ] array , String name ) { ( int k = 0 ; k < array.length ; k++ ) { System.out.println ( name + `` [ `` + k + `` ] = `` + `` 0x '' + UnicodeFormatter.byteToHex ( array [ k ] ) ) ; } } The output printBytes method follow . Note first last byte , A C character , array : utf8Bytes [ 0 ] = 0x41 utf8Bytes [ 1 ] = 0xc3 utf8Bytes [ 2 ] = 0xaa utf8Bytes [ 3 ] = 0xc3 utf8Bytes [ 4 ] = 0xb1 utf8Bytes [ 5 ] = 0xc3 utf8Bytes [ 6 ] = 0xbc utf8Bytes [ 7 ] = 0x43 defaultBytes [ 0 ] = 0x41 defaultBytes [ 1 ] = 0xea defaultBytes [ 2 ] = 0xf1 defaultBytes [ 3 ] = 0xfc defaultBytes [ 4 ] = 0x43