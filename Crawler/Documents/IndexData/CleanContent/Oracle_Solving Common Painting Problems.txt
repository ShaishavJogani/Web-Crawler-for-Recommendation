Problem : I n't know put painting code . Painting code belongs paintComponent method component descend JComponent . Problem : The stuff I paint n't show . Check whether component show . Solving Common Component Problems help . Check whether repaint invoke component whenever appearance need update . Problem : My component 's foreground show , background invisible . The result one component directly behind component unexpectedly visible . Make sure component opaque . JPanels , example , opaque default many look feel . To make component JLabels GTK+ JPanels opaque , must invoke setOpaque ( true ) . If custom component extend JPanel specialized JComponent descendant , paint background invoke super.paintComponent paint content component . You paint background use code top custom component 's paintComponent method : g.setColor ( getBackground ( ) ) ; g.fillRect ( 0 , 0 , getWidth ( ) , getHeight ( ) ) ; g.setColor ( getForeground ( ) ) ; Problem : I use setBackground set component 's background color , seem effect . Most likely , component n't paint background , either 's opaque custom paint code n't paint background . If set background color JLabel , example , must also invoke setOpaque ( true ) label make label 's background paint . Problem : I 'm use exact code tutorial example , n't work . Why ? Is code execute exact method tutorial example ? For example , tutorial example code example 's paintComponent method , method might place code guarantee work . Problem : How I paint thick line ? pattern ? The Javaâ„¢ 2D API provide extensive support implement line width style , well pattern use filling stroke shape . See 2D Graphics trail information use Java 2D API . Problem : The edge particular component look odd . Because component often update border reflect component state , generally avoid invoke setBorder except JPanels custom subclass JComponent . Is component paint look feel GTK+ Windows XP use UI-painted border instead Border object ? If , n't invoke setBorder component . Does component custom paint code ? If , painting code take component 's inset account ? Problem : Visual artifact appear GUI . If set background color component , sure color transparency component suppose opaque . Use setOpaque method set component opacity necessary . For example , content pane must opaque , component transparent background must opaque . Make sure custom component fill painting area completely 's opaque . Problem : The performance custom paint code poor . If paint part component , use getClip getClipBounds method Graphics determine area need paint . The less paint , faster . If part component need update , make paint request use version repaint specify painting region . For help choose efficient paint technique , look string `` performance '' Java Media APIs home page . Problem : The transforms apply seemingly identical Graphics object sometimes slightly different effect . Because Swing painting code set transform ( use Graphics method translate ) invoke paintComponent , transforms apply cumulative effect . This n't matter simple translation , complex AffineTransform , example , might unexpected result . If n't see problem list , see Solving Common Component Problems Solving Common Layout Problems .