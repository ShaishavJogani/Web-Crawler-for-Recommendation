The JPanel class provide general-purpose container lightweight component . By default , panel add color anything except background ; however , easily add border otherwise customize painting . Details find Performing Custom Painting . In many type look feel , panel opaque default . Opaque panel work well content pane help paint efficiently , describe Using Top-Level Containers . You change panel 's transparency invoke setOpaque method . A transparent panel draw background , component underneath show . An Example The following picture show colored version Converter application , discuss detail Using Models . The Converter example use panel several way : One JPanel instance — color red precede snapshot — serf content pane application 's frame . This content pane use top-to-bottom BoxLayout lay content , empty border put 5 pixel space around . See Using Top-Level Containers information content pane . Two instance custom JPanel subclass name ConversionPanel — color cyan — use contain component coordinate communication component . These ConversionPanel panel also title border , describe content enclose content line . Each ConversionPanel panel use left-to-right BoxLayout object lay content . In ConversionPanel , JPanel instance — color magenta — use ensure proper size position combo box . Each JPanel instance use top-to-bottom BoxLayout object ( help invisible space-filling component ) lay combo box . In ConversionPanel , instance unnamed JPanel subclass — color blue — group two component ( text field slider ) restrict size . Each JPanel instance use top-to-bottom BoxLayout object lay content . Here Converter application normally look like . As Converter example demonstrate , panel useful group component , simplify component layout , put border around group component . The rest section give hint grouping lay component . For information use border , see How Use Borders . Setting Layout Manager Like container , panel use layout manager position size component . By default , panel 's layout manager instance FlowLayout , place panel 's content row . You easily make panel use layout manager invoke setLayout method specify layout manager create panel . The latter approach preferable performance reason , since avoid unnecessary creation FlowLayout object . Here example set layout manager create panel . JPanel p = new JPanel ( new BorderLayout ( ) ) ; //PREFERRED ! This approach work BoxLayout , since BoxLayout constructor require pre-existing container . Here example use BoxLayout . JPanel p = new JPanel ( ) ; p.setLayout ( new BoxLayout ( p , BoxLayout.PAGE_AXIS ) ) ; Adding Components When add component panel , use add method . Exactly arguments specify add method depend layout manager panel use . When layout manager FlowLayout , BoxLayout , GridLayout , SpringLayout , typically use one-argument add method , like : aFlowPanel.add ( aComponent ) ; aFlowPanel.add ( anotherComponent ) ; When layout manager BorderLayout , need provide argument specify added component 's position within panel . For example : aBorderPanel.add ( aComponent , BorderLayout.CENTER ) ; aBorderPanel.add ( anotherComponent , BorderLayout.PAGE_END ) ; With GridBagLayout use either add method , must somehow specify grid bag constraint component . For information choosing use standard layout manager , see Using Layout Managers . The Panel API The API JPanel class minimal . The method likely invoke JPanel object inherit superclass — JComponent , Container , Component . The following table list API likely use , exception method relate border layout hint . For information API JComponent object use , see The JComponent Class . Creating JPanel Managing Container 's Components Setting Getting Layout Manager Creating JPanel Constructor Purpose JPanel ( ) JPanel ( LayoutManager ) Creates panel . The LayoutManager parameter provide layout manager new panel . By default , panel use FlowLayout lay component . Managing Container 's Components Method Purpose void add ( Component ) void add ( Component , int ) void add ( Component , Object ) void add ( Component , Object , int ) void add ( String , Component ) Adds specified component panel . When present , int parameter index component within container . By default , first component add index 0 , second index 1 , . The Object parameter layout manager dependent typically provide information layout manager regard positioning layout constraint added component . The String parameter similar Object parameter . int getComponentCount ( ) Gets number component panel . Component getComponent ( int ) Component getComponentAt ( int , int ) Component getComponentAt ( Point ) Component [ ] getComponents ( ) Gets specified component component . You get component base index x , position . void remove ( Component ) void remove ( int ) void removeAll ( ) Removes specified component ( ) . Setting Getting Layout Manager Method Purpose void setLayout ( LayoutManager ) LayoutManager getLayout ( ) Sets get layout manager panel . The layout manager responsible position panel 's component within panel 's bound accord philosophy . Examples That Use Panels Many example contain lesson use JPanel object . The following table list . Example Where Described Notes Converter This section Uses five panel , four use BoxLayout one use GridLayout . The panel use border , necessary , size alignment hint affect layout . ListDemo How Use Lists Uses panel , default FlowLayout manager , center three component row . ToolBarDemo How Use Tool Bars Uses panel content pane . The panel contain three component , lay BorderLayout . BorderDemo How Use Borders Contains many panel various kind border . Several panel use BoxLayout . BoxLayoutDemo How Use BoxLayout Illustrates use panel Swing 's BoxLayout manager .