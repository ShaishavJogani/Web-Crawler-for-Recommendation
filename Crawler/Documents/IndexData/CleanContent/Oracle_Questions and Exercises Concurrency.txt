Questions Can pass Thread object Executor.execute ? Would invocation make sense ? Exercises Compile run BadThreads.java : public class BadThreads { static String message ; private static class CorrectorThread extend Thread { public void run ( ) { try { sleep ( 1000 ) ; } catch ( InterruptedException e ) { } // Key statement 1 : message = `` Mares eat oat . `` ; } } public static void main ( String args [ ] ) throw InterruptedException { ( new CorrectorThread ( ) ) .start ( ) ; message = `` Mares eat oat . `` ; Thread.sleep ( 2000 ) ; // Key statement 2 : System.out.println ( message ) ; } } The application print `` Mares eat oat . '' Is guarantee always ? If , ? Would help change parameter two invocation Sleep ? How would guarantee change message visible main thread ? Modify producer-consumer example Guarded Blocks use standard library class instead Drop class . Check answer .