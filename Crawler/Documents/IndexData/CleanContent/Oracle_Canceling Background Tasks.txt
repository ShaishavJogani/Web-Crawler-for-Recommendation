To cancel running background task , invoke SwingWorker.cancel The task must cooperate cancellation . There two way : By terminate receive interrupt . This procedures describe Interrupts Concurrency . By invoke SwingWorker.isCancelled short interval . This method return true cancel invoke SwingWorker . The cancel method take single boolean argument . If argument true , cancel send background task interrupt . Whether argument true false , invoke cancel change cancellation status object true . This value return isCancelled . Once change , cancellation status change back . The Flipper example previous section use status-only idiom . The main loop doInBackground exit isCancelled return true . This occur user click `` Cancel '' button , trigger code invoke cancel argument false . The status-only approach make sense Flipper implementation SwingWorker.doInBackground include code might throw InterruptedException . To respond interrupt , background task would invoke Thread.isInterrupted short interval . It 's easy use SwingWorker.isCancelled purpose Note : If get invoke SwingWorker object background task cancel , java.util.concurrent.CancellationException throw .