No matter theprogramming languageorparadigmyou use , chance eventually run situation program wait external event happen . Perhaps program must wait user input , perhaps must wait data deliver network . Or perhaps something else . In case , program must wait something happen beyond program 's control : program cannotmakethat event happen . In situation two general option make program wait external event happen . The first calledpollingand mean write little loop `` event happen , check '' . Polling simple build straightforward . But also wasteful : mean program take processor time order absolutely nothing wait . This usually consider much drawback program lot wait . Programs lot wait moment ( example , program graphical user interface often wait long period time user something ) usually fare much good use mechanism : event-driven programming . In event-driven program program must wait , simply go sleep . It longer take processor time , might even unload memory generally leave computer available useful thing . But program n't completely go away ; instead , make deal computer theoperating system . A deal sort like : Okay Mr. Operating System , since I wait event happen , I 'll go away let useful work meantime . But return , youhave let know event happen let come back deal . Event-driven programming usually pretty large impact design program . Usually , program break separate piece event-driven programming ( one piece general processing one others deal event occur ) . Event-driven programming Java complicated non-event driven make far efficient use hardware sometimes ( like develop graphical user interface ) divide code event-driven block actually fit naturally program 's structure . In module examine basis Java Platform 's facility event-driven programming look typical example basis use throughout platform .