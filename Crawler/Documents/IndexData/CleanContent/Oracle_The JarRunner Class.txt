The JarRunner application launch command form : java JarRunner url [ argument ] In previous section , 've see JarClassLoader able identify load main class JAR-bundled application give URL . To complete JarRunner application , therefore , need able take URL argument command line , pass instance JarClassLoader . These task belong JarRunner class , entry point JarRunner application . It begin create java.net.URL object URL specify command line : public static void main ( String [ ] args ) { ( args.length < 1 ) { usage ( ) ; } URL url = null ; try { url = new URL ( args [ 0 ] ) ; } catch ( MalformedURLException e ) { fatal ( `` Invalid URL : `` + args [ 0 ] ) ; } If args.length < 1 , mean URL specify command line , usage message print . If first command-line argument good URL , new URL object create represent . Next , JarRunner create new instance JarClassLoader , pass constructor URL specify command-line : JarClassLoader cl = new JarClassLoader ( url ) ; As saw previous section , 's JarClassLoader JarRunner tap JAR-handling APIs . The URL 's pass JarClassLoader constructor URL JAR-bundled application want run . JarRunner next call class loader 's getMainClassName method identify entry-point class application : String name = null ; try { name = cl.getMainClassName ( ) ; } catch ( IOException e ) { System.err.println ( `` I/O error load JAR file : '' ) ; e.printStackTrace ( ) ; System.exit ( 1 ) ; } ( name == null ) { fatal ( `` Specified jar file contain 'Main-Class ' '' + `` manifest attribute '' ) ; } The key statement highlight bold . The statement error handling . Once JarRunner identify application 's entry-point class , two step remain : passing argument application actually launch application . JarRunner performs step code : // Get argument application String [ ] newArgs = new String [ args.length - 1 ] ; System.arraycopy ( args , 1 , newArgs , 0 , newArgs.length ) ; // Invoke application 's main class try { cl.invokeClass ( name , newArgs ) ; } catch ( ClassNotFoundException e ) { fatal ( `` Class find : `` + name ) ; } catch ( NoSuchMethodException e ) { fatal ( `` Class define 'main ' method : `` + name ) ; } catch ( InvocationTargetException e ) { e.getTargetException ( ) .printStackTrace ( ) ; System.exit ( 1 ) ; } Recall first command-line argument URL JAR-bundled application . Any argument pass application therefore element 1 beyond args array . JarRunner take element , create new array call newArgs pass application ( bold line ) . JarRunner pass entry-point 's class name new argument list invokeClass method JarClassLoader . As saw previous section , invokeClass load application 's entry-point class , pass argument , launch application .