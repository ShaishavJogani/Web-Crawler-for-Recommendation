JDK 5.0 introduces several new extension Java programming language . One introduction generic . This trail introduction generic . You may familiar similar construct language , notably C++ template . If , 'll see similarity important difference . If unfamiliar look-a-alike construct elsewhere , good ; start fresh , without unlearn misconception . Generics allow abstract type . The common example container type , Collections hierarchy . Here typical usage sort : List myIntList = new LinkedList ( ) ; // 1 myIntList.add ( new Integer ( 0 ) ) ; // 2 Integer x = ( Integer ) myIntList.iterator ( ) .next ( ) ; // 3 The cast line 3 slightly annoy . Typically , programmer know kind data place particular list . However , cast essential . The compiler guarantee Object return iterator . To ensure assignment variable type Integer type safe , cast require . Of course , cast introduce clutter . It also introduce possibility run time error , since programmer may mistake . What programmer could actually express intent , mark list restrict contain particular data type ? This core idea behind generic . Here version program fragment give use generic : List < Integer > myIntList = new LinkedList < Integer > ( ) ; // 1' myIntList.add ( new Integer ( 0 ) ) ; // 2' Integer x = myIntList.iterator ( ) .next ( ) ; // 3' Notice type declaration variable myIntList . It specify arbitrary List , List Integer , write List < Integer > . We say List generic interface take type parameter -- case , Integer . We also specify type parameter create list object . Note , , cast line 3 ' go . Now , might think 've accomplish move clutter around . Instead cast Integer line 3 , Integer type parameter line 1 ' . However , big difference . The compiler check type correctness program compile-time . When say myIntList declare type List < Integer > , tell u something variable myIntList , hold true wherever whenever use , compiler guarantee . In contrast , cast tell u something programmer think true single point code . The net effect , especially large program , improve readability robustness .