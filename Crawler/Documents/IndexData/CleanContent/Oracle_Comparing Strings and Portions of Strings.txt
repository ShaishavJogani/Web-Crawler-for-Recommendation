The String class number method compare string portion string . The following table list method . Methods Comparing Strings Method Description boolean endsWith ( String suffix ) boolean startsWith ( String prefix ) Returns true string end begin substring specify argument method . boolean startsWith ( String prefix , int offset ) Considers string beginning index offset , return true begin substring specify argument . int compareTo ( String anotherString ) Compares two string lexicographically . Returns integer indicate whether string great ( result > 0 ) , equal ( result = 0 ) , less ( result < 0 ) argument . int compareToIgnoreCase ( String str ) Compares two string lexicographically , ignore difference case . Returns integer indicate whether string great ( result > 0 ) , equal ( result = 0 ) , less ( result < 0 ) argument . boolean equal ( Object anObject ) Returns true argument String object represent sequence character object . boolean equalsIgnoreCase ( String anotherString ) Returns true argument String object represent sequence character object , ignore difference case . boolean regionMatches ( int toffset , String , int ooffset , int len ) Tests whether specified region string match specified region String argument . Region length len begin index toffset string ooffset string . boolean regionMatches ( boolean ignoreCase , int toffset , String , int ooffset , int len ) Tests whether specified region string match specified region String argument . Region length len begin index toffset string ooffset string . The boolean argument indicate whether case ignore ; true , case ignore compare character . boolean match ( String regex ) Tests whether string match specified regular expression . Regular expression discuss lesson title `` Regular Expressions . '' The following program , RegionMatchesDemo , use regionMatches method search string within another string : public class RegionMatchesDemo { public static void main ( String [ ] args ) { String searchMe = `` Green Eggs Ham '' ; String findMe = `` Eggs '' ; int searchMeLength = searchMe.length ( ) ; int findMeLength = findMe.length ( ) ; boolean foundIt = false ; ( int = 0 ; < = ( searchMeLength - findMeLength ) ; i++ ) { ( searchMe.regionMatches ( , findMe , 0 , findMeLength ) ) { foundIt = true ; System.out.println ( searchMe.substring ( , + findMeLength ) ) ; break ; } } ( ! foundIt ) System.out.println ( `` No match find . `` ) ; } } The output program Eggs . The program step string refer searchMe one character time . For character , program call regionMatches method determine whether substring beginning current character match string program look .