A program often run command line interacts user command line environment . The Java platform support kind interaction two way : Standard Streams Console . Standard Streams Standard Streams feature many operate system . By default , read input keyboard write output display . They also support I/O file program , feature control command line interpreter , program . The Java platform support three Standard Streams : Standard Input , access System.in ; Standard Output , access System.out ; Standard Error , access System.err . These object define automatically need open . Standard Output Standard Error output ; error output separately allow user divert regular output file still able read error message . For information , refer documentation command line interpreter . You might expect Standard Streams character stream , , historical reason , byte stream . System.out System.err define PrintStream object . Although technically byte stream , PrintStream utilize internal character stream object emulate many feature character stream . By contrast , System.in byte stream character stream feature . To use Standard Input character stream , wrap System.in InputStreamReader . InputStreamReader cin = new InputStreamReader ( System.in ) ; The Console A advanced alternative Standard Streams Console . This single , predefined object type Console feature provide Standard Streams , others besides . The Console particularly useful secure password entry . The Console object also provide input output stream true character stream , reader writer method . Before program use Console , must attempt retrieve Console object invoke System.console ( ) . If Console object available , method return . If System.console return NULL , Console operation permit , either OS n't support program launch noninteractive environment . The Console object support secure password entry readPassword method . This method help secure password entry two way . First , suppress echo , password visible user 's screen . Second , readPassword return character array , String , password overwrite , remove memory soon longer need . The Password example prototype program change user 's password . It demonstrate several Console method . import java.io.Console ; import java.util.Arrays ; import java.io.IOException ; public class Password { public static void main ( String args [ ] ) throw IOException { Console c = System.console ( ) ; ( c == null ) { System.err.println ( `` No console . `` ) ; System.exit ( 1 ) ; } String login = c.readLine ( `` Enter login : `` ) ; char [ ] oldPassword = c.readPassword ( `` Enter old password : `` ) ; ( verify ( login , oldPassword ) ) { boolean noMatch ; { char [ ] newPassword1 = c.readPassword ( `` Enter new password : `` ) ; char [ ] newPassword2 = c.readPassword ( `` Enter new password : `` ) ; noMatch = ! Arrays.equals ( newPassword1 , newPassword2 ) ; ( noMatch ) { c.format ( `` Passwords n't match . Try again. % n '' ) ; } else { change ( login , newPassword1 ) ; c.format ( `` Password % changed. % n '' , login ) ; } Arrays.fill ( newPassword1 , ' ' ) ; Arrays.fill ( newPassword2 , ' ' ) ; } ( noMatch ) ; } Arrays.fill ( oldPassword , ' ' ) ; } // Dummy change method . static boolean verify ( String login , char [ ] password ) { // This method always return // true example . // Modify method verify // password accord rule . return true ; } // Dummy change method . static void change ( String login , char [ ] password ) { // Modify method change // password accord rules. } } The Password class follow step : Attempt retrieve Console object . If object available , abort . Invoke Console.readLine prompt read user 's login name . Invoke Console.readPassword prompt read user 's exist password . Invoke verify confirm user authorize change password . ( In example , verify dummy method always return true . ) Repeat following step user enter password twice : Invoke Console.readPassword twice prompt read new password . If user enter password time , invoke change change . ( Again , change dummy method . ) Overwrite password blank . Overwrite old password blank .