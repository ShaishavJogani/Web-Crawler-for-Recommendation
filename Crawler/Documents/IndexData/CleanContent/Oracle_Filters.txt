In addition specify search use set attribute , specify search form search filter . A search filter search query express form logical expression . The syntax search filter accept DirContext.search ( ) describe RFC 2254 . The following search filter specifies qualify entry must `` sn '' attribute value `` Geisel '' `` mail '' attribute value : ( & ( sn=Geisel ) ( mail=* ) ) The following code create filter default SearchControls , use perform search . The search equivalent one present basic search example . // Create default search control SearchControls ctls = new SearchControls ( ) ; // Specify search filter match // Ask object attribute `` sn '' == `` Geisel '' // `` mail '' attribute String filter = `` ( & ( sn=Geisel ) ( mail=* ) ) '' ; // Search object use filter NamingEnumeration answer = ctx.search ( `` ou=People '' , filter , ctls ) ; Running example produce following result . # java SearchWithFilterRetAll > > > cn=Ted Geisel attribute : sn value : Geisel attribute : objectclass value : top value : person value : organizationalPerson value : inetOrgPerson attribute : jpegphoto value : [ B @ 1dacd75e attribute : mail value : Ted.Geisel @ JNDITutorial.example.com attribute : facsimiletelephonenumber value : +1 408 555 2329 attribute : cn value : Ted Geisel attribute : telephonenumber value : +1 408 555 5252 Quick Overview Search Filter Syntax The search filter syntax basically logical expression prefix notation ( , logical operator appear argument ) . The following table list symbol use create filter . Symbol Description & conjunction ( i.e. , -- list must true ) | disjunction ( i.e. , -- one alternative must true ) ! negation ( i.e. , -- item negate must true ) = equality ( accord matching rule attribute ) ~= approximate equality ( accord matching rule attribute ) > = great ( accord matching rule attribute ) < = less ( accord matching rule attribute ) =* presence ( i.e. , entry must attribute value irrelevant ) * wildcard ( indicate zero character occur position ) ; use specify attribute value match \ escape ( escape '* ' , ' ( ' , ' ) ' occur inside attribute value ) Each item filter compose use attribute identifier either attribute value symbol denote attribute value . For example , item `` sn=Geisel '' mean `` sn '' attribute must attribute value `` Geisel '' item `` mail=* '' indicate `` mail '' attribute must present . Each item must enclose within set parenthesis , `` ( sn=Geisel ) '' . These item compose use logical operator `` & '' ( conjunction ) create logical expression , `` ( & ( sn=Geisel ) ( mail=* ) ) '' . Each logical expression compose item logical expression , `` ( | ( & ( sn=Geisel ) ( mail=* ) ) ( sn=L* ) ) '' . This last example request either entry `` sn '' attribute `` Geisel '' `` mail '' attribute entry whose `` sn '' attribute begin letter `` L. '' For complete description syntax , see RFC 2254 . Returning Selected Attributes The previous example return attribute associate entry satisfy specified filter . You select attribute return set search control argument . You create array attribute identifier want include result pas SearchControls.setReturningAttributes ( ) . Here 's example . // Specify id attribute return String [ ] attrIDs = { `` sn '' , `` telephonenumber '' , `` golfhandicap '' , `` mail '' } ; SearchControls ctls = new SearchControls ( ) ; ctls.setReturningAttributes ( attrIDs ) ; This example equivalent Returning Selected Attributes example Basic Search section . Running example produce following result . ( The entry `` golfhandicap '' attribute , return . ) # java SearchWithFilter > > > cn=Ted Geisel attribute : sn value : Geisel attribute : mail value : Ted.Geisel @ JNDITutorial.example.com attribute : telephonenumber value : +1 408 555 5252