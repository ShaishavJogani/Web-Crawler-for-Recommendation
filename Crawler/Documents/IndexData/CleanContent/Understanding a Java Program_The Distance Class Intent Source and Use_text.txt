This class namedDistance , use favorite editor orJava IDE , first create file namedDistance.java , copy source , paste file save file . At point , may wish review source see much might able understand . While perhaps literate program language , someone understanding procedural language C , object orient language C++ C # , able understand sample program . Once save file , compilethe program : Compilation command $ javac Distance.java ( If thejavaccommand fails , review theinstallation instruction . ) To run program , supply thexandycoordinates two point plane separate space . For version Distance , integer point support . The command sequence isjava Distance < x0 > < y0 > < x1 > < y1 > compute distance point ( x0 , y0 ) ( x1 , y1 ) . If get ajava.lang.NumberFormatExceptionexception , argument number . If get ajava.lang.ArrayIndexOutOfBoundsExceptionexception , provide enough number . Here two example : Output distance point ( 0 , 3 ) ( 4 , 0 ) $ java Distance 0 3 4 0 Distance java.awt.Point [ x=0 , y=3 ] java.awt.Point [ x=4 , y=0 ] 5.0 Output distance point ( -4 , 5 ) ( 11 , 19 ) $ java Distance -4 5 11 19 Distance java.awt.Point [ x=-4 , y=5 ] java.awt.Point [ x=11 , y=19 ] 20.518284528683193 We 'll explain strange look output , also show improve , later .