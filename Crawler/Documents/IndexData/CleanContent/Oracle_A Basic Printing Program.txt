This section explain create basic printing program display print dialog print text `` Hello World '' select printer . Printing task usually consist two part : Job control — Creating print job , associate printer , specify number copy , user print dialog interaction . Page Imaging — Drawing content page , manage content span page ( pagination ) . First create printer job . The class represent printer job related class locate java.awt.print package . import java.awt.print . * ; PrinterJob job = PrinterJob.getPrinterJob ( ) ; Next provide code render content page implement Printable interface . class HelloWorldPrinter implement Printable { ... } ... job.setPrintable ( new HelloWorldPrinter ( ) ) ; An application typically display print dialog user adjust various option number copy , page orientation , destination printer . boolean doPrint = job.printDialog ( ) ; This dialog appear user either approves cancel print . The doPrint variable true user give command go ahead print . If doPrint variable false , user cancel print job . Since display dialog optional , return value purely informational . If doPrint variable true , application request job print call PrinterJob.print method . ( doPrint ) { try { job.print ( ) ; } catch ( PrinterException e ) { // The job successfully // complete } } The PrinterException throw problem send job printer . However , since PrinterJob.print method return soon job send printer , user application detect paper jam paper problem . This job control boilerplate sufficient basic printing us . The Printable interface one method : public int print ( Graphics graphic , PageFormat pf , int page ) throw PrinterException ; The PageFormat class describe page orientation ( portrait landscape ) size imageable area unit 1/72nd inch . Imageable area account margin limit printer ( hardware margin ) . The imageable area space inside margin , practice often far limit leave space header footer . A page parameter zero-based page number render . The following code represent full Printable implementation : import java.awt.print . * ; import java.awt . * ; public class HelloWorldPrinter implement Printable { public int print ( Graphics g , PageFormat pf , int page ) throw PrinterException { // We one page , 'page' // zero-based ( page > 0 ) { return NO_SUCH_PAGE ; } // User ( 0,0 ) typically outside // imageable area , must translate // X Y value PageFormat // avoid clipping . Graphics2D g2d = ( Graphics2D ) g ; g2d.translate ( pf.getImageableX ( ) , pf.getImageableY ( ) ) ; // Now perform render g.drawString ( `` Hello world ! `` , 100 , 100 ) ; // tell caller page part // printed document return PAGE_EXISTS ; } } The complete code example HelloWorldPrinter.java . Sending Graphics instance printer essentially render screen . In case need perform following step : To draw test string easy operation describe draw Graphics2D . Printer graphic high resolution , transparent code . The Printable.print ( ) method call printing system , Component.paint ( ) method call paint Component display . The printing system call Printable.print ( ) method page 0 , 1 , .. etc print ( ) method return NO_SUCH_PAGE . The print ( ) method may call page index multiple time document complete . This feature apply user specifies attribute multiple copy collate option . The PageFormat 's imageable area determine clip area . Imageable area also important calculate pagination , span content across printed page , since page break determine much fit page . Note : A call print ( ) method may skip certain page index user specify different page range involve particular page index .