You might wonder exactly assistive technology , care . Primarily , assistive technology exist enable people permanent temporary disability use computer . For example , get carpal tunnel syndrome , use assistive technology accomplish work without use hand . Assistive technology — voice interface , screen reader , alternate input device , — useful people disability , also people use computer non-office environment . For example , 're stick traffic jam , might use assistive technology check email , use voice input output . The information enable assistive technology use tool , well , automated GUI tester input device touchscreen . Assistive technology get information component use Accessibility API , define javax.accessibility package . Because support Accessibility API build Swing component , Swing program probably work fine assistive technology , even nothing special . For example , assistive technology automatically get text information set following line code : JButton button = new JButton ( `` I 'm Swing button ! `` ) ; label = new JLabel ( labelPrefix + `` 0 `` ) ; label.setText ( labelPrefix + numClicks ) ; JFrame frame = new JFrame ( `` SwingApplication '' ) ; Assistive technology also grab tool-tip text ( ) associate component use describe component user . Making program function smoothly assistive technology easy , United States , may require federal law . The rest section cover topic : Rules Supporting Accessibility Testing Accessibility Setting Accessible Names Descriptions Components Concepts : How Accessibility Works Making Custom Components Accessible The Accessibility API Examples Use Accessibility API Rules Supporting Accessibility Here thing make program work well possible assistive technology : If component n't display short string ( serve default name ) , specify name setAccessibleName method . You might want image-only button , panel provide logical grouping , text area , . Set tool tip text component whenever make sense . For example : aJComponent.setToolTipText ( `` Clicking component cause XYZ happen . `` ) ; If n't want provide tool tip component , use setAccessibleDescription method provide description assistive technology give user . For example : aJComponent.getAccessibleContext ( ) . setAccessibleDescription ( `` Clicking component cause XYZ happen . `` ) ; Specify keyboard alternative wherever possible . Make sure use program keyboard . Try hide mouse ! Note focus editable text component , use Shift-Tab move focus next component . Support keyboard alternative varies component . Buttons support keyboard alternative setMnemonic method . Menus inherit button mnemonic support also support accelerator , describe Enabling Keyboard Operation . Other component use key binding associate user type program action . Assign textual description ImageIcon object program . You set property use either setDescription method one String form ImageIcon constructor . If bunch component form logical group , try put one container . For example , use JPanel contain radio button radio button group . Whenever label describe another component , use setLabelFor method assistive technology find component label associate . This especially important label display mnemonic another component ( text field ) . If create custom component , make sure support accessibility . In particular , aware subclass JComponent automatically accessible . Custom component descendant Swing component override inherited accessibility information necessary . For information , see Concepts : How Accessibility Works Making Custom Components Accessible . Use example provide accessibility utility test program . Although primary purpose example show programmer use Accessibility API implement assistive technology , example also quite useful test application program accessibility . Testing Accessibility show ScrollDemo run Monkey , one accessibility utility examples . Monkey show tree accessible component program let interact component . Finally , n't break get free ! If GUI inaccessible container — example , subclass Container JComponent container n't implement Accessible interface — component inside container become inaccessible . Testing Accessibility The example come accessibility utility give idea accessible program . For instruction get utility , see Java SE Desktop Accessibility home page . Follow instruction accessibility utility documentation set Java Virtual Machine ( VM ) run one utility automatically . Let 's use accessibility utility compare original version one demo version rule support accessibility apply . Here 's picture program call ScrollDemo . Try : Click Launch button run ScrollDemo use Java™ Web Start ( download JDK 7 later ) . Or , compile run example , consult example index . Next , click Launch button run AccessibleScrollDemo use Java™ Web Start ( download JDK 7 later ) . Or , compile run example , consult example index . Compare two version side side . The noticeable difference cm toggle button photograph tool tip accessible version . Now run two version accessibility utility call Monkey . Note accessibility tool download configure accessibility.properties file , Monkey window automatically come click Run ScrollDemo AccessibleScrollDemo link ( step 1 2 ) . If Monkey window appear startup , problem may accessibility.properties file present version VM use Java Web Start . You change VM use run Java Web Start Application Manager select File > Preferences > Java . Note Monkey window come need select File > Refresh Trees see information appear Accessible Tree . You expand tree successively click horizontal icon display folder icon . When tree expand , see detailed information various component . The custom component ( rule corner ) n't accessible original version accessible modified version . This make quite difference assistive technology . Here 's snapshot Monkey run ScrollDemo : The left side split pane show actual component hierarchy program . The right side show accessible component hierarchy , interest u . The first thing notice , even explicit support ScrollDemo , Monkey able discover lot information various component program . Most component child appear tree . However , name component empty ( null ) , rather unhelpful . The description also empty . Further trouble come program 's custom component . The two ruler inaccessible , include accessible tree . The viewports contain ruler display leaf node accessible child . The custom corner also miss accessible tree . Now 's picture Monkey window AccessibleScrollDemo : The rule list child viewports , corner list child scroll pane . Furthermore , many component non-null name . In previous snapshot Monkey , Column Header item select . Monkey highlight corresponding component ScrollDemo program . When item select , use Monkey 's Panels menu bring one four different panel let interact select component . Choosing Panels > Accessibility API panel bring panel like one show following figure . This panel display information available method define AccessibleContext base class AccessibleComponent interface . Monkey three panel : AccessibleAction : Shows action support accessible component let invoke action . Works accessible component whose context implement AccessibleAction interface . AccessibleSelection : Shows current selection accessible component let manipulate selection . Works accessible component whose context implement AccessibleSelection interface . AccessibleHypertext : Shows hyperlink contain within accessible component let traverse . Works accessible component whose context implement AccessibleHypertext interface . The accessibility utility example handy testing tool give idea accessible component program . However , even component behave well Monkey example , still might completely accessible Monkey example exercise certain portion Accessibility API . The true test accessibility run program real-world assistive technology , however , may find following free open source screen reader useful : NonVisual Desktop Access ( NVDA ) . Setting Accessible Names Descriptions Components Giving program 's component accessible name description one easy important step make program accessible . Following complete listing AccessibleScrollDemo constructor create scroll pane custom component use . The boldface statement give component name description assistive technology use . public AccessibleScrollDemo ( ) { // Get image use . ImageIcon bee = createImageIcon ( `` images/flyingBee.jpg '' , `` Photograph fly bee . `` ) ; // Create row column header . columnView = new Rule ( Rule.HORIZONTAL , true ) ; ( bee ! = null ) { columnView.setPreferredWidth ( bee.getIconWidth ( ) ) ; } else { columnView.setPreferredWidth ( 320 ) ; } columnView.getAccessibleContext ( ) .setAccessibleName ( `` Column Header '' ) ; columnView.getAccessibleContext ( ) . setAccessibleDescription ( `` Displays horizontal ruler `` + `` measure scroll pane client . `` ) ; rowView = new Rule ( Rule.VERTICAL , true ) ; ( bee ! = null ) { rowView.setPreferredHeight ( bee.getIconHeight ( ) ) ; } else { rowView.setPreferredHeight ( 480 ) ; } rowView.getAccessibleContext ( ) .setAccessibleName ( `` Row Header '' ) ; rowView.getAccessibleContext ( ) . setAccessibleDescription ( `` Displays vertical ruler `` + `` measure scroll pane client . `` ) ; // Create corner . JPanel buttonCorner = new JPanel ( ) ; isMetric = new JToggleButton ( `` cm '' , true ) ; isMetric.setFont ( new Font ( `` SansSerif '' , Font.PLAIN , 11 ) ) ; isMetric.setMargin ( new Insets ( 2,2,2,2 ) ) ; isMetric.addItemListener ( ) ; isMetric.setToolTipText ( `` Toggles ruler ' unit measure `` + `` inch centimeter . `` ) ; buttonCorner.add ( isMetric ) ; //Use default FlowLayout buttonCorner.getAccessibleContext ( ) . setAccessibleName ( `` Upper Left Corner '' ) ; String desc = `` Fills corner scroll pane `` + `` color aesthetic reason . `` ; Corner lowerLeft = new Corner ( ) ; lowerLeft.getAccessibleContext ( ) . setAccessibleName ( `` Lower Left Corner '' ) ; lowerLeft.getAccessibleContext ( ) .setAccessibleDescription ( desc ) ; Corner upperRight = new Corner ( ) ; upperRight.getAccessibleContext ( ) . setAccessibleName ( `` Upper Right Corner '' ) ; upperRight.getAccessibleContext ( ) .setAccessibleDescription ( desc ) ; // Set scroll pane . picture = new ScrollablePicture ( bee , columnView.getIncrement ( ) ) ; picture.setToolTipText ( bee.getDescription ( ) ) ; picture.getAccessibleContext ( ) .setAccessibleName ( `` Scroll pane client '' ) ; JScrollPane pictureScrollPane = new JScrollPane ( picture ) ; pictureScrollPane.setPreferredSize ( new Dimension ( 300 , 250 ) ) ; pictureScrollPane.setViewportBorder ( BorderFactory.createLineBorder ( Color.black ) ) ; pictureScrollPane.setColumnHeaderView ( columnView ) ; pictureScrollPane.setRowHeaderView ( rowView ) ; // In theory , support internationalization would change // UPPER_LEFT_CORNER UPPER_LEADING_CORNER , // LOWER_LEFT_CORNER LOWER_LEADING_CORNER , // UPPER_RIGHT_CORNER UPPER_TRAILING_CORNER . In practice , // bug # 4467063 make impossible ( least 1.4.0 ) . pictureScrollPane.setCorner ( JScrollPane.UPPER_LEFT_CORNER , buttonCorner ) ; pictureScrollPane.setCorner ( JScrollPane.LOWER_LEFT_CORNER , lowerLeft ) ; pictureScrollPane.setCorner ( JScrollPane.UPPER_RIGHT_CORNER , upperRight ) ; // Put panel . setLayout ( new BoxLayout ( , BoxLayout.X_AXIS ) ) ; add ( pictureScrollPane ) ; setBorder ( BorderFactory.createEmptyBorder ( 20,20,20,20 ) ) ; } Often , program set component 's name description directly component 's accessible context . Other time , program set accessible description indirectly tool tip . In case cm toggle button , description set automatically text button . Concepts : How Accessibility Works An object accessible implement Accessible interface . The Accessible interface defines one method , getAccessibleContext , return AccessibleContext object . The AccessibleContext object intermediary contain accessible information accessible object . The following figure show assistive technology get accessible context accessible object query information : AccessibleContext abstract class define minimum set information accessible object must provide . The minimum set include name , description , role , state set , . To identify accessible object particular capability , accessible context implement one interface show Accessible Interfaces table . For example , JButton implement AccessibleAction , AccessibleValue , AccessibleText , AccessibleExtendedComponent . It necessary JButton implement AccessibleIcon implement ImageIcon attach button . Because JComponent class implement Accessible interface , instance direct subclass accessible . If write custom component inherit directly JComponent , need explicitly make implement Accessible interface . JComponent accessible context , call AccessibleJComponent , implement AccessibleComponent interface provide minimal amount accessible information . You provide accessible context custom component create subclass AccessibleJComponent override important method . Making Custom Components Accessible show two example . All standard Swing component implement Accessible interface accessible context implement one precede interface appropriate . The accessible context Swing component implement inner class name style : Component.AccessibleComponent If create subclass standard Swing component subclass substantially different superclass , provide custom accessible context . The easy way create subclass superclass 's accessible context class override method necessary . For example , create JLabel subclass substantially different JLabel , JLabel subclass contain inner class extend AccessibleJLabel . The next section show , use example JComponent subclasses extend AccessibleJComponent . Making Custom Components Accessible The scroll demo program use three custom component class . ScrollablePicture subclass JLabel , Corner Rule subclass JComponent . The ScrollablePicture class relies completely accessibility inherit JLabel JLabel.AccessibleJLabel . The code create instance ScrollablePicture set tool-tip text scrollable picture . The tool-tip text use context component 's accessible description . This behavior provide AccessibleJLabel . The accessible version Corner class contain enough code make instance accessible . We implement accessibility support add code show bold original version Corner . public class Corner extend JComponent implement Accessible { protected void paintComponent ( Graphics g ) { //Fill dirty brown/orange . g.setColor ( new Color ( 230 , 163 , 4 ) ) ; g.fillRect ( 0 , 0 , getWidth ( ) , getHeight ( ) ) ; } public AccessibleContext getAccessibleContext ( ) { ( accessibleContext == null ) { accessibleContext = new AccessibleCorner ( ) ; } return accessibleContext ; } protect class AccessibleCorner extend AccessibleJComponent { //Inherit everything , override nothing. } } All accessibility provide class inherit AccessibleJComponent . This approach fine Corner AccessibleJComponent provide reasonable amount default accessibility information corner uninteresting : exist take little bit space onscreen . Other class , Rule , need provide customized information . Rule provide accessible context manner Corner , context override two method provide detail component 's role state : protected class AccessibleRuler extend AccessibleJComponent { public AccessibleRole getAccessibleRole ( ) { return AccessibleRuleRole.RULER ; } public AccessibleStateSet getAccessibleStateSet ( ) { AccessibleStateSet state = super.getAccessibleStateSet ( ) ; ( orientation == VERTICAL ) { states.add ( AccessibleState.VERTICAL ) ; } else { states.add ( AccessibleState.HORIZONTAL ) ; } ( isMetric ) { states.add ( AccessibleRulerState.CENTIMETERS ) ; } else { states.add ( AccessibleRulerState.INCHES ) ; } return state ; } } AccessibleRole enumeration object identify role Swing component play . It contain predefined role label , button , . The ruler example n't fit well predefined role , program invent new one subclass AccessibleRole : class AccessibleRuleRole extend AccessibleRole { public static final AccessibleRuleRole RULER = new AccessibleRuleRole ( `` ruler '' ) ; protect AccessibleRuleRole ( String key ) { super ( key ) ; } //Should really provide localizable version name . public String toDisplayString ( String resourceBundleName , Locale locale ) { return key ; } } Any component state provide state information assistive technology override getAccessibleStateSet method . A rule two set state : orientation either vertical horizontal , unit measure either centimeter inch . AccessibleState enumeration predefined state . This program use predefined state vertical horizontal orientation . Because AccessibleState contains nothing centimeter inch , program make subclass provide appropriate state : class AccessibleRulerState extend AccessibleState { public static final AccessibleRulerState INCHES = new AccessibleRulerState ( `` inch '' ) ; public static final AccessibleRulerState CENTIMETERS = new AccessibleRulerState ( `` centimeter '' ) ; protect AccessibleRulerState ( String key ) { super ( key ) ; } //Should really provide localizable version name . public String toDisplayString ( String resourceBundleName , Locale locale ) { return key ; } } You 've see implement accessibility two simple component , exist paint onscreen . Components , respond mouse keyboard event , need provide elaborate accessible context . You find example implement accessible context delve source code Swing component . The Accessibility API The table section cover part accessibility API . For information accessibility API , see API documentation class package accessibility package . Also , refer API documentation accessible context individual Swing component . The API support accessibility fall following category : Naming Linking Components Making Custom Component Accessible Accessible Interfaces Naming Linking Components Method Purpose getAccessibleContext ( ) .setAccessibleName ( String ) getAccessibleContext ( ) .setAccessibleDescription ( String ) ( JComponent Accessible object ) Provide name description accessible object . void setToolTipText ( String ) ( JComponent ) Set component 's tool tip . If n't set description , many accessible context use tool-tip text accessible description . void setLabelFor ( Component ) ( JLabel ) Associate label component . This tell assistive technology label describe another component . void setDescription ( String ) ( ImageIcon ) Provide description image icon . Making Custom Component Accessible Interface Class Purpose Accessible ( interface ) Components implement interface accessible . Subclasses JComponent must implement explicitly . AccessibleContext JComponent.AccessibleJComponent ( abstract class subclass ) AccessibleContext define minimal set information require accessible object . The accessible context Swing component subclass name show . For example , accessible context JTree JTree.AccessibleJTree . To provide custom accessible context , custom component contain inner class subclass AccessibleContext . For information , see Making Custom Components Accessible . AccessibleRole AccessibleStateSet ( class ) Define object return AccessibleContext object 's getAccessibleRole getAccessibleStateSet method , respectively . AccessibleRelation AccessibleRelationSet Define relation component implement interface one object . Accessible Interfaces Interface Purpose AccessibleAction Indicates object perform action . By implement interface , accessible context give information action accessible object perform tell accessible object perform . AccessibleComponent Indicates accessible object onscreen presence . Through interface , accessible object provide information size , position , visibility . The accessible context standard Swing component implement interface , directly indirectly . The accessible context custom component . The AccessibleExtendedComponent method prefer . AccessibleEditableText Indicates accessible object display editable text . In addition information available superinterface , AccessibleText , method provide cut , paste , delete , select , insert text . AccessibleExtendedComponent In addition information available superinterface , AccessibleComponent , method provide obtain key binding , border text , tool-tip text . AccessibleExtendedTable In addition information available superinterface , AccessibleTable , method provide convert index row column . AccessibleHypertext Indicates accessible object contain hyperlink . Through interface , accessible object provide information link allow traverse . AccessibleIcon Indicates accessible object associate icon . Methods provide return information icon , size description . AccessibleKeyBinding Indicates accessible object support one keyboard shortcuts use select object . Methods provide return key binding give object . AccessibleSelection Indicates accessible object contain selection . Accessible context implement interface report information current selection modify selection . AccessibleTable Indicates accessible object present data two-dimensional data object . Through interface information table table caption , row column size , description , name provide . The AccessibleExtendedTable method prefer . AccessibleText Indicates accessible object display text . This interface provide method return part text , attribute apply , information text length . AccessibleValue Indicates object numeric value . Through interface accessible object provide information current value minimum maximum value . Examples Use Accessibility API The follow table list example good support assistive technology . Example Where Described Notes AccessibleScrollDemo This section Contains two custom component implement Accessible interface . To see less accessible version program see How Use Scroll Panes . ButtonDemo How Use Common Button API Uses three button . Supports accessibility button text , mnemonic , tool tip .