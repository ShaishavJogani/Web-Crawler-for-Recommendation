This feature enable plug-in locale-dependent data service . In way , third party able provide implementation locale-sensitive class java.text java.util package . The implementation SPIs ( Service Provider Interface ) base abstract class Java interface implement service provider . At runtime Java class load mechanism use dynamically locate load class implement SPI . You use locale-sensitive service SPI provide following locale sensitive implementation : BreakIterator object Collator object Language code , Country code , Variant name Locale class Time Zone names Currency symbols DateFormat object DateFormatSymbol object NumberFormat object DecimalFormatSymbols object The corresponding SPIs contain java.text.spi java.util.spi package : java.util.spi java.text.spi CurrencyNameProvider LocaleServiceProvider TimeZoneNameProvider CalendarDataProvider BreakIteratorProvider CollatorProvider DateFormatProvider DateFormatSymbolsProvider DecimalFormatSymbolsProvider NumberFormatProvider For example , would like provide NumberFormat object new locale , implement java.text.spi.NumberFormatProvider class . You need extend class implement method : getCurrencyInstance ( Locale locale ) getIntegerInstance ( Locale locale ) getNumberInstance ( Locale locale ) getPercentInstance ( Locale locale ) Locale loc = new Locale ( `` da '' , `` DK '' ) ; NumberFormat nf = NumberFormatProvider.getNumberInstance ( loc ) ; These method first check whether Java runtime environment support requested locale ; , use support . Otherwise , method call getAvailableLocales ( ) method installed provider appropriate interface find provider support requested locale .