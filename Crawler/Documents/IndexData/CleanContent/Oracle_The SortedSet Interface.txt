A SortedSet Set maintain element ascend order , sort accord element ' natural ordering accord Comparator provide SortedSet creation time . In addition normal Set operation , SortedSet interface provide operation following : Range view — allow arbitrary range operation sort set Endpoints — return first last element sorted set Comparator access — return Comparator , , use sort set The code SortedSet interface follow . public interface SortedSet < E > extend Set < E > { // Range-view SortedSet < E > subSet ( E fromElement , E toElement ) ; SortedSet < E > headSet ( E toElement ) ; SortedSet < E > tailSet ( E fromElement ) ; // Endpoints E first ( ) ; E last ( ) ; // Comparator access Comparator < ? super E > comparator ( ) ; } Set Operations The operation SortedSet inherits Set behave identically sort set normal set two exception : The Iterator return iterator operation traverse sorted set order . The array return toArray contain sorted set 's element order . Although interface n't guarantee , toString method Java platform 's SortedSet implementation return string contain element sorted set , order . Standard Constructors By convention , general-purpose Collection implementation provide standard conversion constructor take Collection ; SortedSet implementation exception . In TreeSet , constructor create instance sort element accord natural ordering . This probably mistake . It would good check dynamically see whether specified collection SortedSet instance , , sort new TreeSet accord criterion ( comparator natural ordering ) . Because TreeSet take approach , also provide constructor take SortedSet return new TreeSet contain element sort accord criterion . Note compile-time type argument , runtime type , determines two constructor invoke ( whether sort criterion preserve ) . SortedSet implementation also provide , convention , constructor take Comparator return empty set sort accord specify Comparator . If null pass constructor , return set sort element accord natural ordering . Range-view Operations The range-view operation somewhat analogous provide List interface , one big difference . Range view sorted set remain valid even backing sort set modify directly . This feasible endpoint range view sort set absolute point element space rather specific element backing collection , case list . A range-view sorted set really window onto whatever portion set lie designated part element space . Changes range-view write back backing sort set vice versa . Thus , 's okay use range-views sorted set long period time , unlike range-views list . Sorted set provide three range-view operation . The first , subSet , take two endpoint , like subList . Rather index , endpoint object must comparable element sorted set , use Set 's Comparator natural ordering element , whichever Set use order . Like subList , range half open , include low endpoint exclude high one . Thus , following line code tell many word `` doorbell '' `` pickle '' , include `` doorbell '' exclude `` pickle '' , contain SortedSet string call dictionary : int count = dictionary.subSet ( `` doorbell '' , `` pickle '' ) .size ( ) ; In like manner , following one-liner remove element begin letter f. dictionary.subSet ( `` f '' , `` g '' ) .clear ( ) ; A similar trick use print table tell many word begin letter . ( char ch = 'a ' ; ch < = 'z ' ; ) { String = String.valueOf ( ch++ ) ; String = String.valueOf ( ch ) ; System.out.println ( + `` : `` + dictionary.subSet ( , ) .size ( ) ) ; } Suppose want view closed interval , contain endpoint , instead open interval . If element type allow calculation successor give value element space , merely request subSet lowEndpoint successor ( highEndpoint ) . Although n't entirely obvious , successor string String 's natural ordering + `` \0 '' — , null character append . Thus , following one-liner tell many word `` doorbell '' `` pickle '' , include doorbell pickle , contain dictionary . count = dictionary.subSet ( `` doorbell '' , `` pickle\0 '' ) .size ( ) ; A similar technique use view open interval , contain neither endpoint . The open-interval view lowEndpoint highEndpoint half-open interval successor ( lowEndpoint ) highEndpoint . Use follow calculate number word `` doorbell '' `` pickle '' , exclude . count = dictionary.subSet ( `` doorbell\0 '' , `` pickle '' ) .size ( ) ; The SortedSet interface contain two range-view operation — headSet tailSet , take single Object argument . The former return view initial portion backing SortedSet , include specified object . The latter return view final portion backing SortedSet , begin specify object continue end backing SortedSet . Thus , following code allow view dictionary two disjoint volume ( a-m n-z ) . SortedSet < String > volume1 = dictionary.headSet ( `` n '' ) ; SortedSet < String > volume2 = dictionary.tailSet ( `` n '' ) ; Endpoint Operations The SortedSet interface contain operation return first last element sorted set , surprisingly call first last . In addition obvious us , last allow workaround deficiency SortedSet interface . One thing 'd like SortedSet go interior Set iterate forward backward . It 's easy enough go forward interior : Just get tailSet iterate . Unfortunately , 's easy way go backward . The following idiom obtain first element less specified object element space . Object predecessor = ss.headSet ( ) .last ( ) ; This fine way go one element backward point interior sorted set . It could apply repeatedly iterate backward , inefficient , require lookup element return . Comparator Accessor The SortedSet interface contain accessor method call comparator return Comparator use sort set , null set sort accord natural ordering element . This method provide sorted set copy new sort set ordering . It use SortedSet constructor describe previously .