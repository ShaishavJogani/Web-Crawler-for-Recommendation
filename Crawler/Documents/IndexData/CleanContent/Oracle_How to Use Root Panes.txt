In general , n't directly create JRootPane object . Instead , get JRootPane ( whether want ! ) instantiate JInternalFrame one top-level Swing container , JApplet , JDialog , JFrame . Using Top-Level Containers tell basic use root pane — get content pane , set layout manager , add Swing component . This section tell root pane , include component make root pane use . As preceding figure show , root pane four part : The glass pane Hidden , default . If make glass pane visible , 's like sheet glass part root pane . It 's completely transparent unless implement glass pane 's paintComponent method something , intercept input event root pane . In next section , 'll see example use glass pane . The layered pane Serves position content , consist content pane optional menu bar . Can also hold component specified Z order . For information , see The Layered Pane . The content pane The container root pane 's visible component , exclude menu bar . For information use content pane , see Using Top-Level Containers . The optional menu bar The home root pane 's container 's menu . If container menu bar , generally use container 's setJMenuBar method put menu bar appropriate place . For information use menu menu bar , see How Use Menus . The Glass Pane The glass pane useful want able catch event paint area already contain one component . For example , deactivate mouse event multi-component region glass pane intercept event . Or display image multiple component use glass pane . Here 's picture application demonstrate glass pane feature . It contain check box let set whether glass pane `` visible '' — whether get event paint onscreen . When glass pane visible , block input event reach component content pane . It also paint red dot place last detect mouse-pressed event . Try : Click Launch button run GlassPaneDemo use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Click Button 1 . The button 's appearance change show 's click . Click check box glass pane become `` visible , '' click Button 1 . The button act click glass pane intercept mouse event . The glass pane paint red circle release mouse . Click check box glass pane hide . When glass pane detect event check box , forward check box . Otherwise , check box would respond click . The following code GlassPaneDemo.java show hide glass pane . This program happen create glass pane . However , glass pane n't painting , program might simply attach listener default glass pane , return getGlassPane . myGlassPane = new MyGlassPane ( ... ) ; changeButton.addItemListener ( myGlassPane ) ; frame.setGlassPane ( myGlassPane ) ; ... class MyGlassPane extend JComponent implement ItemListener { ... //React change button click . public void itemStateChanged ( ItemEvent e ) { setVisible ( e.getStateChange ( ) == ItemEvent.SELECTED ) ; } ... } The next code snippet implement mouse-event handling glass pane . If mouse event occur check box , glass pane redispatches event check box receive . ... //In implementation glass pane 's mouse listener : public void mouseMoved ( MouseEvent e ) { redispatchMouseEvent ( e , false ) ; } ... /* The mouseDragged , mouseClicked , mouseEntered , * mouseExited , mousePressed method * implementation mouseMoved . */ ... public void mouseReleased ( MouseEvent e ) { redispatchMouseEvent ( e , true ) ; } private void redispatchMouseEvent ( MouseEvent e , boolean repaint ) { Point glassPanePoint = e.getPoint ( ) ; Container container = contentPane ; Point containerPoint = SwingUtilities.convertPoint ( glassPane , glassPanePoint , contentPane ) ; ( containerPoint.y < 0 ) { //we 're content pane //Could special code handle mouse event //the menu bar non-system window decoration , //the one provide Java look feel. } else { //The mouse event probably content pane . //Find exactly component 's . Component component = SwingUtilities.getDeepestComponentAt ( container , containerPoint.x , containerPoint.y ) ; ( ( component ! = null ) & & ( component.equals ( liveButton ) ) ) { //Forward event check box . Point componentPoint = SwingUtilities.convertPoint ( glassPane , glassPanePoint , component ) ; component.dispatchEvent ( new MouseEvent ( component , e.getID ( ) , e.getWhen ( ) , e.getModifiers ( ) , componentPoint.x , componentPoint.y , e.getClickCount ( ) , e.isPopupTrigger ( ) ) ) ; } } //Update glass pane request . ( repaint ) { glassPane.setPoint ( glassPanePoint ) ; glassPane.repaint ( ) ; } } Here code MyGlassPane implement painting . protect void paintComponent ( Graphics g ) { ( point ! = null ) { g.setColor ( Color.red ) ; g.fillOval ( point.x - 10 , point.y - 10 , 20 , 20 ) ; } } The Layered Pane A layered pane container depth overlap component appear one top . General information layered pane How Use Layered Panes . This section discuss particular root pane use layered pane . Each root pane place menu bar content pane instance JLayeredPane . The Z ordering layered pane provide enables behavior display popup menu component . You choose put component root pane 's layered pane . If , aware certain depth define use specific function , use depth intend . Otherwise , component might play well others . Here 's diagram show functional layer relationship : The table describe intend use layer list JLayeredPane constant correspond layer : Layer Name Value Description FRAME_CONTENT_LAYER new Integer ( -30000 ) The root pane add menu bar content pane layered pane depth . DEFAULT_LAYER new Integer ( 0 ) If n't specify component 's depth add layered pane , layered pane put depth . PALETTE_LAYER new Integer ( 100 ) This layer useful float tool bar palette . MODAL_LAYER new Integer ( 200 ) Modal internal-frame dialog would belong layer . POPUP_LAYER new Integer ( 300 ) Popups go layer need appear everything . DRAG_LAYER new Integer ( 400 ) Intended use component drag . The component return regular layer drop . Here picture RootLayeredPaneDemo , version LayeredPaneDemo use root pane 's layered pane , rather create new layered pane . Try : Click Launch button run RootLayeredPaneDemo use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Move cursor around window , Duke move top component . Note cursor top non-label component — whether 's content pane Java-look-and-feel provide title bar — Duke 's movement temporarily stop . This mouse-motion event go component 's deep containment hierarchy interested mouse event . The mouse-motion listener move Duke register layered pane , component pane ( exception label ) happen mouse-motion listener . When mouse move interested component layered pane , layered pane n't get event interested component . Making sure Top Position Layer check box select , change Duke 's layer Yellow ( -30000 ) . As , appear top component , except Magenta ( 0 ) Cyan ( 301 ) rectangle . Keeping Duke Yellow layer , click check box send Duke back layer -30000 . Duke disappear content pane component . Change Duke 's layer Cyan ( 301 ) , move Duke bit 's stand top edge Yellow rectangle , press Space bring combo box 's drop-down list . If look feel implement drop-down list lightweight popup , Duke appear top drop-down list . The Root Pane API The table follow list API use root pane , glass pane , content pane . For information use content pane , go Using Top-Level Containers . Here table section : Using Root Pane Setting Getting Root Pane 's Contents The API use part root pane describe elsewhere : The Layered Pane API The Menu API Using Root Pane Method Purpose JRootPane getRootPane ( ) ( JApplet , JDialog , JFrame , JInternalFrame , JWindow ) Get root pane applet , dialog , frame , internal frame , window . static JRootPane getRootPane ( Component ) ( SwingUtilities ) If component contain root pane , return root pane . Otherwise , return root pane ( ) contain component . JRootPane getRootPane ( ) ( JComponent ) Invoke SwingUtilities getRootPane method JComponent . void setDefaultButton ( JButton ) JButton getDefaultButton ( ) Set get button ( ) default button root pane . A look-and-feel-specific action , press Enter , cause button 's action perform . Setting Getting Root Pane 's Contents The following method define JApplet , JDialog , JFrame , JInternalFrame , JRootPane , JWindow , unless note otherwise . Method Purpose void setGlassPane ( Component ) Component getGlassPane ( ) Set get glass pane . void setLayeredPane ( JLayeredPane ) Container getLayeredPane ( ) Set get layered pane . void setContentPane ( Container ) Container getContentPane ( ) Set get content pane . void setJMenuBar ( JMenuBar ) JMenuBar getJMenuBar ( ) ( define JWindow ) Set get menu bar . Examples Use Root Panes Every Swing program root pane , reference directly . The example following list illustrate use feature JRootPane glass pane . Also see list : Examples Use Layered Panes Examples Use Menus Examples Use Frames ( example use content pane ) Example Where Described Notes GlassPaneDemo This section Uses glass pane paint bit redispatches event . RootLayeredPaneDemo This section Adapts LayeredPaneDemo use root pane 's layered pane . ListDialog How Use Lists Sets default button JDialog . FrameDemo2 How Make Frames Sets default button JFrame .