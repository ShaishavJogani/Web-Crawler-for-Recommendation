The AlphaComposite class encapsulate various compositing style , determine overlapping object render . An AlphaComposite also alpha value specify degree transparency : alpha = 1.0 totally opaque , alpha = 0.0 totally transparent ( clear ) . AlphaComposite support standard Porter-Duff compositing rule show following table . Compositing Rule Description Source-over ( SRC_OVER ) If pixel object render ( source ) location previously render pixel ( destination ) , source pixel render destination pixel . Source-in ( SRC_IN ) If pixel source destination overlap , source pixel overlapping area render . Source-out ( SRC_OUT ) If pixel source destination overlap , source pixel outside overlapping area render . The pixel overlapping area clear . Destination-over ( DST_OVER ) If pixel source destination overlap , source pixel outside overlapping area render . The pixel overlapping area change . Destination-in ( DST_IN ) If pixel source destination overlap , alpha source apply destination pixel overlapping area . If alpha = 1.0 , pixel overlapping area unchanged ; alpha 0.0 , pixel overlapping area clear . Destination-out ( DST_OUT ) If pixel source destination overlap , alpha source apply destination pixel overlapping area . If alpha = 1.0 , pixel overlapping area clear ; alpha 0.0 , pixel overlapping area unchanged . Clear ( CLEAR ) If pixel source destination overlap , pixel overlapping area clear . To change compositing style use Graphics2D class , create AlphaComposite object pas setComposite method . Example : Composite This program illustrate effect various compositing style alpha combination . Note : If n't see applet running , need install least Java SE Development Kit ( JDK ) 7 release . Composite.java . contain full code applet . A new AlphaComposite object ac construct call AlphaComposite.getInstance specify desire compositing rule . AlphaComposite ac = AlphaComposite.getInstance ( AlphaComposite.SRC ) ; When different compositing rule alpha value select , AlphaComposite.getInstance call , new AlphaComposite assign ac . The select alpha apply addition per-pixel alpha value pass second parameter AlphaComposite.getInstance . ac = AlphaComposite.getInstance ( getRule ( rule ) , alpha ) ; The composite attribute modify pass AlphaComposite object Graphics 2D setComposite . The object render BufferedImage later copy screen , composite attribute set Graphics2D context BufferedImage : BufferedImage buffImg = new BufferedImage ( w , h , BufferedImage.TYPE_INT_ARGB ) ; Graphics2D gbi = buffImg.createGraphics ( ) ; ... gbi.setComposite ( ac ) ;