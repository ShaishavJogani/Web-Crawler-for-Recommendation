The String class number method examine content string , find character substring within string , change case , task . Getting Characters Substrings Index You get character particular index within string invoke charAt ( ) accessor method . The index first character 0 , index last character length ( ) -1 . For example , following code get character index 9 string : String anotherPalindrome = `` Niagara . O roar ! `` ; char aChar = anotherPalindrome.charAt ( 9 ) ; Indices begin 0 , character index 9 'O ' , illustrate following figure : If want get one consecutive character string , use substring method . The substring method two version , show following table : The substring Methods String Class Method Description String substring ( int beginIndex , int endIndex ) Returns new string substring string . The substring begin specified beginIndex extend character index endIndex - 1 . String substring ( int beginIndex ) Returns new string substring string . The integer argument specify index first character . Here , return substring extends end original string . The following code get Niagara palindrome substring extend index 11 , include , index 15 , word `` roar '' : String anotherPalindrome = `` Niagara . O roar ! `` ; String roar = anotherPalindrome.substring ( 11 , 15 ) ; Other Methods Manipulating Strings Here several String method manipulate string : Other Methods String Class Manipulating Strings Method Description String [ ] split ( String regex ) String [ ] split ( String regex , int limit ) Searches match specify string argument ( contain regular expression ) split string array string accordingly . The optional integer argument specify maximum size returned array . Regular expression cover lesson title `` Regular Expressions . '' CharSequence subSequence ( int beginIndex , int endIndex ) Returns new character sequence construct beginIndex index endIndex - 1 . String trim ( ) Returns copy string leading trail white space remove . String toLowerCase ( ) String toUpperCase ( ) Returns copy string convert lowercase uppercase . If conversion necessary , method return original string . Searching Characters Substrings String Here String method find character substring within string . The String class provide accessor method return position within string specific character substring : indexOf ( ) lastIndexOf ( ) . The indexOf ( ) method search forward beginning string , lastIndexOf ( ) method search backward end string . If character substring find , indexOf ( ) lastIndexOf ( ) return -1 . The String class also provide search method , contains , return true string contain particular character sequence . Use method need know string contain character sequence , precise location n't important . The follow table describe various string search method . The Search Methods String Class Method Description int indexOf ( int ch ) int lastIndexOf ( int ch ) Returns index first ( last ) occurrence specified character . int indexOf ( int ch , int fromIndex ) int lastIndexOf ( int ch , int fromIndex ) Returns index first ( last ) occurrence specified character , search forward ( backward ) specify index . int indexOf ( String str ) int lastIndexOf ( String str ) Returns index first ( last ) occurrence specified substring . int indexOf ( String str , int fromIndex ) int lastIndexOf ( String str , int fromIndex ) Returns index first ( last ) occurrence specified substring , search forward ( backward ) specify index . boolean contains ( CharSequence ) Returns true string contain specified character sequence . Note : CharSequence interface implement String class . Therefore , use string argument contains ( ) method . Replacing Characters Substrings String The String class method insert character substring string . In general , need : You create new string concatenation substring remove string substring want insert . The String class four method replace found character substring , however . They : Methods String Class Manipulating Strings Method Description String replace ( char oldChar , char newChar ) Returns new string result replace occurrence oldChar string newChar . String replace ( CharSequence target , CharSequence replacement ) Replaces substring string match literal target sequence specified literal replacement sequence . String replaceAll ( String regex , String replacement ) Replaces substring string match give regular expression give replacement . String replaceFirst ( String regex , String replacement ) Replaces first substring string match give regular expression give replacement . An Example The following class , Filename , illustrate use lastIndexOf ( ) substring ( ) isolate different part file name . Note : The method following Filename class n't error checking assume argument contain full directory path filename extension . If method production code , would verify argument properly construct . public class Filename { private String fullPath ; private char pathSeparator , extensionSeparator ; public Filename ( String str , char sep , char ext ) { fullPath = str ; pathSeparator = sep ; extensionSeparator = ext ; } public String extension ( ) { int dot = fullPath.lastIndexOf ( extensionSeparator ) ; return fullPath.substring ( dot + 1 ) ; } // get filename without extension public String filename ( ) { int dot = fullPath.lastIndexOf ( extensionSeparator ) ; int sep = fullPath.lastIndexOf ( pathSeparator ) ; return fullPath.substring ( sep + 1 , dot ) ; } public String path ( ) { int sep = fullPath.lastIndexOf ( pathSeparator ) ; return fullPath.substring ( 0 , sep ) ; } } Here program , FilenameDemo , construct Filename object call method : public class FilenameDemo { public static void main ( String [ ] args ) { final String FPATH = `` /home/user/index.html '' ; Filename myHomePage = new Filename ( FPATH , '/ ' , ' . ' ) ; System.out.println ( `` Extension = `` + myHomePage.extension ( ) ) ; System.out.println ( `` Filename = `` + myHomePage.filename ( ) ) ; System.out.println ( `` Path = `` + myHomePage.path ( ) ) ; } } And 's output program : Extension = html Filename = index Path = /home/user As show following figure , extension method use lastIndexOf locate last occurrence period ( . ) file name . Then substring use return value lastIndexOf extract file name extension â€” , substring period end string . This code assume file name period ; file name period , lastIndexOf return -1 , substring method throw StringIndexOutOfBoundsException . Also , notice extension method use dot + 1 argument substring . If period character ( . ) last character string , dot + 1 equal length string , one large large index string ( index start 0 ) . This legal argument substring method accept index equal , great , length string interpret mean `` end string . ''