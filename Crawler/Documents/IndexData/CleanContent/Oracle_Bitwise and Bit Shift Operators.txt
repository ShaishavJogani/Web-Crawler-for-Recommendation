The Java programming language also provide operator perform bitwise bit shift operation integral type . The operator discuss section less commonly use . Therefore , coverage brief ; intent simply make aware operator exist . The unary bitwise complement operator `` ~ '' invert bit pattern ; apply integral type , make every `` 0 '' `` 1 '' every `` 1 '' `` 0 '' . For example , byte contain 8 bit ; apply operator value whose bit pattern `` 00000000 '' would change pattern `` 11111111 '' . The sign leave shift operator `` < < `` shift bit pattern left , sign right shift operator `` > > '' shift bit pattern right . The bit pattern give left-hand operand , number position shift right-hand operand . The unsigned right shift operator `` > > > '' shift zero leftmost position , leftmost position `` > > '' depend sign extension . The bitwise & operator perform bitwise AND operation . The bitwise ^ operator perform bitwise exclusive OR operation . The bitwise | operator perform bitwise inclusive OR operation . The following program , BitDemo , use bitwise AND operator print number `` 2 '' standard output . class BitDemo { public static void main ( String [ ] args ) { int bitmask = 0x000F ; int val = 0x2222 ; // print `` 2 '' System.out.println ( val & bitmask ) ; } }