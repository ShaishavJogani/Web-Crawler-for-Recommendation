As see , generic give impression new container type create different type parameter . We also see addition normal type checking , type parameter match well assign generic variable . In case restrictive . What would like relax additional checking ? What would like define collection variable hold generic collection , regardless parameter type hold ? The wildcard type represent character < ? > , pronouncedUnknown , orAny-Type . Any-Type express also < ? extends Object > . Any-Type include Interfaces , Classes . So define collection whose element type match anything . See : Upper bound wildcards [ edit ] You specify restriction type class may use . For example , < ? extends ClassName > allow object classClassNameor subclass . For example , create collection may contain `` Serializable '' object , specify : The code valid theStringclass serializable . Use class serializable would cause compilation error . The added item retrieve asSerializableobject . You call method theSerializableinterface cast toString . The following collection contain object extend classAnimal . Lower bound wildcards [ edit ] < ? super ClassName > specify restriction type class may use . For example , declare Comparator compare Dogs , use : Now suppose define comparator compare Animals : SinceDogsareAnimals , use comparator compare Dogs also . Comparators superclass Dog also compare Dog ; comparators strict subclass . The code valid theAnimalclass supertype theDogclass . Use class supertype would cause compilation error . Unbounded wildcard [ edit ] The advantage unbounded wildcard ( i.e. < ? > ) compare raw type ( i.e . without generic ) explicitly say parameterized type unknown , notany type . That way , operation imply know type forbid avoid unsafe operation . Consider following code : This code compile code may corrupt collection collection contain string : This situation could avoid theaddAtBottom ( Collection ) method define unbounded wildcard : addAtBottom ( Collection < ? > ) . With signature , impossible compile code dependent parameterized type . Only independent method collection ( clear ( ) , isEmpty ( ) , iterator ( ) , remove ( Object ) , size ( ) , ... ) call . For instance , addAtBottom ( Collection < ? > ) could contain following code :