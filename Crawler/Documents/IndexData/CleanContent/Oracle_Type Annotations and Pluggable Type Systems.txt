Before Java SE 8 release , annotation could apply declaration . As Java SE 8 release , annotation also apply type use . This mean annotation use anywhere use type . A example type use class instance creation expression ( new ) , cast , implement clause , throw clause . This form annotation call type annotation several example provide Annotations Basics . Type annotation create support improved analysis Java program way ensure strong type checking . The Java SE 8 release provide type checking framework , allow write ( download ) type checking framework implement one pluggable module use conjunction Java compiler . For example , want ensure particular variable program never assign null ; want avoid trigger NullPointerException . You write custom plug-in check . You would modify code annotate particular variable , indicate never assign null . The variable declaration might look like : @ NonNull String str ; When compile code , include NonNull module command line , compiler print warning detect potential problem , allow modify code avoid error . After correct code remove warning , particular error occur program run . You use multiple type-checking module module check different kind error . In way , build top Java type system , add specific check want . With judicious use type annotation presence pluggable type checker , write code strong less prone error . In many case , write type checking module . There third party work . For example , might want take advantage Checker Framework create University Washington . This framework include NonNull module , well regular expression module , mutex lock module . For information , see Checker Framework .