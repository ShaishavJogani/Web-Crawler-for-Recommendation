The Java programming language provide two basic synchronization idiom : synchronize method synchronized statement . The complex two , synchronize statement , describe next section . This section synchronize method . To make method synchronize , simply add synchronized keyword declaration : public class SynchronizedCounter { private int c = 0 ; public synchronize void increment ( ) { c++ ; } public synchronize void decrement ( ) { c -- ; } public synchronize int value ( ) { return c ; } } If count instance SynchronizedCounter , make method synchronize two effect : First , possible two invocation synchronized method object interleave . When one thread execute synchronized method object , thread invoke synchronize method object block ( suspend execution ) first thread object . Second , synchronize method exit , automatically establish happens-before relationship subsequent invocation synchronized method object . This guarantee change state object visible thread . Note constructor synchronize â€” use synchronize keyword constructor syntax error . Synchronizing constructor n't make sense , thread create object access construct . Warning : When construct object share thread , careful reference object `` leak '' prematurely . For example , suppose want maintain List call instance contain every instance class . You might tempt add following line constructor : instances.add ( ) ; But thread use instance access object construction object complete . Synchronized method enable simple strategy prevent thread interference memory consistency error : object visible one thread , read writes object 's variable synchronize method . ( An important exception : final field , modify object construct , safely read non-synchronized method , object construct ) This strategy effective , present problem liveness , 'll see later lesson .