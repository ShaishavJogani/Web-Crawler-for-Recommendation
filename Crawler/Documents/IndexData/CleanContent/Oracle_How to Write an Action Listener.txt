Action listener probably easy — common — event handler implement . You implement action listener define user performs certain operation . An action event occur , whenever action perform user . Examples : When user click button , choose menu item , press Enter text field . The result actionPerformed message send action listener register relevant component . To write Action Listener , follow step give : Declare event handler class specify class either implement ActionListener interface extend class implement ActionListener interface . For example : public class MyClass implement ActionListener { Register instance event handler class listener one component . For example : someComponent.addActionListener ( instanceOfMyClass ) ; Include code implement method listener interface . For example : public void actionPerformed ( ActionEvent e ) { ... //code react action ... } In general , detect user click onscreen button ( keyboard equivalent ) , program must object implement ActionListener interface . The program must register object action listener button ( event source ) , use addActionListener method . When user click onscreen button , button fire action event . This result invocation action listener 's actionPerformed method ( method ActionListener interface ) . The single argument method ActionEvent object give information event source . Let u write simple program display many number time button click user . First , code set TextField , button numClicks variable : public class AL extend Frame implement WindowListener , ActionListener { TextField text = new TextField ( 20 ) ; Button b ; private int numClicks = 0 ; In example , event handler class AL implement ActionListener . We would like handle button-click event , add action listener button b : b = new Button ( `` Click '' ) ; b.addActionListener ( ) ; In code , Button b component upon instance event handler class AL register . Now , want display text many number time user click button . We write code : public void actionPerformed ( ActionEvent e ) { numClicks++ ; text.setText ( `` Button Clicked `` + numClicks + `` time '' ) ; Now , user click Button b , button fire action event invoke action listener 's actionPerformed method . Each time user press button , numClicks variable append message display text field . Here complete program ( AL.java ) : import java.awt . * ; import java.awt.event . * ; public class AL extend Frame implement WindowListener , ActionListener { TextField text = new TextField ( 20 ) ; Button b ; private int numClicks = 0 ; public static void main ( String [ ] args ) { AL myWindow = new AL ( `` My first window '' ) ; myWindow.setSize ( 350,100 ) ; myWindow.setVisible ( true ) ; } public AL ( String title ) { super ( title ) ; setLayout ( new FlowLayout ( ) ) ; addWindowListener ( ) ; b = new Button ( `` Click '' ) ; add ( b ) ; add ( text ) ; b.addActionListener ( ) ; } public void actionPerformed ( ActionEvent e ) { numClicks++ ; text.setText ( `` Button Clicked `` + numClicks + `` time '' ) ; } public void windowClosing ( WindowEvent e ) { dispose ( ) ; System.exit ( 0 ) ; } public void windowOpened ( WindowEvent e ) { } public void windowActivated ( WindowEvent e ) { } public void windowIconified ( WindowEvent e ) { } public void windowDeiconified ( WindowEvent e ) { } public void windowDeactivated ( WindowEvent e ) { } public void windowClosed ( WindowEvent e ) { } } More Examples : Beeper program example available trail 's introduction event , Introduction Event Listeners . You find entire program Beeper.java . The example describe section , MultiListener.java , two action source two action listener , one listener listen source listening one . The Action Listener API The ActionListener Interface Because ActionListener one method , corresponding adapter class . Method Purpose actionPerformed ( actionEvent ) Called user perform action . The ActionEvent Class Method Purpose String getActionCommand ( ) Returns string associate action . Most object fire action event support method call setActionCommand let set string . int getModifiers ( ) Returns integer represent modifier key user press action event occur . You use ActionEvent-defined constant SHIFT_MASK , CTRL_MASK , META_MASK , ALT_MASK determine key press . For example , user Shift-selects menu item , following expression nonzero : actionEvent.getModifiers ( ) & ActionEvent.SHIFT_MASK Object getSource ( ) ( java.util.EventObject ) Returns object fire event . Examples Use Action Listeners The follow table list many example use action listener . Example Where Described Notes Beeper This section Introduction Event Listeners Contains one button one action listener beep click button . MultiListener Introduction Event Listeners Registers two different action listener one button . Also register action listener two different button . RadioButtonDemo How Use Radio Buttons Registers action listener five radio button . The listener use getActionCommand method determine radio button fire event . MenuDemo How Use Menus Shows listen action event menu item . TextDemo How Use Text Fields An applet register action listener text field . IconDemo How Use Icons Loads image action listener . Because load image take , program use SwingWorker load image background thread . TableDialogEditDemo How Use Tables Registers action listener factory method OK button color chooser dialog . SliderDemo How Use Sliders Registers action listener timer control animation loop .