It often useful background task provide interim result still work . The task invoke SwingWorker.publish . This method accept variable number argument . Each argument must type specify SwingWorker 's second type parameter . To collect result provide publish , override SwingWorker.process This method invoke event dispatch thread . Results multiple invocation publish often accumulate single invocation process . Let 's look way Flipper.java example use publish provide interim result . Click Launch button run Flipper use Javaâ„¢ Web Start ( download JDK 7 later ) . Or , compile run example , consult example index . This program test fairness java.util.Random generate series random boolean value background task . This equivalent flip coin ; hence name Flipper . To report result , background task use object type FlipPair private static class FlipPair { private final long head , total ; FlipPair ( long head , long total ) { this.heads = head ; this.total = total ; } } The head field number time random value true ; total field total number random value . The background task represent instance FlipTask : private class FlipTask extend SwingWorker < Void , FlipPair > { Since task return final result , matter first type parameter ; Void use placeholder . The task invokes publish `` coin flip '' : @ Override protect Void doInBackground ( ) { long head = 0 ; long total = 0 ; Random random = new Random ( ) ; ( ! isCancelled ( ) ) { total++ ; ( random.nextBoolean ( ) ) { heads++ ; } publish ( new FlipPair ( head , total ) ) ; } return null ; } ( The isCancelled method discuss next section . ) Because publish invoke frequently , lot FlipPair value probably accumulate process invoke event dispatch thread ; process interested last value report time , use update GUI : protect void process ( List < FlipPair > pair ) { FlipPair pair = pairs.get ( pairs.size ( ) - 1 ) ; headsText.setText ( String.format ( `` % '' , pair.heads ) ) ; totalText.setText ( String.format ( `` % '' , pair.total ) ) ; devText.setText ( String.format ( `` % .10g '' , ( ( double ) pair.heads ) / ( ( double ) pair.total ) - 0.5 ) ) ; } If Random fair , value display devText get close close 0 Flipper run . Note : The setText method use Flipper actually `` thread safe '' define specification . That mean could dispense publish process set text field directly worker thread . We 've choose ignore fact order provide simple demonstration SwingWorker interim result .