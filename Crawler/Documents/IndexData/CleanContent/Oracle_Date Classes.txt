The Date-Time API provide four class deal exclusively date information , without respect time time zone . The use class suggest class name : LocalDate , YearMonth , MonthDay , Year . LocalDate A LocalDate represent year-month-day ISO calendar useful represent date without time . You might use LocalDate track significant event , birth date wedding date . The following example use method create instance LocalDate : LocalDate date = LocalDate.of ( 2000 , Month.NOVEMBER , 20 ) ; LocalDate nextWed = date.with ( TemporalAdjusters.next ( DayOfWeek.WEDNESDAY ) ) ; For information TemporalAdjuster interface , see Temporal Adjuster . In addition usual method , LocalDate class offer getter method obtain information give date . The getDayOfWeek method return day week particular date fall . For example , following line code return `` MONDAY '' : DayOfWeek dotw = LocalDate.of ( 2012 , Month.JULY , 9 ) .getDayOfWeek ( ) ; The following example use TemporalAdjuster retrieve first Wednesday specific date . LocalDate date = LocalDate.of ( 2000 , Month.NOVEMBER , 20 ) ; TemporalAdjuster adj = TemporalAdjusters.next ( DayOfWeek.WEDNESDAY ) ; LocalDate nextWed = date.with ( adj ) ; System.out.printf ( `` For date % , next Wednesday % s. % n '' , date , nextWed ) ; Running code produce following : For date 2000-11-20 , next Wednesday 2000-11-22 . The Period Duration section also example use LocalDate class . YearMonth The YearMonth class represent month specific year . The following example use YearMonth.lengthOfMonth ( ) method determine number day several year month combination . YearMonth date = YearMonth.now ( ) ; System.out.printf ( `` % : % % n '' , date , date.lengthOfMonth ( ) ) ; YearMonth date2 = YearMonth.of ( 2010 , Month.FEBRUARY ) ; System.out.printf ( `` % : % % n '' , date2 , date2.lengthOfMonth ( ) ) ; YearMonth date3 = YearMonth.of ( 2012 , Month.FEBRUARY ) ; System.out.printf ( `` % : % % n '' , date3 , date3.lengthOfMonth ( ) ) ; The output code look like following : 2013-06 : 30 2010-02 : 28 2012-02 : 29 MonthDay The MonthDay class represent day particular month , New Year 's Day January 1 . The following example use MonthDay.isValidYear method determine February 29 valid year 2010 . The call return false , confirm 2010 leap year . MonthDay date = MonthDay.of ( Month.FEBRUARY , 29 ) ; boolean validLeapYear = date.isValidYear ( 2010 ) ; Year The Year class represent year . The following example use Year.isLeap method determine give year leap year . The call return true , confirm 2012 leap year . boolean validLeapYear = Year.of ( 2012 ) .isLeap ( ) ;