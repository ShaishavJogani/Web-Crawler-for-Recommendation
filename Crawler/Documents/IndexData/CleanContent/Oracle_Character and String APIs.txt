The Character class encapsulate char data type . For J2SE release 5 , many method add Character class support supplementary character . This API fall two category : method convert char code point value method verifiy validity map code point . This section describe subset available method Character class . For complete list available APIs , see Character class specification . Conversion Methods Character Class The follow table include useful conversion method , method facilitate conversion , Character class . The codePointAt codePointBefore method include list text generally find sequence , String , method use extract desired substring . Method ( ) Description toChars ( int codePoint , char [ ] dst , int dstIndex ) toChars ( int codePoint ) Converts specified Unicode code point UTF-16 representation place char array . Sample usage : Character.toChars ( 0x10400 ) toCodePoint ( char high , char low ) toCodePoint ( CharSequence , int ) toCodePoint ( char [ ] , int , int ) Converts specified parameter supplementary code point value . The different method accept different input format . codePointAt ( char [ ] , int index ) codePointAt ( char [ ] , int index , int limit ) codePointAt ( CharSequence seq , int index ) Returns Unicode code point specified index . The third method take CharSequence second method enforce upper limit index . codePointBefore ( char [ ] , int index ) codePointBefore ( char [ ] , int index , int start ) codePointBefore ( CharSequence seq , int index ) codePointBefore ( char [ ] , int , int ) Returns Unicode code point specified index . The third method accept CharSequence method accept char array . The second method enforce low limit index . charCount ( int codePoint ) Returns value 1 character represent single char . Returns value 2 supplementary character require two char . Verification Mapping Methods Character Class Some previous method use char primitive data type , isLowerCase ( char ) isDigit ( char ) , supplant method support supplementary character , isLowerCase ( int ) isDigit ( int ) . The previous method support work supplementary character . To create global application ensure code work seamlessly language , recommend use new form method . Note , performance reason , method accept code point verify validity code point parameter . You use isValidCodePoint method purpose . The following table list verification map method Character class . Method ( ) Description isValidCodePoint ( int codePoint ) Returns true code point within range 0x0000 0x10FFFF , inclusive . isSupplementaryCodePoint ( int codePoint ) Returns true code point within range 0x10000 0x10FFFF , inclusive . isHighSurrogate ( char ) Returns true specify char within high surrogate range \uD800 \uDBFF , inclusive . isLowSurrogate ( char ) Returns true specify char within low surrogate range \uDC00 \uDFFF , inclusive . isSurrogatePair ( char high , char low ) Returns true specify high low surrogate code value represent valid surrogate pair . codePointCount ( CharSequence , int , int ) codePointCount ( char [ ] , int , int ) Returns number Unicode code point CharSequence , char array . isLowerCase ( int ) isUpperCase ( int ) Returns true specify Unicode code point lowercase uppercase character . isDefined ( int ) Returns true specify Unicode code point define Unicode standard . isJavaIdentifierStart ( char ) isJavaIdentifierStart ( int ) Returns true specified character Unicode code point permissible first character Java identifier . isLetter ( int ) isDigit ( int ) isLetterOrDigit ( int ) Returns true specify Unicode code point letter , digit , letter digit . getDirectionality ( int ) Returns Unicode directionality property give Unicode code point . Character.UnicodeBlock.of ( int codePoint ) Returns object represent Unicode block contain give Unicode code point return null code point member defined block . Methods String Classes The String , StringBuffer , StringBuilder class also contructors method work supplementary character . The following table list commonly use method . For complete list available APIs , see javadoc String , StringBuffer , StringBuilder class . Constructor Methods Description String ( int [ ] codePoints , int offset , int count ) Allocates new String instance contain character subarray Unicode code point array . String.codePointAt ( int index ) StringBuffer.codePointAt ( int index ) StringBuilder.codePointAt ( int index ) Returns Unicode code point specified index . String.codePointBefore ( int index ) StringBuffer.codePointBefore ( int index ) StringBuilder.codePointBefore ( int index ) Returns Unicode code point specified index . String.codePointCount ( int beginIndex , int endIndex ) StringBuffer.codePointCount ( int beginIndex , int endIndex ) StringBuilder.codePointCount ( int beginIndex , int endIndex ) Returns number Unicode code point specified range . StringBuffer.appendCodePoint ( int codePoint ) StringBuilder.appendCodePoint ( int codePoint ) Appends string representation specified code point sequence . String.offsetByCodePoints ( int index , int codePointOffset ) StringBuffer.offsetByCodePoints ( int index , int codePointOffset ) StringBuilder.offsetByCodePoints ( int index , int codePointOffset ) Returns index offset give index give number code point .