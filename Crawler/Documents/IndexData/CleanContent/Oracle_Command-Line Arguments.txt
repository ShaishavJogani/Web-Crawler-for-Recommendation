A Java application accept number argument command line . This allow user specify configuration information application launch . The user enter command-line argument invoke application specifies name class run . For example , suppose Java application call Sort sort line file . To sort data file name friends.txt , user would enter : java Sort friends.txt When application launch , runtime system pass command-line argument application 's main method via array Strings . In previous example , command-line argument pass Sort application array contain single String : `` friends.txt '' . Echoing Command-Line Arguments The Echo example display command-line argument line : public class Echo { public static void main ( String [ ] args ) { ( String : args ) { System.out.println ( ) ; } } } The following example show user might run Echo . User input italic . java Echo Drink Hot Java Drink Hot Java Note application display word — Drink , Hot , Java — line . This space character separate command-line argument . To Drink , Hot , Java interpret single argument , user would join enclose within quotation mark . java Echo `` Drink Hot Java '' Drink Hot Java Parsing Numeric Command-Line Arguments If application need support numeric command-line argument , must convert String argument represent number , `` 34 '' , numeric value . Here code snippet convert command-line argument int : int firstArg ; ( args.length > 0 ) { try { firstArg = Integer.parseInt ( args [ 0 ] ) ; } catch ( NumberFormatException e ) { System.err.println ( `` Argument '' + args [ 0 ] + `` must integer . `` ) ; System.exit ( 1 ) ; } } parseInt throw NumberFormatException format args [ 0 ] n't valid . All Number class — Integer , Float , Double , — parseXXX method convert String represent number object type .