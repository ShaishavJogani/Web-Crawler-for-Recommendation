Both JNDI LDAP model define hierarchical namespace name object . Each object namespace may attribute use search object . At high level , two model similar , surprising JNDI map well LDAP . Models You think LDAP entry JNDI DirContext . Each LDAP entry contain name set attribute , well optional set child entry . For example , LDAP entry `` o=JNDITutorial '' may attribute `` objectclass '' `` '' , may child `` ou=Groups '' `` ou=People '' . In JNDI , LDAP entry `` o=JNDITutorial '' represent context name `` o=JNDITutorial '' two subcontexts , name : `` ou=Groups '' `` ou=People '' . An LDAP entry 's attribute represent Attributes interface , whereas individual attribute represent Attribute interface . See next part lesson detail LDAP operation access JNDI . Names As result federation , name supply JNDI 's context method span multiple namespaces . These call composite name . When use JNDI access LDAP service , aware forward slash character ( `` / '' ) string name special meaning JNDI . If LDAP entry 's name contain character , need escape ( use backslash character ( `` \ '' ) ) . For example , LDAP entry name `` cn=O/R '' must present string `` cn=O\\/R '' JNDI context method . For information Names check JNDI Tutorial . The LdapName Rdn class simplify creation manipulation LDAP name . LDAP name use protocol always fully qualified name identify entry start root LDAP namespace ( define server ) . Following example fully qualify LDAP name . cn=Ted Geisel , ou=Marketing , o=Some Corporation , c=gb cn=Vinnie Ryan , ou=People , o=JNDITutorial In JNDI , however , name always relative ; , always name object relative context . For example , name entry `` cn=Vinnie Ryan '' relative context name `` ou=People , o=JNDITutorial '' . Or name entry `` cn=Vinnie Ryan , ou=People '' relative context name `` o=JNDITutorial '' . Or , create initial context point root LDAP server 's namespace name entry `` cn=Vinnie Ryan , ou=People , o=JNDITutorial '' . In JNDI , also use LDAP URLs name LDAP entry . See LDAP URL discussion JNDI Tutorial .