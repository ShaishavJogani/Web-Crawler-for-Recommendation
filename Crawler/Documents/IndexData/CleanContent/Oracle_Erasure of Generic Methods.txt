The Java compiler also erase type parameter generic method argument . Consider follow generic method : // Counts number occurrence elem anArray . // public static < T > int count ( T [ ] anArray , T elem ) { int cnt = 0 ; ( T e : anArray ) ( e.equals ( elem ) ) ++cnt ; return cnt ; } Because T unbounded , Java compiler replaces Object : public static int count ( Object [ ] anArray , Object elem ) { int cnt = 0 ; ( Object e : anArray ) ( e.equals ( elem ) ) ++cnt ; return cnt ; } Suppose following class define : class Shape { /* ... */ } class Circle extend Shape { /* ... */ } class Rectangle extend Shape { /* ... */ } You write generic method draw different shape : public static < T extend Shape > void draw ( T shape ) { /* ... */ } The Java compiler replaces T Shape : public static void draw ( Shape shape ) { /* ... */ }