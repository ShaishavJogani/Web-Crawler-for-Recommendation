You modify transform attribute Graphics2D context move , rotate , scale , shear graphic primitive render . The transform attribute define instance AffineTransform class . An affine transform transformation translate , rotate , scale , shear parallel line remain parallel even transform . The Graphics2D class provide several method change transform attribute . You construct new AffineTransform change Graphics2D transform attribute call transform . AffineTransform define following factory method make easy construct new transforms : getRotateInstance getScaleInstance getShearInstance getTranslateInstance Alternatively use one Graphics2D transformation method modify current transform . When call one convenience method , result transform concatenate current transform apply rendering : rotate — specify angle rotation radian scale — specify scaling factor x direction shear — specify shearing factor x direction translate — specify translation offset x direction You also construct AffineTransform object directly concatenate current transform call transform method . The drawImage method also overload allow specify AffineTransform apply image render . Specifying transform call drawImage affect Graphics2D transform attribute . Example : Transform The following program StrokeandFill , also allow user choose transformation apply select object render . Note : If n't see applet running , need install least Java SE Development Kit ( JDK ) 7 release . Transform.java contain complete code applet . When transform choose Transform menu , transform concatenate onto AffineTransform : public void setTrans ( int transIndex ) { // Sets AffineTransform . switch ( transIndex ) { case 0 : at.setToIdentity ( ) ; at.translate ( w/2 , h/2 ) ; break ; case 1 : at.rotate ( Math.toRadians ( 45 ) ) ; break ; case 2 : at.scale ( 0.5 , 0.5 ) ; break ; case 3 : at.shear ( 0.5 , 0.0 ) ; break ; } } Before display shape correspond menu choice , application first retrieve current transform Graphics2D object : AffineTransform saveXform = g2.getTransform ( ) ; This transform restore Graphics2D render . After retrieve current transform , another AffineTransform , toCenterAt , create cause shape render center panel . The AffineTransform concatenate onto toCenterAt : AffineTransform toCenterAt = new AffineTransform ( ) ; toCenterAt.concatenate ( ) ; toCenterAt.translate ( - ( r.width/2 ) , - ( r.height/2 ) ) ; The toCenterAt transform concatenate onto Graphics2D transform transform method : g2.transform ( toCenterAt ) ; After rendering complete , original transform restore use setTransform method : g2.setTransform ( saveXform ) ; Note : Never use setTransform method concatenate coordinate transform onto exist transform . The setTransform method overwrite Graphics2D object 's current transform , might need reason , position Swing lightweight component window . Use step perform transformation : Use getTransform method get current transform . Use transform , translate , scale , shear , rotate concatenate transform . Perform rendering . Restore original transform use setTransform method .