To define property bean class , supply public getter setter method . For example , following method define int property call mouthWidth : public class FaceBean { private int mMouthWidth = 90 ; public int getMouthWidth ( ) { return mMouthWidth ; } public void setMouthWidth ( int mw ) { mMouthWidth = mw ; } } A builder tool like NetBeans recognize method name show mouthWidth property list property . It also recognize type , int , provide appropriate editor property manipulate design time . This example show property read write . Other combination also possible . A read-only property , example , getter method setter . A write-only property setter method . A special case boolean property allow accessor method define use instead get . For example , accessor boolean property running could follow : public boolean isRunning ( ) { // ... } Various specialization basic property available describe following section . Indexed Properties An indexed property array instead single value . In case , bean class provide method get set entire array . Here example int [ ] property call testGrades : public int [ ] getTestGrades ( ) { return mTestGrades ; } public void setTestGrades ( int [ ] tg ) { mTestGrades = tg ; } For indexed property , bean class also provide method get set specific element array . public int getTestGrades ( int index ) { return mTestGrades [ index ] ; } public void setTestGrades ( int index , int grade ) { mTestGrades [ index ] = grade ; } Bound Properties A bound property notifies listener value change . This two implication : The bean class include addPropertyChangeListener ( ) removePropertyChangeListener ( ) method manage bean 's listener . When bound property change , bean send PropertyChangeEvent registered listener . PropertyChangeEvent PropertyChangeListener live java.beans package . The java.beans package also include class , PropertyChangeSupport , take care work bound property . This handy class keep track property listener include convenience method fire property change event register listener . The following example show could make mouthWidth property bound property use PropertyChangeSupport . The necessary addition bound property show bold . import java.beans . * ; public class FaceBean { private int mMouthWidth = 90 ; private PropertyChangeSupport mPcs = new PropertyChangeSupport ( ) ; public int getMouthWidth ( ) { return mMouthWidth ; } public void setMouthWidth ( int mw ) { int oldMouthWidth = mMouthWidth ; mMouthWidth = mw ; mPcs.firePropertyChange ( `` mouthWidth '' , oldMouthWidth , mw ) ; } public void addPropertyChangeListener ( PropertyChangeListener listener ) { mPcs.addPropertyChangeListener ( listener ) ; } public void removePropertyChangeListener ( PropertyChangeListener listener ) { mPcs.removePropertyChangeListener ( listener ) ; } } Bound property tie directly bean property use builder tool like NetBeans . You could , example , take value property slider component bind mouthWidth property show example . NetBeans allow without write code . Constrained Properties A constrained property special kind bound property . For constrained property , bean keep track set veto listener . When constrained property change , listener consult change . Any one listener chance veto change , case property remain unchanged . The veto listener separate property change listener . Fortunately , java.beans package include VetoableChangeSupport class greatly simplify constrain property . Changes mouthWidth example show bold : import java.beans . * ; public class FaceBean { private int mMouthWidth = 90 ; private PropertyChangeSupport mPcs = new PropertyChangeSupport ( ) ; private VetoableChangeSupport mVcs = new VetoableChangeSupport ( ) ; public int getMouthWidth ( ) { return mMouthWidth ; } public void setMouthWidth ( int mw ) throw PropertyVetoException { int oldMouthWidth = mMouthWidth ; mVcs.fireVetoableChange ( `` mouthWidth '' , oldMouthWidth , mw ) ; mMouthWidth = mw ; mPcs.firePropertyChange ( `` mouthWidth '' , oldMouthWidth , mw ) ; } public void addPropertyChangeListener ( PropertyChangeListener listener ) { mPcs.addPropertyChangeListener ( listener ) ; } public void removePropertyChangeListener ( PropertyChangeListener listener ) { mPcs.removePropertyChangeListener ( listener ) ; } public void addVetoableChangeListener ( VetoableChangeListener listener ) { mVcs.addVetoableChangeListener ( listener ) ; } public void removeVetoableChangeListener ( VetoableChangeListener listener ) { mVcs.removeVetoableChangeListener ( listener ) ; } } Development Support NetBeans The coding pattern create bean property straightforward , sometimes 's hard tell get everything correct . NetBeans support property pattern immediately see result write code . To take advantage feature , look Navigator pane , typically low leave corner NetBeans window . Normally , pane Members View mode , show method field define current class . Click combo box switch Bean Patterns view . You see list property NetBeans infer method definition . NetBeans update list type , make handy way check work . In following example , NetBeans find read-write mouthWidth property read-write indexed testGrades property . In addition , NetBeans recognize FaceBean allow registration PropertyChangeListeners VetoableChangeListeners .