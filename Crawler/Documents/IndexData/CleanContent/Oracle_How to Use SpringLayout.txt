Note : This lesson cover write layout code hand , challenge . If interested learn detail layout management , might prefer use GroupLayout layout manager combine builder tool lay GUI . One builder tool NetBeans IDE . Otherwise , want code hand want use GroupLayout , GridBagLayout recommend next flexible powerful layout manager . If interested use JavaFX create GUI , see Working With Layouts JavaFX . The SpringLayout class add JDK version 1.4 support layout GUI builder . SpringLayout flexible layout manager emulate many feature layout manager . SpringLayout , however , low-level really use GUI builder , rather attempt code spring layout manager hand . This section begin simple example show thing need remember create first spring layout — happen forget ! Later present utility method let lay component couple different type grid . Here picture layout cover : How Spring Layouts Work Spring layout job define directional relationship , constraint , edge component . For example , might define left edge one component fixed distance ( 5 pixel , say ) right edge another component . In SpringLayout , position edge dependent position one edge . If constraint subsequently add create new binding edge , previous binding discard edge remain dependent single edge . Unlike many layout manager , SpringLayout automatically set location component manage . If hand-code GUI use SpringLayout , remember initialize component location constrain west/east north/south location . Depending constraint use , may also need set size container explicitly . Components define edge property , connect Spring instance . Each spring four property — minimum , prefer , maximum value , actual ( current ) value . The spring associate component collect SpringLayout.Constraints object . An instance Spring class hold three property characterize behavior : minimum , prefer , maximum value . Each property may involve define fourth , value , property base series rule . An instance Spring class visualize mechanical spring provide corrective force spring compress stretch away preferred value . This force model linear function distance preferred value , two different constant -- one compressional force one tensional one . Those constant specify minimum maximum value spring spring minimum value produce equal opposite force create maximum value . The difference preferred minimum value , therefore , represent ease spring compress . The difference maximum preferred value indicate ease Spring extend . Based , SpringLayout visualize set object connect set spring edge . Example : SpringDemo This section take typical step specify constraint container use SpringLayout . The first example , SpringDemo1.java , extremely simple application feature label text field content pane control spring layout . Here relevant code : public class SpringDemo1 { public static void main ( String [ ] args ) { ... Container contentPane = frame.getContentPane ( ) ; SpringLayout layout = new SpringLayout ( ) ; contentPane.setLayout ( layout ) ; contentPane.add ( new JLabel ( `` Label : `` ) ) ; contentPane.add ( new JTextField ( `` Text field '' , 15 ) ) ; ... frame.pack ( ) ; frame.setVisible ( true ) ; } } Click Launch button run SpringDemo1 use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Here GUI look like first come : Here look like resize big : Obviously , problem . Not frame come way small , even resize component locate ( 0,0 ) . This happen set spring specify component ' position width container . One small consolation least component preferred size — get free default spring create SpringLayout component . Our next example , SpringDemo2.java , improve situation bit specify location component.Click Launch button run SpringDemo2 use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . In example , specify component appear single row , 5 pixel . The following code specify location label : //Adjust constraint label 's ( 5,5 ) . layout.putConstraint ( SpringLayout.WEST , label , 5 , SpringLayout.WEST , contentPane ) ; layout.putConstraint ( SpringLayout.NORTH , label , 5 , SpringLayout.NORTH , contentPane ) ; The first putConstraint call specifies label 's left ( west ) edge 5 pixel container 's left edge . This translate x coordinate 5 . The second putConstraint call set similar relationship top ( north ) edge label container , result coordinate 5 . Here code set location text field : //Adjust constraint text field 's // ( < label 's right edge > + 5 , 5 ) . layout.putConstraint ( SpringLayout.WEST , textField , 5 , SpringLayout.EAST , label ) ; layout.putConstraint ( SpringLayout.NORTH , textField , 5 , SpringLayout.NORTH , contentPane ) ; The first putConstraint call make text field 's left ( west ) edge 5 pixel away label 's right ( east ) edge . The second putConstraint call like second call first snippet , effect set component 's coordinate 5 . The previous example still problem container come small . But resize window , component right place : To make container initially appear right size , need set spring define right ( east ) bottom ( south ) edge container . No constraint right bottom container edge set default . The size container define set constraint . SpringDemo3.java show . Click Launch button run SpringDemo3 use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Here code set container 's spring : layout.putConstraint ( SpringLayout.EAST , contentPane , 5 , SpringLayout.EAST , textField ) ; layout.putConstraint ( SpringLayout.SOUTH , contentPane , 5 , SpringLayout.SOUTH , textField ) ; The first putConstraint call make container 's right edge 5 pixel right text field 's right edge . The second one make bottom edge 5 pixel beyond bottom edge tall component ( , simplicity 's sake , 've assume text field ) . Finally , window come right size : When make window large see spring layout action , distribute extra space available component . In case spring layout choose give extra space text field . Although seem like spring layout treat label text field differently , spring layout special knowledge Swing AWT component . It rely value component 's minimum , prefer , maximum size property . The next section discuss spring layout use property , cause uneven space distribution . Springs Component Size A SpringLayout object automatically install Springs height width component SpringLayout control . These spring essentially cover component 's getMinimumSize , getPreferredSize , getMaximumSize method . By `` cover '' mean spring initialize appropriate value method , also spring track value . For example , Spring object represent width component special kind spring simply delegate implementation relevant size method component . That way spring stay sync size method characteristic component change . When component 's getMaximumSize getPreferredSize method return value , SpringLayout interpret meaning component stretch . JLabel JButton example component implement way . For reason , label SpringDemo3 example stretch . The getMaximumSize method component , JTextField , return value Integer.MAX_VALUE width height maximum size , indicate component grow size . For reason , SpringDemo3 window enlarge , SpringLayout distribute extra space spring grow — determine size text field . More About SpringLayout API The SpringDemo example use SpringLayout method putConstraint set spring associate component . The putConstraint method convenience method let modify component 's constraint without need use full spring layout API . Here , , code SpringDemo3 set location label : layout.putConstraint ( SpringLayout.WEST , label , 5 , SpringLayout.WEST , contentPane ) ; layout.putConstraint ( SpringLayout.NORTH , label , 5 , SpringLayout.NORTH , contentPane ) ; Here equivalent code use SpringLayout.Constraints Spring class directly : SpringLayout.Constraints contentPaneCons = layout.getConstraints ( contentPane ) ; contentPaneCons.setX ( Spring.sum ( Spring.constant ( 5 ) , contentPaneCons .getConstraint ( SpringLayout.WEST ) ) ) ; contentPaneCons.setY ( Spring.sum ( Spring.constant ( 5 ) , contentPaneCons .getConstraint ( SpringLayout.NORTH ) ) ) ; To see entire demo convert use API , look SpringDemo4.java . That file also include polished ( much long ) version code set container 's size . Click Launch button run SpringDemo4 use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . As precede snippet imply , SpringLayout SpringLayout.Constraints tend use different convention describe spring . The SpringLayout API use edge define constraint . Springs connect edge establish linear relation . Edges define component , use following constant : SpringLayout.NORTH specify top edge component 's bounding rectangle . SpringLayout.SOUTH specify bottom edge component 's bounding rectangle . SpringLayout.EAST specify right edge component 's bounding rectangle . SpringLayout.WEST specify left edge component 's bounding rectangle . SpringLayout.BASELINE specify baseline component . SpringLayout.HORIZONTAL_CENTER specify horizontal center component 's bounding rectangle . SpringLayout.VERTICAL_CENTER specify vertical center component 's bounding rectangle . Edges differ Spring object The SpringLayout.Constraints class know edge , Spring object following property : x width height Each Constraints object maintain follow relationship spring edge represent : west = x north = east = x + width south = + height If confuse , worry . The next section present utility method use accomplish common layout task without know anything spring layout API . Utility Methods Grids Because SpringLayout class create GUI builder , set individual spring layout cumbersome code hand . This section present couple method use install spring need lay group component grid . These method emulate feature GridLayout , GridBagLayout , BoxLayout class . The two method , call makeGrid makeCompactGrid , define SpringUtilities.java . Both method work group component together row column use Spring.max method make width height spring make row column big enough component . In makeCompactGrid method width height spring use component particular column row , respectively . In makeGrid method , contrast , width height spring share every component container , force size . Furthermore , factory method provide Spring create different kind spring , include spring depend spring . Let u see method action . Our first example , implement source file SpringGrid.java , display bunch number text field . The center text field much wide others . Just GridLayout , one large cell force cell equally large . Click Launch button run SpringGrid use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Here code create lay text field SpringGrid : JPanel panel = new JPanel ( new SpringLayout ( ) ) ; ( int = 0 ; < 9 ; i++ ) { JTextField textField = new JTextField ( Integer.toString ( ) ) ; ... //when i==4 , put long text text field ... panel.add ( textField ) ; } ... SpringUtilities.makeGrid ( panel , 3 , 3 , //rows , col 5 , 5 , //initialX , initialY 5 , 5 ) ; //xPad , yPad Now let u look example , source file SpringCompactGrid.java , use makeCompactGrid method instead makeGrid . This example display lot number show spring layout 's ability minimize space require . Click Launch button run SpringCompactGrid use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Here SpringCompactGrid GUI look like : Here code create lay text field SpringCompactGrid : JPanel panel = new JPanel ( new SpringLayout ( ) ) ; int row = 10 ; int col = 10 ; ( int r = 0 ; r < row ; r++ ) { ( int c = 0 ; c < col ; c++ ) { int anInt = ( int ) Math.pow ( r , c ) ; JTextField textField = new JTextField ( Integer.toString ( anInt ) ) ; panel.add ( textField ) ; } } //Lay panel . SpringUtilities.makeCompactGrid ( panel , //parent row , col , 3 , 3 , //initX , initY 3 , 3 ) ; //xPad , yPad One handy us makeCompactGrid method associate label component , label one column component another . The file SpringForm.java use makeCompactGrid way , following figure demonstrate . Click Launch button run SpringForm use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Here code create lay label-text field pair SpringForm : String [ ] label = { `` Name : `` , `` Fax : `` , `` Email : `` , `` Address : `` } ; int numPairs = labels.length ; //Create populate panel . JPanel p = new JPanel ( new SpringLayout ( ) ) ; ( int = 0 ; < numPairs ; i++ ) { JLabel l = new JLabel ( labels [ ] , JLabel.TRAILING ) ; p.add ( l ) ; JTextField textField = new JTextField ( 10 ) ; l.setLabelFor ( textField ) ; p.add ( textField ) ; } //Lay panel . SpringUtilities.makeCompactGrid ( p , numPairs , 2 , //rows , col 6 , 6 , //initX , initY 6 , 6 ) ; //xPad , yPad Because use real layout manager instead absolute positioning , layout manager respond dynamically change component involve . For example , name label localize , spring layout produce configuration give first column less room , need . And following figure show , window resize , flexibly sized component — text field — take excess space , label stick need . Our last example makeCompactGrid method , SpringBox.java , show button configure lay single row . Click Launch button run SpringBox use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Note behavior almost identical BoxLayout case single row . Not component lay BoxLayout would arrange minimum , prefer , maximum size container use SpringLayout return result BoxLayout would . Here call makeCompactGrid produce layout : //Lay button one row many column //as necessary , 6 pixel pad around . SpringUtilities.makeCompactGrid ( contentPane , 1 , contentPane.getComponentCount ( ) , 6 , 6 , 6 , 6 ) ; Let u look happen resize window . This odd special case worth take note may run accident first layout . Nothing move ! That none component ( button ) spacing define stretchable . In case spring layout calculate maximum size parent container equal preferred size , mean parent container stretchable . It would perhaps less confusing AWT refuse resize window stretchable , . The layout manager anything sensible none component take required space . Instead crash , nothing , leave component . The SpringLayout API The API use SpringLayout spread across three class : SpringLayout SpringLayout.Constraints Spring SpringLayout Constructor Method Purpose SpringLayout ( ) Create SpringLayout instance . SpringLayout.Constraints getConstraints ( Component ) Get constraint ( set spring ) associate specified component . Spring getConstraint ( String , Component ) Get spring edge component . The first argument specify edge must one follow SpringLayout constant : NORTH , SOUTH , EAST , WEST . void putConstraint ( String , Component , int , String , Component ) void putConstraint ( String , Component , Spring , String , Component ) Convenience method define relationship edge two component . The first two argument specify first component affected edge . The last two argument specify second component affected edge . The third argument specify spring determine distance two . When third argument integer , constant spring create provide fixed distance component edge . SpringLayout.Constraints Constructor Method Purpose SpringLayout.Constraints ( ) SpringLayout.Constraints ( Spring , Spring ) SpringLayout.Constraints ( Spring , Spring , Spring , Spring ) Create SpringLayout.Constraints instance . The first two argument , present , specify X Y spring , respectively . The second two argument , present , specify height width spring , respectively . Omitting argument cause corresponding spring null , SpringLayout generally replace suitable default . Spring getConstraint ( String ) Spring getHeight ( ) Spring getWidth ( ) Spring getX ( ) Spring getY ( ) void setConstraint ( String , Spring ) void setHeight ( Spring ) void setWidth ( Spring ) void setX ( Spring ) void setY ( Spring ) Get set specified spring . The string argument getConstraint setConstraint method specify edge name , must one SpringLayout constant NORTH , SOUTH , EAST , WEST . Spring Method Purpose static Spring constant ( int ) static Spring constant ( int , int , int ) Create spring track component 's size . The three-argument version create spring minimum , prefer , maximum value set specify value , order . The one-argument version create spring minimum , prefer , maximum value set specify integer . Despite name , spring return constant mutable . To make layout work , SpringLayout might force adjust `` constant '' spring . For reason , avoid reuse constant spring unless ( 1 ) truly want spring always precisely alike ( 2 ) spring provide flexibility layout . static Spring sum ( Spring , Spring ) static Spring max ( Spring , Spring ) static Spring minus ( Spring ) Create spring result mathematical manipulation . The sum method add two spring . The max method return spring whose value always great equal value two argument . The minus method return spring run opposite direction argument . The minus method use create argument sum method , allow get difference two spring . int getMinimumValue ( ) int getPreferredValue ( ) int getMaximumValue ( ) Get correspond value spring . For SpringLayout-created spring automatically track component , method result call component 's corresponding getXxxSize method . int getValue ( ) setValue ( int ) Get set spring 's current value . Examples Use SpringLayout The follow table list example use spring layout . Example Where Described Notes SpringDemo3 This page Uses SpringLayout create row evenly space , natural-size component . SpringDemo4 This page Reimplements SpringDemo3 use SpringLayout.Constraints Spring directly . SpringGrid This page Uses SpringLayout makeGrid utility method create layout component size . SpringCompactGrid This page Uses SpringLayout makeCompactGrid utility method create layout component row height , component column width . SpringForm This page Uses SpringLayout makeCompactGrid align label-text field pair . SpringBox This page Uses SpringLayout makeCompactGrid demonstrate lay single row component , happen spring grow . SpinnerDemo How Use Spinners Uses SpringLayout makeCompactGrid lay row label-spinner pair . TextInputDemo How Use Formatted Text Fields Uses SpringLayout makeCompactGrid lay row labeled component . The component mix text field , format text field , spinner .