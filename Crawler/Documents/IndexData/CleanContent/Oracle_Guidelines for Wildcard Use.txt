One confusing aspect learn program generic determine use upper bound wildcard use low bound wildcard . This page provide guideline follow design code . For purpose discussion , helpful think variable provide one two function : An `` In '' Variable An `` '' variable serve data code . Imagine copy method two argument : copy ( src , dest ) . The src argument provide data copy , `` '' parameter . An `` Out '' Variable An `` '' variable hold data use elsewhere . In copy example , copy ( src , dest ) , argument accepts data , `` '' parameter . Of course , variable use `` '' `` '' purpose â€” scenario also address guideline . You use `` '' `` '' principle decide whether use wildcard type wildcard appropriate . The following list provide guideline follow : Wildcard Guidelines : An `` '' variable define upper bound wildcard , use extends keyword . An `` '' variable define low bounded wildcard , use super keyword . In case `` '' variable access use method define Object class , use unbounded wildcard . In case code need access variable `` '' `` '' variable , use wildcard . These guideline apply method 's return type . Using wildcard return type avoid force programmer use code deal wildcards . A list define List < ? extends ... > informally think read-only , strict guarantee . Suppose following two class : class NaturalNumber { private int ; public NaturalNumber ( int ) { this.i = ; } // ... } class EvenNumber extend NaturalNumber { public EvenNumber ( int ) { super ( ) ; } // ... } Consider following code : List < EvenNumber > le = new ArrayList < > ( ) ; List < ? extends NaturalNumber > ln = le ; ln.add ( new NaturalNumber ( 35 ) ) ; // compile-time error Because List < EvenNumber > subtype List < ? extends NaturalNumber > , assign le ln . But use ln add natural number list even number . The following operation list possible : You add null . You invoke clear . You get iterator invoke remove . You capture wildcard write element 've read list . You see list define List < ? extends NaturalNumber > read-only strict sense word , might think way store new element change exist element list .