Once 've create object , probably want use something . You may need use value one field , change one field , call one method perform action . Referencing Object 's Fields Object field access name . You must use name unambiguous . You may use simple name field within class . For example , add statement within Rectangle class print width height : System.out.println ( `` Width height : `` + width + `` , `` + height ) ; In case , width height simple name . Code outside object 's class must use object reference expression , follow dot ( . ) operator , follow simple field name , : objectReference.fieldName For example , code CreateObjectDemo class outside code Rectangle class . So refer origin , width , height field within Rectangle object name rectOne , CreateObjectDemo class must use name rectOne.origin , rectOne.width , rectOne.height , respectively . The program use two name display width height rectOne : System.out.println ( `` Width rectOne : `` + rectOne.width ) ; System.out.println ( `` Height rectOne : `` + rectOne.height ) ; Attempting use simple name width height code CreateObjectDemo class n't make sense — field exist within object — result compiler error . Later , program use similar code display information rectTwo . Objects type copy instance field . Thus , Rectangle object field name origin , width , height . When access instance field object reference , reference particular object 's field . The two object rectOne rectTwo CreateObjectDemo program different origin , width , height field . To access field , use name reference object , previous example , use expression return object reference . Recall new operator return reference object . So could use value return new access new object 's field : int height = new Rectangle ( ) .height ; This statement create new Rectangle object immediately get height . In essence , statement calculate default height Rectangle . Note statement execute , program longer reference create Rectangle , program never store reference anywhere . The object unreferenced , resource free recycle Java Virtual Machine . Calling Object 's Methods You also use object reference invoke object 's method . You append method 's simple name object reference , intervene dot operator ( . ) . Also , provide , within enclose parenthesis , argument method . If method require argument , use empty parenthesis . objectReference.methodName ( argumentList ) ; : objectReference.methodName ( ) ; The Rectangle class two method : getArea ( ) compute rectangle 's area move ( ) change rectangle 's origin . Here 's CreateObjectDemo code invoke two method : System.out.println ( `` Area rectOne : `` + rectOne.getArea ( ) ) ; ... rectTwo.move ( 40 , 72 ) ; The first statement invoke rectOne 's getArea ( ) method display result . The second line move rectTwo move ( ) method assign new value object 's origin.x origin.y . As instance field , objectReference must reference object . You use variable name , also use expression return object reference . The new operator return object reference , use value return new invoke new object 's method : new Rectangle ( 100 , 50 ) .getArea ( ) The expression new Rectangle ( 100 , 50 ) return object reference refer Rectangle object . As show , use dot notation invoke new Rectangle 's getArea ( ) method compute area new rectangle . Some method , getArea ( ) , return value . For method return value , use method invocation expression . You assign return value variable , use make decision , control loop . This code assign value return getArea ( ) variable areaOfRectangle : int areaOfRectangle = new Rectangle ( 100 , 50 ) .getArea ( ) ; Remember , invoke method particular object send message object . In case , object getArea ( ) invoke rectangle return constructor . The Garbage Collector Some object-oriented language require keep track object create explicitly destroy longer need . Managing memory explicitly tedious error-prone . The Java platform allow create many object want ( limited , course , system handle ) , n't worry destroy . The Java runtime environment deletes object determine longer use . This process call garbage collection . An object eligible garbage collection reference object . References hold variable usually drop variable go scope . Or , explicitly drop object reference set variable special value null . Remember program multiple reference object ; reference object must drop object eligible garbage collection . The Java runtime environment garbage collector periodically free memory use object longer reference . The garbage collector job automatically determine time right .