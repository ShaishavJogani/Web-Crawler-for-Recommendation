Connection pooling configure maintain per Java runtime . Connections share across different runtimes . To use connection pooling , configuration require . Configuration necessary want customize pooling , control size pool type connection pool . You configure connection pooling use number system property program startup time . Note system property , environment property affect connection pool request . Here example command line set maximum pool size 20 , preferred pool size 10 , idle timeout minute pooled connection . # java -Dcom.sun.jndi.ldap.connect.pool.maxsize=20 \ -Dcom.sun.jndi.ldap.connect.pool.prefsize=10 \ -Dcom.sun.jndi.ldap.connect.pool.timeout=60000 \ UsePool The follow table list system property configure connection pooling . They describe detail rest section . System Property Name Description Default com.sun.jndi.ldap.connect.pool.authentication A list space-separated authentication type connection may pool . Valid type `` none '' , `` simple '' , `` DIGEST-MD5 '' . `` none simple '' com.sun.jndi.ldap.connect.pool.debug A string indicate level debug output produce . Valid value `` fine '' ( trace connection creation removal ) `` '' ( debug information ) . com.sun.jndi.ldap.connect.pool.initsize The string representation integer represent number connection per connection identity create initially create connection identity . 1 com.sun.jndi.ldap.connect.pool.maxsize The string representation integer represent maximum number connection per connection identity maintain concurrently . maximum size com.sun.jndi.ldap.connect.pool.prefsize The string representation integer represent preferred number connection per connection identity maintain concurrently . preferred size com.sun.jndi.ldap.connect.pool.protocol A list space-separated protocol type connection may pool . Valid type `` plain '' `` ssl '' . `` plain '' com.sun.jndi.ldap.connect.pool.timeout The string representation integer represent number millisecond idle connection may remain pool without close remove pool . timeout What Gets Pooled When request Context instance use connection pooling use `` com.sun.jndi.ldap.connect.pool '' environment property , connection use might might pool . The default rule plain ( non-SSL ) connection use simple authentication allow pool . You change default include SSL connection DIGEST-MD5 authentication type use system property . To allow plain SSL connection pool , set `` com.sun.jndi.ldap.connect.pool.protocol '' system property string `` plain ssl '' . To allow connection anonymous ( none ) , simple DIGEST-MD5 authentication type pool , set com.sun.jndi.ldap.connect.pool.authentication system property string `` none simple DIGEST-MD5 '' . There couple environment property automatically disqualify Context instance use pooled connection . A Context instance use pooled connection `` java.naming.ldap.factory.socket '' property set custom socket factory class , `` java.naming.security.sasl.callback '' property set custom callback handler class , `` com.sun.jndi.ldap.trace.ber '' property set enable protocol tracing . How Connections Pooled When Context instance request use pooled connection , LDAP provider need determine whether request satisfy exist pooled connection . It assign connection identity pool connection check whether incoming request connection identity one pooled connection . A connection identity set parameter require create possibly authenticate LDAP connection . Its composition depend authentication type request , show following table . Authentication Type Connection Identity Contents none connection control host name , port number specify `` java.naming.provider.url '' property , referral , URL supply initial context content following property : java.naming.security.protocol java.naming.ldap.version simple information list none content follow property : java.naming.security.principal java.naming.security.credentials DIGEST-MD5 information list simple content follow property : java.naming.security.sasl.authorizationId java.naming.security.sasl.realm javax.security.sasl.qop javax.security.sasl.strength javax.security.sasl.server.authentication javax.security.sasl.maxbuffer javax.security.sasl.policy.noplaintext javax.security.sasl.policy.noactive javax.security.sasl.policy.nodictionary javax.security.sasl.policy.noanonymous javax.security.sasl.policy.forward javax.security.sasl.policy.credentials Pool Sizes The LDAP provider maintain pool connection ; pool hold connection ( either in-use idle ) connection identity . There three size affect management pool . These size global affect pool . The initial pool size number connection per connection identity LDAP service provider create first create pool ( correspond application first request pooled connection connection identity ) . Authentication connection pool perform demand , connection get use . By default , initial pool size 1 change use system property `` com.sun.jndi.ldap.connect.pool.initsize '' . It typically use application start-up time prime pool certain number connection server . The maximum pool size maximum number connection per connection identity maintain concurrently LDAP service provider . Both in-use idle connection contribute number . When pool size reach number , new connection corresponding connection identity may create connection pool remove ( i.e. , physical connection close ) . When pool size reach maximum connection pool use , application 's request connection pool block connection pool either become idle remove . A maximum pool size 0 mean maximum size : A request pooled connection use exist pool idle connection newly create pooled connection . The preferred pool size preferred number connection per connection identity LDAP service provider maintain . Both in-use idle connection contribute number . When application request use pooled connection pool size less preferred size , LDAP provider create use new pooled connection regardless whether idle connection available . When application finish pooled connection ( invoke Context.close ( ) context share connection ) pool size great preferred size , LDAP provider close remove pooled connection pool . A preferred pool size 0 mean preferred size : A request pooled connection result newly create connection idle one available . Note maximum pool size override initial preferred pool size . For example , set preferred pool size great maximum pool size effectively set maximum pool size . Idle Connections When application finish pooled connection ( invoke Context.close ( ) context share connection ) , underlie pooled connection mark idle , wait reuse . By default , idle connection remain pool indefinitely garbage-collected . If `` com.sun.jndi.ldap.connect.pool.timeout '' system property set , LDAP provider automatically close remove pooled connection idle specified period .