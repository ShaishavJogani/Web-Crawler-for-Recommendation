Most time , use single character value , use primitive char type . For example : char ch = 'a ' ; // Unicode uppercase Greek omega character char uniChar = '\u03A9 ' ; // array char char [ ] charArray = { 'a ' , 'b ' , 'c ' , 'd ' , 'e ' } ; There time , however , need use char object—for example , method argument object expect . The Java programming language provide wrapper class `` wrap '' char Character object purpose . An object type Character contain single field , whose type char . This Character class also offer number useful class ( i.e. , static ) method manipulate character . You create Character object Character constructor : Character ch = new Character ( 'a ' ) ; The Java compiler also create Character object circumstance . For example , pass primitive char method expect object , compiler automatically convert char Character . This feature call autoboxing—or unboxing , conversion go way . For information autoboxing unboxing , see Autoboxing Unboxing . Note : The Character class immutable , create , Character object change . The following table list useful method Character class , exhaustive . For complete listing method class ( 50 ) , refer java.lang.Character API specification . Useful Methods Character Class Method Description boolean isLetter ( char ch ) boolean isDigit ( char ch ) Determines whether specify char value letter digit , respectively . boolean isWhitespace ( char ch ) Determines whether specify char value white space . boolean isUpperCase ( char ch ) boolean isLowerCase ( char ch ) Determines whether specify char value uppercase lowercase , respectively . char toUpperCase ( char ch ) char toLowerCase ( char ch ) Returns uppercase lowercase form specify char value . toString ( char ch ) Returns String object represent specify character value — , one-character string . Escape Sequences A character precede backslash ( \ ) escape sequence special meaning compiler . The follow table show Java escape sequence : Escape Sequences Escape Sequence Description \t Insert tab text point . \b Insert backspace text point . \n Insert newline text point . \r Insert carriage return text point . \f Insert formfeed text point . \' Insert single quote character text point . \ '' Insert double quote character text point . \\ Insert backslash character text point . When escape sequence encounter print statement , compiler interpret accordingly . For example , want put quote within quote must use escape sequence , \ '' , interior quote . To print sentence She say `` Hello ! '' . would write System.out.println ( `` She say \ '' Hello ! \ '' . `` ) ;