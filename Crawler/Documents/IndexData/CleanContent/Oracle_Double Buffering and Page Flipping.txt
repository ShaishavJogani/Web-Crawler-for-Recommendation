Suppose draw entire picture screen , pixel pixel line line . If draw thing directly screen ( use , say , Graphics.drawLine ) , would probably notice much disappointment take bit time . You probably even notice visible artifact picture draw . Rather watch thing draw fashion pace , programmer use technique call double-buffering . The traditional notion double-buffering Java application fairly straightforward : create offscreen image , draw image use image 's graphic object , , one step , call drawImage use target window 's graphic object offscreen image . You may already notice Swing use technique many component , usually enable default , use setDoubleBuffered method . The screen surface commonly refer primary surface , offscreen image use double-buffering commonly refer back buffer . The act copy content one surface another frequently refer block line transfer , blitting ( blt typically pronounced `` blit '' n't confuse BLT sandwich ) . The primary surface usually manipulate graphic object showing component ; full-screen mode , operation use graphic full-screen window direct manipulation screen memory . For reason , take advantage capability full-screen exclusive mode may otherwise unavailable due overhead windowing system . One technique available full-screen exclusive mode form double-buffering call page-flipping . Page Flipping Many graphic card notion video pointer , simply address video memory . This pointer tell graphic card look content video display next refresh cycle . In graphic card operating system , pointer even manipulate programmatically . Suppose create back buffer ( video memory ) exact width , height , bit depth screen , draw buffer way would use double-buffering . Now imagine would happen , instead blitting image screen double-buffering , simply change video pointer back buffer . During next refresh , graphic card would use image display . This switch call page-flipping , performance gain blt-based double-buffering single pointer need move memory oppose copy entire content one buffer another . When page flip occur , pointer old back buffer point primary surface pointer old primary surface point back buffer memory . This set automatically next draw operation . Sometimes advantageous set multiple back buffer flip chain . This particularly useful amount time spend drawing great monitor 's refresh rate . A flip chain simply two back buffer ( sometimes call intermediary buffer ) plus primary surface ( sometimes call triple-buffering , quadruple-buffering , etc. ) . In flip chain , next available back buffer become primary surface , etc. , way rearmost back buffer use draw . Benefits Double-Buffering Page-Flipping If performance metric simply speed double-buffering page-flipping occurs versus direct rendering , may disappoint . You may find number direct rendering far exceed double-buffering number far exceed page-flipping . Each technique use improve perceived performance , much important graphical application numerical performance . Double-buffering use primarily eliminate visible draw make application look amateurish , sluggish , appear flicker . Page-flipping use primarily also eliminate tearing , splitting effect occur draw screen happen fast monitor 's refresh rate . Smoother drawing mean good perceive performance much good user experience .