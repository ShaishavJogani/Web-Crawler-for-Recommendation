The HighScorePermission class define permission ExampleGame need update user 's high score . All permission class subclass either java.security.Permission java.security.BasicPermission . The basic difference two java.security.Permission defines complex permission require name action . For example , java.io.FilePermission extend java.security.Permission , require name ( filename ) , action allow file ( read/write/delete ) . In contrast , java.security.BasicPermission defines simpler permission require name . For example , java.lang.RuntimePermission extends java.security.BasicPermission simply need name ( like `` exitVM '' ) , allow program exit Java Virtual Machine . Our HighScorePermission simple permission , hence extend java.security.BasicPermission . Often , method implementation BasicPermission class need override subclass . That case HighScorePermission , need implement constructor , invoke superclass constructor , show following : package com.scoredev.scores ; import java.security . * ; public final class HighScorePermission extend BasicPermission { public HighScorePermission ( String name ) { super ( name ) ; } // note action ignore use , // constructor still need public HighScorePermission ( String name , String action ) { super ( name , action ) ; } }