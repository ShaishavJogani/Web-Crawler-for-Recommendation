The sort control use client want server send sort search result . The server-side sorting useful situation client need sort result accord criterion equip perform sort process . The sort control specify RFC 2891 . The class provide functionality require support sort control . javax.naming.ldap.SortControl javax.naming.ldap.SortKey javax.naming.ldap.SortResponseControl The SortKey odered list key base upon server sort result . How use Sort Control ? The example illustrate client-server interaction client perform search request server-side sorting base attribute `` cn '' . Client send search request ask // Activate sort String sortKey = `` cn '' ; ctx.setRequestControls ( new Control [ ] { new SortControl ( sortKey , Control.CRITICAL ) } ) ; // Perform search NamingEnumeration result = ctx.search ( `` '' , `` ( objectclass=* ) '' , new SearchControls ( ) ) ; The server respond entry sort base `` cn '' attribute corresponding matching rule . // Iterate sort search result ( result ! = null & & results.hasMore ( ) ) { // Display entry SearchResult entry = ( SearchResult ) results.next ( ) ; System.out.println ( entry.getName ( ) ) ; // Handle entry 's response control ( ) ( entry instanceof HasControls ) { // ( ( HasControls ) entry ) .getControls ( ) ; } } // Examine sort control response Control [ ] control = ctx.getResponseControls ( ) ; ( control ! = null ) { ( int = 0 ; < controls.length ; i++ ) { ( control [ ] instanceof SortResponseControl ) { SortResponseControl src = ( SortResponseControl ) control [ ] ; ( ! src.isSorted ( ) ) { throw src.getException ( ) ; } } else { // Handle response control ( ) } } } The complete JNDI example find . Note : The sort control support Oracle Directory Server Windows Active Directory server .