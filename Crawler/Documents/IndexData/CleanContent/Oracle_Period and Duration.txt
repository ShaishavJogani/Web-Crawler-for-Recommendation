When write code specify amount time , use class method best meet need : Duration class , Period class , ChronoUnit.between method . A Duration measure amount time use time-based value ( second , nanosecond ) . A Period use date-based value ( year , month , day ) . Note : A Duration one day exactly 24 hour long . A Period one day , add ZonedDateTime , may vary accord time zone . For example , occur first last day daylight save time . Duration A Duration suitable situation measure machine-based time , code use Instant object . A Duration object measure second nanosecond use date-based construct year , month , day , though class provide method convert day , hour , minute . A Duration negative value , create end point occur start point . The following code calculates , nanosecond , duration two instant : Instant t1 , t2 ; ... long ns = Duration.between ( t1 , t2 ) .toNanos ( ) ; The following code add 10 second Instant : Instant start ; ... Duration gap = Duration.ofSeconds ( 10 ) ; Instant later = start.plus ( gap ) ; A Duration connect timeline , track time zone daylight save time . Adding Duration equivalent 1 day ZonedDateTime result exactly 24 hour add , regardless daylight save time time difference might result . ChronoUnit The ChronoUnit enum , discuss The Temporal Package , define unit use measure time . The ChronoUnit.between method useful want measure amount time single unit time , day second . The method work temporal-based object , return amount single unit . The following code calculate gap , millisecond , two time-stamps : import java.time.Instant ; import java.time.temporal.Temporal ; import java.time.temporal.ChronoUnit ; Instant previous , current , gap ; ... current = Instant.now ( ) ; ( previous ! = null ) { gap = ChronoUnit.MILLIS.between ( previous , current ) ; } ... Period To define amount time date-based value ( year , month , day ) , use Period class . The Period class provide various get method , getMonths , getDays , getYears , extract amount time period . The total period time represent three unit together : month , day , year . To present amount time measure single unit time , day , use ChronoUnit.between method . The following code report old , assume bear January 1 , 1960 . The Period class use determine time year , month , day . The period , total day , determine use ChronoUnit.between method display parenthesis : LocalDate today = LocalDate.now ( ) ; LocalDate birthday = LocalDate.of ( 1960 , Month.JANUARY , 1 ) ; Period p = Period.between ( birthday , today ) ; long p2 = ChronoUnit.DAYS.between ( birthday , today ) ; System.out.println ( `` You `` + p.getYears ( ) + `` year , `` + p.getMonths ( ) + `` month , `` + p.getDays ( ) + `` day old . ( `` + p2 + `` day total ) '' ) ; The code produce output similar following : You 53 year , 4 month , 29 day old . ( 19508 day total ) To calculate long next birthday , could use following code Birthday example . The Period class use determine value month day . The ChronoUnit.between method return value total day display parenthesis . LocalDate birthday = LocalDate.of ( 1960 , Month.JANUARY , 1 ) ; LocalDate nextBDay = birthday.withYear ( today.getYear ( ) ) ; //If birthday occur year already , add 1 year . ( nextBDay.isBefore ( today ) || nextBDay.isEqual ( today ) ) { nextBDay = nextBDay.plusYears ( 1 ) ; } Period p = Period.between ( today , nextBDay ) ; long p2 = ChronoUnit.DAYS.between ( today , nextBDay ) ; System.out.println ( `` There `` + p.getMonths ( ) + `` month , `` + p.getDays ( ) + `` day next birthday . ( `` + p2 + `` total ) '' ) ; The code produce output similar following : There 7 month , 2 day next birthday . ( 216 total ) These calculation account time zone difference . If , example , bear Australia , currently live Bangalore , slightly affect calculation exact age . In situation , use Period conjunction ZonedDateTime class . When add Period ZonedDateTime , time difference observe .