The simple form search require specify set attribute entry must name target context perform search . The following code create attribute set matchAttrs , two attribute `` sn '' `` mail '' . It specify qualify entry must surname ( `` sn '' ) attribute value `` Geisel '' `` mail '' attribute value . It invoke DirContext.search ( ) search context `` ou=People '' entry attribute specify matchAttrs . // Specify attribute match // Ask object surname ( `` sn '' ) attribute // value `` Geisel '' `` mail '' attribute // ignore attribute name case Attributes matchAttrs = new BasicAttributes ( true ) ; matchAttrs.put ( new BasicAttribute ( `` sn '' , `` Geisel '' ) ) ; matchAttrs.put ( new BasicAttribute ( `` mail '' ) ) ; // Search object match attribute NamingEnumeration answer = ctx.search ( `` ou=People '' , matchAttrs ) ; You print result follow . ( answer.hasMore ( ) ) { SearchResult sr = ( SearchResult ) answer.next ( ) ; System.out.println ( `` > > > '' + sr.getName ( ) ) ; printAttrs ( sr.getAttributes ( ) ) ; } printAttrs ( ) similar code getAttributes ( ) example print attribute set . Running example produce following result . # java SearchRetAll > > > cn=Ted Geisel attribute : sn value : Geisel attribute : objectclass value : top value : person value : organizationalPerson value : inetOrgPerson attribute : jpegphoto value : [ B @ 1dacd78b attribute : mail value : Ted.Geisel @ JNDITutorial.example.com attribute : facsimiletelephonenumber value : +1 408 555 2329 attribute : cn value : Ted Geisel attribute : telephonenumber value : +1 408 555 5252 Returning Selected Attributes The previous example return attribute associate entry satisfy specified query . You select attribute return pass search ( ) array attribute identifier want include result . After create matchAttrs show previously , also need create array attribute identifier , show next . // Specify id attribute return String [ ] attrIDs = { `` sn '' , `` telephonenumber '' , `` golfhandicap '' , `` mail '' } ; // Search object match attribute NamingEnumeration answer = ctx.search ( `` ou=People '' , matchAttrs , attrIDs ) ; This example return attribute `` sn '' , `` telephonenumber '' , `` golfhandicap '' , `` mail '' entry attribute `` mail '' `` sn '' attribute value `` Geisel '' . This example produce following result . ( The entry `` golfhandicap '' attribute , return . ) # java Search > > > cn=Ted Geisel attribute : sn value : Geisel attribute : mail value : Ted.Geisel @ JNDITutorial.example.com attribute : telephonenumber value : +1 408 555 5252