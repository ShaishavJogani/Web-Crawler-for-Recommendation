The JMX API define mechanism enable MBeans generate notification , example , signal state change , detected event , problem . To generate notification , MBean must implement interface NotificationEmitter extend NotificationBroadcasterSupport . To send notification , need construct instance class javax.management.Notification subclass ( AttributeChangedNotification ) , pass instance NotificationBroadcasterSupport.sendNotification . Every notification source . The source object name MBean generate notification . Every notification sequence number . This number use order notification come source order matter risk notification handle wrong order . The sequence number zero , preferably number increment notification give MBean . The Hello MBean implementation Standard MBeans actually implement notification mechanism . However , code omit lesson sake simplicity . The complete code Hello follow : package com.example ; import javax.management . * ; public class Hello extend NotificationBroadcasterSupport implement HelloMBean { public void sayHello ( ) { System.out.println ( `` hello , world '' ) ; } public int add ( int x , int ) { return x + ; } public String getName ( ) { return this.name ; } public int getCacheSize ( ) { return this.cacheSize ; } public synchronize void setCacheSize ( int size ) { int oldSize = this.cacheSize ; this.cacheSize = size ; System.out.println ( `` Cache size `` + this.cacheSize ) ; Notification n = new AttributeChangeNotification ( , sequenceNumber++ , System.currentTimeMillis ( ) , `` CacheSize change '' , `` CacheSize '' , `` int '' , oldSize , this.cacheSize ) ; sendNotification ( n ) ; } @ Override public MBeanNotificationInfo [ ] getNotificationInfo ( ) { String [ ] type = new String [ ] { AttributeChangeNotification.ATTRIBUTE_CHANGE } ; String name = AttributeChangeNotification.class.getName ( ) ; String description = `` An attribute MBean change '' ; MBeanNotificationInfo info = new MBeanNotificationInfo ( type , name , description ) ; return new MBeanNotificationInfo [ ] { info } ; } private final String name = `` Reginald '' ; private int cacheSize = DEFAULT_CACHE_SIZE ; private static final int DEFAULT_CACHE_SIZE = 200 ; private long sequenceNumber = 1 ; } This Hello MBean implementation extend NotificationBroadcasterSupport class . NotificationBroadcasterSupport implement NotificationEmitter interface . The operation attribute set way standard MBean example , exception CacheSize attribute 's setter method define value oldSize . This value record CacheSize attribute 's value prior set operation . The notification construct instance , n , JMX class AttributeChangeNotification , extend javax.management.Notification . The notification construct within definition setCacheSize ( ) method following information . This information pass AttributeChangeNotification parameter . The object name source notification , namely Hello MBean , represent A sequence number , namely sequenceNumber , set 1 increase incrementally A timestamp The content notification message The name attribute change , case , CacheSize The type attribute change The old attribute value , case , oldSize The new attribute value , case , this.cacheSize The notification n pass NotificationBroadcasterSupport.sendNotification ( ) method . Finally , MBeanNotificationInfo instance define describe characteristic different notification instance generate MBean give type notification . In case type notification send AttributeChangeNotification notification . Running MBean Notification Example Once , use JConsole interact Hello MBean , time send receive notification . This example require version 6 Java SE platform . If already , save jmx_examples.zip work_dir directory . Unzip bundle sample class use following command terminal window . unzip jmx_examples.zip Compile example Java class within work_dir directory . javac com/example/*.java Start Main application . java com.example.Main A confirmation Main wait something happen generate . Start JConsole different terminal window machine . jconsole The New Connection dialog box display , present list run JMX agent connect . In New Connection dialog box , select com.example.Main list click Connect . A summary platform 's current activity display . Click MBeans tab . This panel show MBeans currently register MBean server . In left frame , expand com.example node MBean tree . You see example MBean Hello create register Hello . If click Hello , see Notifications node MBean tree . Expand Notifications node Hello MBean MBean tree . Note panel blank . Click Subscribe button . The current number notification receive ( 0 ) display Notifications node label . Expand Attributes node Hello MBean MBean tree , change value CacheSize attribute 150 . In terminal window start Main , confirmation attribute change display . Note number received notification display Notifications node change 1 . Expand Notifications node Hello MBean MBean tree . The detail notification display . To close JConsole , select Connection - > Exit .