The Java JDK collection implementation quite powerful good , unlikely need write . The usage different collection implementation different . If exist collection implementation meet need , write version implementation . Your version implementation need implement samejava.util.Collectioninterface , switch use implementation code use collection need change . Use Collection interface need keep related ( usually type ) object together collection : Search particular elementList elementsMaintain and/or change order element use collection basic operation ( Add , Remove , Update , .. ) Access element index number The advantage use theCollectioninterface : Gives generic usage , talk , easy switch implementationIt make easy convert one type collection another . TheCollectioninterface define following basic operation : boolean add ( E ) ; Using Element type Eboolean addAll ( Collection c ) ; boolean remove ( Objecto ) ; boolean removeAll ( Collection c ) ; boolean retainAll ( Collection c ) ; Returntrueif collection change due operation . Note inaddAll ( ) add type collection . This beauty use Collection interface . You aLinkedListand call theaddAll ( list ) method , pass list . You pass aVector , anArrayList , aHashSet , aTreeSet , aYourImpOfCollection , ... All different type collection bemagicallyconverted aLinkedList . Let 's close look thismagic . The conversion easy theCollectioninterface define standard way loop element . The following code possible implementation ofaddAll ( ) method theLinkedList . The code iterate pass collection add element link list . You , since already define . What might need code loop aCustomercollection : Notice two thing : The code work type collections.We know type object inside collection , call method . To : Add exercise like one inVariables AggregateJava ProgrammingCollectionArrayList