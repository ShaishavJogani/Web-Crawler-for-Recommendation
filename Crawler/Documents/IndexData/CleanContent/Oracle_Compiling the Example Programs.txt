In real-world scenario service compute engine deploy , developer would likely create Java Archive ( JAR ) file contain Compute Task interface server class implement client program use . Next , developer , perhaps developer interface JAR file , would write implementation Compute interface deploy service machine available client . Developers client program use Compute Task interface , contain JAR file , independently develop task client program use Compute service . In section , learn set JAR file , server class , client class . You see client 's Pi class download server runtime . Also , Compute Task interface download server registry runtime . This example separate interface , remote object implementation , client code three package : compute – Compute Task interface engine – ComputeEngine implementation class client – ComputePi client code Pi task implementation First , need build interface JAR file provide server client developer . Building JAR File Interface Classes First , need compile interface source file compute package build JAR file contain class file . Assume user waldo write interface place source file directory c : \home\waldo\src\compute Windows directory /home/waldo/src/compute Solaris OS Linux . Given path , use following command compile interface create JAR file : Microsoft Windows : cd c : \home\waldo\src javac compute\Compute.java compute\Task.java jar cvf compute.jar compute\*.class Solaris OS Linux : cd /home/waldo/src javac compute/Compute.java compute/Task.java jar cvf compute.jar compute/*.class