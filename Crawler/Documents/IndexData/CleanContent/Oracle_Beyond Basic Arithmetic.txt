The Java programming language support basic arithmetic arithmetic operator : + , - , * , / , % . The Math class java.lang package provide method constant advanced mathematical computation . The method Math class static , call directly class , like : Math.cos ( angle ) ; Note : Using static import language feature , n't write Math front every math function : import static java.lang.Math . * ; This allow invoke Math class method simple name . For example : co ( angle ) ; Constants Basic Methods The Math class include two constant : Math.E , base natural logarithm , Math.PI , ratio circumference circle diameter . The Math class also include 40 static method . The following table list number basic method . Basic Math Methods Method Description double ab ( double ) float ab ( float f ) int ab ( int ) long abs ( long lng ) Returns absolute value argument . double ceil ( double ) Returns small integer great equal argument . Returned double . double floor ( double ) Returns large integer less equal argument . Returned double . double rint ( double ) Returns integer closest value argument . Returned double . long round ( double ) int round ( float f ) Returns close long int , indicate method 's return type , argument . double min ( double arg1 , double arg2 ) float min ( float arg1 , float arg2 ) int min ( int arg1 , int arg2 ) long min ( long arg1 , long arg2 ) Returns small two argument . double max ( double arg1 , double arg2 ) float max ( float arg1 , float arg2 ) int max ( int arg1 , int arg2 ) long max ( long arg1 , long arg2 ) Returns large two argument . The following program , BasicMathDemo , illustrate use method : public class BasicMathDemo { public static void main ( String [ ] args ) { double = -191.635 ; double b = 43.74 ; int c = 16 , = 45 ; System.out.printf ( `` The absolute value `` + `` % .3f % .3f % n '' , , Math.abs ( ) ) ; System.out.printf ( `` The ceiling `` + `` % .2f % .0f % n '' , b , Math.ceil ( b ) ) ; System.out.printf ( `` The floor `` + `` % .2f % .0f % n '' , b , Math.floor ( b ) ) ; System.out.printf ( `` The rint % .2f `` + `` % .0f % n '' , b , Math.rint ( b ) ) ; System.out.printf ( `` The max % `` + `` % % % n '' , c , , Math.max ( c , ) ) ; System.out.printf ( `` The min % `` + `` % % % n '' , c , , Math.min ( c , ) ) ; } } Here 's output program : The absolute value -191.635 191.635 The ceiling 43.74 44 The floor 43.74 43 The rint 43.74 44 The max 16 45 45 The min 16 45 16 Exponential Logarithmic Methods The next table list exponential logarithmic method Math class . Exponential Logarithmic Methods Method Description double exp ( double ) Returns base natural logarithm , e , power argument . double log ( double ) Returns natural logarithm argument . double pow ( double base , double exponent ) Returns value first argument raise power second argument . double sqrt ( double ) Returns square root argument . The following program , ExponentialDemo , display value e , call method list previous table arbitrarily choose number : public class ExponentialDemo { public static void main ( String [ ] args ) { double x = 11.635 ; double = 2.76 ; System.out.printf ( `` The value `` + `` e % .4f % n '' , Math.E ) ; System.out.printf ( `` exp ( % .3f ) `` + `` % .3f % n '' , x , Math.exp ( x ) ) ; System.out.printf ( `` log ( % .3f ) `` + `` % .3f % n '' , x , Math.log ( x ) ) ; System.out.printf ( `` pow ( % .3f , % .3f ) `` + `` % .3f % n '' , x , , Math.pow ( x , ) ) ; System.out.printf ( `` sqrt ( % .3f ) `` + `` % .3f % n '' , x , Math.sqrt ( x ) ) ; } } Here 's output 'll see run ExponentialDemo : The value e 2.7183 exp ( 11.635 ) 112983.831 log ( 11.635 ) 2.454 pow ( 11.635 , 2.760 ) 874.008 sqrt ( 11.635 ) 3.411 Trigonometric Methods The Math class also provide collection trigonometric function , summarize following table . The value pass method angle express radian . You use toRadians method convert degree radian . Trigonometric Methods Method Description double sin ( double ) Returns sine specify double value . double co ( double ) Returns cosine specify double value . double tan ( double ) Returns tangent specify double value . double asin ( double ) Returns arcsine specify double value . double acos ( double ) Returns arccosine specify double value . double atan ( double ) Returns arctangent specify double value . double atan2 ( double , double x ) Converts rectangular coordinate ( x , ) polar coordinate ( r , theta ) return theta . double toDegrees ( double ) double toRadians ( double ) Converts argument degree radian . Here 's program , TrigonometricDemo , use method compute various trigonometric value 45-degree angle : public class TrigonometricDemo { public static void main ( String [ ] args ) { double degree = 45.0 ; double radian = Math.toRadians ( degree ) ; System.out.format ( `` The value pi `` + `` % .4f % n '' , Math.PI ) ; System.out.format ( `` The sine % .1f `` + `` degree % .4f % n '' , degree , Math.sin ( radian ) ) ; System.out.format ( `` The cosine % .1f `` + `` degree % .4f % n '' , degree , Math.cos ( radian ) ) ; System.out.format ( `` The tangent % .1f `` + `` degree % .4f % n '' , degree , Math.tan ( radian ) ) ; System.out.format ( `` The arcsine % .4f `` + `` % .4f degree % n '' , Math.sin ( radian ) , Math.toDegrees ( Math.asin ( Math.sin ( radian ) ) ) ) ; System.out.format ( `` The arccosine % .4f `` + `` % .4f degree % n '' , Math.cos ( radian ) , Math.toDegrees ( Math.acos ( Math.cos ( radian ) ) ) ) ; System.out.format ( `` The arctangent % .4f `` + `` % .4f degree % n '' , Math.tan ( radian ) , Math.toDegrees ( Math.atan ( Math.tan ( radian ) ) ) ) ; } } The output program follow : The value pi 3.1416 The sine 45.0 degree 0.7071 The cosine 45.0 degree 0.7071 The tangent 45.0 degree 1.0000 The arcsine 0.7071 45.0000 degree The arccosine 0.7071 45.0000 degree The arctangent 1.0000 45.0000 degree Random Numbers The random ( ) method return pseudo-randomly select number 0.0 1.0 . The range include 0.0 1.0 . In word : 0.0 < = Math.random ( ) < 1.0 . To get number different range , perform arithmetic value return random method . For example , generate integer 0 9 , would write : int number = ( int ) ( Math.random ( ) * 10 ) ; By multiply value 10 , range possible value become 0.0 < = number < 10.0 . Using Math.random work well need generate single random number . If need generate series random number , create instance java.util.Random invoke method object generate number .