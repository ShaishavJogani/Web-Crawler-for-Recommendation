The rest LDAP lesson cover JNDI provide ability perform certain interesting LDAP operation . Renaming Objects You use Context.rename ( ) rename object directory . In LDAP v2 , correspond `` modify RDN '' operation rename entry within context ( , rename sibling ) . In LDAP v3 , correspond `` modify DN '' operation , like `` modify RDN , '' except old new entry need context . You use Context.rename ( ) rename leaf entry interior node . The example show Naming Directory Operations lesson rename leaf entry . The following code rename interior node `` ou=NewHires '' `` ou=OldHires '' : ctx.rename ( `` ou=NewHires '' , `` ou=OldHires '' ) ; Note : The Oracle Directory Server v5.2 support rename interior node . If run example , get ContextNotEmptyException . Renaming Different Part DIT With LDAP v3 , rename entry different part DIT . To use Context.rename ( ) , must use context common ancestor new old entry . For example , rename `` cn=C . User , ou=NewHires , o=JNDITutorial '' `` cn=C . User , ou=People , o=JNDITutorial '' , must use context name `` o=JNDITutorial '' . Following example demonstrate . If try run example LDAP v2 server , get InvalidNameException version 2 support feature . ctx.rename ( `` cn=C . User , ou=NewHires '' , `` cn=C . User , ou=People '' ) ; Note : The Oracle Directory Server v5.2 support rename different parent node . If run example use server , get OperationNotSupportedException ( indicate `` protocol error '' ) . Keeping Old Name Attributes In LDAP , rename entry , option keep entry 's old RDN attribute updated entry . For example , rename entry `` cn=C . User '' `` cn=Claude User '' , specify whether want old RDN `` cn=C . User '' keep attribute . To specify whether want keep old name attribute use Context.rename ( ) , use `` java.naming.ldap.deleteRDN '' environment property . If property 's value `` true '' ( default ) , old RDN remove . If value `` false '' , old RDN keep attribute updated entry . The complete example . // Set property keep RDN env.put ( `` java.naming.ldap.deleteRDN '' , `` false '' ) ; // Create initial context DirContext ctx = new InitialDirContext ( env ) ; // Perform rename ctx.rename ( `` cn=C . User , ou=NewHires '' , `` cn=Claude User , ou=NewHires '' ) ;