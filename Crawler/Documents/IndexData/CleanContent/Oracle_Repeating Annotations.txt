There situation want apply annotation declaration type use . As Java SE 8 release , repeat annotation enable . For example , write code use timer service enable run method give time certain schedule , similar UNIX cron service . Now want set timer run method , doPeriodicCleanup , last day month every Friday 11:00 p.m. To set timer run , create @ Schedule annotation apply twice doPeriodicCleanup method . The first use specify last day month second specifies Friday 11p.m. , show following code example : @ Schedule ( dayOfMonth= '' last '' ) @ Schedule ( dayOfWeek= '' Fri '' , hour= '' 23 '' ) public void doPeriodicCleanup ( ) { ... } The previous example applies annotation method . You repeat annotation anywhere would use standard annotation . For example , class handle unauthorized access exception . You annotate class one @ Alert annotation manager another admins : @ Alert ( role= '' Manager '' ) @ Alert ( role= '' Administrator '' ) public class UnauthorizedAccessException extend SecurityException { ... } For compatibility reason , repeat annotation store container annotation automatically generate Java compiler . In order compiler , two declaration require code . Step 1 : Declare Repeatable Annotation Type The annotation type must mark @ Repeatable meta-annotation . The following example define custom @ Schedule repeatable annotation type : import java.lang.annotation.Repeatable ; @ Repeatable ( Schedules.class ) public @ interface Schedule { String dayOfMonth ( ) default `` first '' ; String dayOfWeek ( ) default `` Mon '' ; int hour ( ) default 12 ; } The value @ Repeatable meta-annotation , parenthesis , type container annotation Java compiler generates store repeating annotation . In example , contain annotation type Schedules , repeat @ Schedule annotation store @ Schedules annotation . Applying annotation declaration without first declare repeatable result compile-time error . Step 2 : Declare Containing Annotation Type The contain annotation type must value element array type . The component type array type must repeatable annotation type . The declaration Schedules contain annotation type following : public @ interface Schedules { Schedule [ ] value ( ) ; } Retrieving Annotations There several method available Reflection API use retrieve annotation . The behavior method return single annotation , AnnotatedElement.getAnnotation ( Class < T > ) , unchanged return single annotation one annotation requested type present . If one annotation requested type present , obtain first get container annotation . In way , legacy code continue work . Other method introduce Java SE 8 scan container annotation return multiple annotation , AnnotatedElement.getAnnotationsByType ( Class < T > ) . See AnnotatedElement class specification information available method . Design Considerations When design annotation type , must consider cardinality annotation type . It possible use annotation zero time , , , annotation 's type mark @ Repeatable , . It also possible restrict annotation type use use @ Target meta-annotation . For example , create repeatable annotation type use method field . It important design annotation type carefully ensure programmer use annotation find flexible powerful possible .