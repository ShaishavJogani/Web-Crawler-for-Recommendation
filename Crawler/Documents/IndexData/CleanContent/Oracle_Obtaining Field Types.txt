A field may either primitive reference type . There eight primitive type : boolean , byte , short , int , long , char , float , double . A reference type anything direct indirect subclass java.lang.Object include interface , array , enumerate type . The FieldSpy example print field 's type generic type give fully-qualified binary class name field name . import java.lang.reflect.Field ; import java.util.List ; public class FieldSpy < T > { public boolean [ ] [ ] b = { { false , false } , { true , true } } ; public String name = `` Alice '' ; public List < Integer > list ; public T val ; public static void main ( String ... args ) { try { Class < ? > c = Class.forName ( args [ 0 ] ) ; Field f = c.getField ( args [ 1 ] ) ; System.out.format ( `` Type : % % n '' , f.getType ( ) ) ; System.out.format ( `` GenericType : % % n '' , f.getGenericType ( ) ) ; // production code handle exception gracefully } catch ( ClassNotFoundException x ) { x.printStackTrace ( ) ; } catch ( NoSuchFieldException x ) { x.printStackTrace ( ) ; } } } Sample output retrieve type three public field class ( b , name , parameterized type list ) , follow . User input italic . $ java FieldSpy FieldSpy b Type : class [ [ Z GenericType : class [ [ Z $ java FieldSpy FieldSpy name Type : class java.lang.String GenericType : class java.lang.String $ java FieldSpy FieldSpy list Type : interface java.util.List GenericType : java.util.List < java.lang.Integer > $ java FieldSpy FieldSpy val Type : class java.lang.Object GenericType : T The type field b two-dimensional array boolean . The syntax type name describe Class.getName ( ) . The type field val report java.lang.Object generic implement via type erasure remove information regard generic type compilation . Thus T replace upper bound type variable , case , java.lang.Object . Field.getGenericType ( ) consult Signature Attribute class file 's present . If attribute n't available , fall back Field.getType ( ) change introduction generic . The method reflection name getGenericFoo value Foo implement similarly .