Before piece text display , must properly shape position use appropriate glyph ligature . This process refer text layout . The text layout process involve following : Shaping text use appropriate glyph ligatures Properly order text Measuring position text The information use lay text also necessary perform text operation caret positioning , hit detection , highlighting . See Working Bidirectional Text information text operation . To develop software deploy international market , text must lay different language way conform rule appropriate writing system . This section cover following topic : Shaping Text Ordering Text Measuring Positioning Text Shaping Text A glyph visual representation one character . The shape , size , position glyph dependent context . Many different glyph use represent single character combination character , depend font style . For example , handwritten cursive text , particular character take different shape depend connect adjacent character . In write system , particularly Arabic , context glyph must always take account . Unlike English , cursive form mandatory Arabic ; unacceptable present text without use cursive form . Depending context , cursive form differ radically shape . For example , Arabic letter heh four cursive form show following figure : Although four form quite different one another , cursive shape-changing fundamentally different cursive writing English . In context , two glyph change shape even radically merge form single glyph . This type merge glyph call ligature . For example , English font contain ligature fi show following figure : The merge glyph take account overhang letter f combine character natural-looking way , instead simply let letter collide . Ligatures also use Arabic use ligature mandatory ; unacceptable present certain character combination without use appropriate ligature . When ligature form Arabic character , shape change even radically English . For example , following figure illustrate two Arabic character combine single ligature appear together . Ordering Text In Java programming language , text encode use Unicode character encode . Text use Unicode character encoding store memory logical order . Logical order order character word read write . The logical order necessarily visual order , order corresponding glyph display . The visual order glyph particular writing system ( script ) call script order . For example , script order Roman text left-to-right script order Arabic Hebrew right-to-left . Some write system rule addition script order arrange glyph word line text . For example , Arabic Hebrew number run leave right , even though letter run right leave . This mean Arabic Hebrew , even embedded English text , truly bidirectional . See Working Bidirectional Text information . Measuring Positioning Text Unless work monospaced font , different character font different width . This mean positioning measuring text take account exactly character use , many . For example , right-align column number display proportional font , ca n't simply use extra space position text . To properly align column , need know exact width number adjust accordingly . Text often display use multiple font style , bold italic . In case , even character different shape width , depend style . To properly position , measure , render text , need keep track individual character style apply character . Fortunately , TextLayout class . To properly display text language Hebrew Arabic , individual character need measure position within context neighbor character . Because shape position character change depend context , measure position text without take context account produce unacceptable result . In addition , Java SE provide FontMetrics class , enable obtain measurement text render Font object height line text font . You use information precisely position text Java graphical application . See Measuring Text information .