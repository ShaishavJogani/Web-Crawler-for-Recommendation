You copy file directory use copy ( Path , Path , CopyOption ... ) method . The copy fail target file exists , unless REPLACE_EXISTING option specify . Directories copy . However , file inside directory copy , new directory empty even original directory contains file . When copy symbolic link , target link copy . If want copy link , content link , specify either NOFOLLOW_LINKS REPLACE_EXISTING option . This method take varargs argument . The following StandardCopyOption LinkOption enums support : REPLACE_EXISTING – Performs copy even target file already exist . If target symbolic link , link copy ( target link ) . If target non-empty directory , copy fail FileAlreadyExistsException exception . COPY_ATTRIBUTES – Copies file attribute associate file target file . The exact file attribute support file system platform dependent , last-modified-time support across platform copy target file . NOFOLLOW_LINKS – Indicates symbolic link follow . If file copy symbolic link , link copy ( target link ) . If familiar enums , see Enum Types . The following show use copy method : import static java.nio.file.StandardCopyOption . * ; ... Files.copy ( source , target , REPLACE_EXISTING ) ; In addition file copy , Files class also define method may use copy file stream . The copy ( InputStream , Path , CopyOptions ... ) method may use copy byte input stream file . The copy ( Path , OutputStream ) method may use copy byte file output stream . The Copy example use copy Files.walkFileTree method support recursive copy . See Walking File Tree information .