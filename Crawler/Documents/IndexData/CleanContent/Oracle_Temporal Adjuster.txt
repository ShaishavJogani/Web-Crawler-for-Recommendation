The TemporalAdjuster interface , java.time.temporal package , provide method take Temporal value return adjusted value . The adjuster use temporal-based type . If adjuster use ZonedDateTime , new date compute preserve original time time zone value . Predefined Adjusters The TemporalAdjusters class ( note plural ) provide set predefined adjuster find first last day month , first last day year , last Wednesday month , first Tuesday specific date , name example . The predefined adjuster define static method design use static import statement . The following example use several TemporalAdjusters method , conjunction method define temporal-based class , compute new date base original date 15 October 2000 : LocalDate date = LocalDate.of ( 2000 , Month.OCTOBER , 15 ) ; DayOfWeek dotw = date.getDayOfWeek ( ) ; System.out.printf ( `` % % % n '' , date , dotw ) ; System.out.printf ( `` first day Month : % % n '' , date.with ( TemporalAdjusters.firstDayOfMonth ( ) ) ) ; System.out.printf ( `` first Monday Month : % % n '' , date.with ( TemporalAdjusters.firstInMonth ( DayOfWeek.MONDAY ) ) ) ; System.out.printf ( `` last day Month : % % n '' , date.with ( TemporalAdjusters.lastDayOfMonth ( ) ) ) ; System.out.printf ( `` first day next Month : % % n '' , date.with ( TemporalAdjusters.firstDayOfNextMonth ( ) ) ) ; System.out.printf ( `` first day next Year : % % n '' , date.with ( TemporalAdjusters.firstDayOfNextYear ( ) ) ) ; System.out.printf ( `` first day Year : % % n '' , date.with ( TemporalAdjusters.firstDayOfYear ( ) ) ) ; This produce following output : 2000-10-15 SUNDAY first day Month : 2000-10-01 first Monday Month : 2000-10-02 last day Month : 2000-10-31 first day next Month : 2000-11-01 first day next Year : 2001-01-01 first day Year : 2000-01-01 Custom Adjusters You also create custom adjuster . To , create class implement TemporalAdjuster interface adjustInto ( Temporal ) method . The PaydayAdjuster class NextPayday example custom adjuster . The PaydayAdjuster evaluate passed-in date return next payday , assume payday occur twice month : 15th , last day month . If computed date occur weekend , previous Friday use . The current calendar year assume . /** * The adjustInto method accept Temporal instance * return adjusted LocalDate . If pass * parameter LocalDate , DateTimeException throw . */ public Temporal adjustInto ( Temporal input ) { LocalDate date = LocalDate.from ( input ) ; int day ; ( date.getDayOfMonth ( ) < 15 ) { day = 15 ; } else { day = date.with ( TemporalAdjusters.lastDayOfMonth ( ) ) .getDayOfMonth ( ) ; } date = date.withDayOfMonth ( day ) ; ( date.getDayOfWeek ( ) == DayOfWeek.SATURDAY || date.getDayOfWeek ( ) == DayOfWeek.SUNDAY ) { date = date.with ( TemporalAdjusters.previous ( DayOfWeek.FRIDAY ) ) ; } return input.with ( date ) ; } The adjuster invoke manner predefined adjuster , use method . The following line code NextPayday example : LocalDate nextPayday = date.with ( new PaydayAdjuster ( ) ) ; In 2013 , June 15 June 30 occur weekend . Running NextPayday example respective date June 3 June 18 ( 2013 ) , give following result : Given date : 2013 Jun 3 next payday : 2013 Jun 14 Given date : 2013 Jun 18 next payday : 2013 Jun 28