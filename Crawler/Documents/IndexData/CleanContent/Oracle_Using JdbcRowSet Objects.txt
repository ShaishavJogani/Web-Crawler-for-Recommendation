A JdbcRowSet object enhanced ResultSet object . It maintain connection data source , ResultSet object . The big difference set property listener notification mechanism make JavaBeans component . One main us JdbcRowSet object make ResultSet object scrollable updatable otherwise capability . This section cover following topic : Creating JdbcRowSet Objects Default JdbcRowSet Objects Setting Properties Using JdbcRowSet Objects Code Sample Creating JdbcRowSet Objects You create JdbcRowSet object various way : By use reference implementation constructor take ResultSet object By use reference implementation constructor take Connection object By use reference implementation default constructor By use instance RowSetFactory , create class RowSetProvider Note : Alternatively , use constructor JdbcRowSet implementation JDBC driver . However , implementation RowSet interface differ reference implementation . These implementation different name constructor . For example , Oracle JDBC driver 's implementation JdbcRowSet interface name oracle.jdbc.rowset.OracleJDBCRowSet . Passing ResultSet Objects The simple way create JdbcRowSet object produce ResultSet object pas JdbcRowSetImpl constructor . Doing create JdbcRowSet object also populate data ResultSet object . Note : The ResultSet object pass JdbcRowSetImpl constructor must scrollable . As example , following code fragment use Connection object con create Statement object , stmt , execute query . The query produce ResultSet object r , pass constructor create new JdbcRowSet object initialize data r : stmt = con.createStatement ( ResultSet.TYPE_SCROLL_SENSITIVE , ResultSet.CONCUR_UPDATABLE ) ; rs = stmt.executeQuery ( `` select * COFFEES '' ) ; jdbcRs = new JdbcRowSetImpl ( r ) ; A JdbcRowSet object create ResultSet object serve wrapper ResultSet object . Because RowSet object r scrollable updatable , jdbcRs also scrollable updatable . If run method createStatement without argument , r would scrollable updatable , neither would jdbcRs . Passing Connection Objects The first statement following code excerpt JdbcRowSetSample create JdbcRowSet object connect database Connection object con : jdbcRs = new JdbcRowSetImpl ( con ) ; jdbcRs.setCommand ( `` select * COFFEES '' ) ; jdbcRs.execute ( ) ; The object jdbcRs contain data specify SQL statement method setCommand , run method execute . The object jdbcRs scrollable updatable ; default , JdbcRowSet RowSet object scrollable updatable unless otherwise specify . See Default JdbcRowSet Objects information JdbcRowSet property specify . Using Default Constructor The first statement following code excerpt create empty JdbcRowSet object . public void createJdbcRowSet ( String username , String password ) { jdbcRs = new JdbcRowSetImpl ( ) ; jdbcRs.setCommand ( `` select * COFFEES '' ) ; jdbcRs.setUrl ( `` jdbc : myDriver : myAttribute '' ) ; jdbcRs.setUsername ( username ) ; jdbcRs.setPassword ( password ) ; jdbcRs.execute ( ) ; // ... } The object jdbcRs contain data specify SQL statement method setCommand , specify JdbcResultSet object connect database , run method execute . All reference implementation constructor assign default value property list section Default JdbcRowSet Objects . Using RowSetFactory Interface With RowSet 1.1 , part Java SE 7 later , use instance RowSetFactory create JdbcRowSet object . For example , following code excerpt use instance RowSetFactory interface create JdbcRowSet object , jdbcRs : public void createJdbcRowSetWithRowSetFactory ( String username , String password ) throw SQLException { RowSetFactory myRowSetFactory = null ; JdbcRowSet jdbcRs = null ; ResultSet rs = null ; Statement stmt = null ; try { myRowSetFactory = RowSetProvider.newFactory ( ) ; jdbcRs = myRowSetFactory.createJdbcRowSet ( ) ; jdbcRs.setUrl ( `` jdbc : myDriver : myAttribute '' ) ; jdbcRs.setUsername ( username ) ; jdbcRs.setPassword ( password ) ; jdbcRs.setCommand ( `` select * COFFEES '' ) ; jdbcRs.execute ( ) ; // ... } } The following statement create RowSetProvider object myRowSetFactory default RowSetFactory implementation , com.sun.rowset.RowSetFactoryImpl : myRowSetFactory = RowSetProvider.newFactory ( ) ; Alternatively , JDBC driver RowSetFactory implementation , may specify argument newFactory method . The following statement create JdbcRowSet object jdbcRs configure database connection property : jdbcRs = myRowSetFactory.createJdbcRowSet ( ) ; jdbcRs.setUrl ( `` jdbc : myDriver : myAttribute '' ) ; jdbcRs.setUsername ( username ) ; jdbcRs.setPassword ( password ) ; The RowSetFactory interface contain method create different type RowSet implementation available RowSet 1.1 later : createCachedRowSet createFilteredRowSet createJdbcRowSet createJoinRowSet createWebRowSet Default JdbcRowSet Objects When create JdbcRowSet object default constructor , new JdbcRowSet object following property : type : ResultSet.TYPE_SCROLL_INSENSITIVE ( scrollable cursor ) concurrency : ResultSet.CONCUR_UPDATABLE ( update ) escapeProcessing : true ( driver escape processing ; escape processing enable , driver scan escape syntax translate code particular database understands ) maxRows : 0 ( limit number row ) maxFieldSize : 0 ( limit number byte column value ; apply columns store BINARY , VARBINARY , LONGVARBINARY , CHAR , VARCHAR , LONGVARCHAR value ) queryTimeout : 0 ( time limit long take execute query ) showDeleted : false ( deleted row visible ) transactionIsolation : Connection.TRANSACTION_READ_COMMITTED ( read data commit ) typeMap : null ( type map associate Connection object use RowSet object null ) The main thing must remember list JdbcRowSet RowSet object scrollable updatable unless set different value property . Setting Properties The section Default JdbcRowSet Objects list property set default new JdbcRowSet object create . If use default constructor , must set additional property populate new JdbcRowSet object data . In order get data , JdbcRowSet object first need connect database . The following four property hold information use obtain connection database . username : name user supply database part gain access password : user 's database password url : JDBC URL database user want connect datasourceName : name use retrieve DataSource object register JNDI naming service Which property set depends go make connection . The preferred way use DataSource object , may practical register DataSource object JNDI naming service , generally system administrator . Therefore , code examples use DriverManager mechanism obtain connection , use url property datasourceName property . Another property must set command property . This property query determine data JdbcRowSet object hold . For example , following line code set command property query produce ResultSet object contain data table COFFEES : jdbcRs.setCommand ( `` select * COFFEES '' ) ; After set command property property necessary make connection , ready populate jdbcRs object data call execute method . jdbcRs.execute ( ) ; The execute method many thing background : It make connection database use value assign url , username , password property . It execute query set command property . It read data result ResultSet object jdbcRs object . Using JdbcRowSet Objects You update , insert , delete row JdbcRowSet object way update , insert , delete row updatable ResultSet object . Similarly , navigate JdbcRowSet object way navigate scrollable ResultSet object . The Coffee Break chain coffee house acquire another chain coffee house legacy database support scroll update result set . In word , ResultSet object produce legacy database scrollable cursor , data modify . However , create JdbcRowSet object populate data ResultSet object , , effect , make ResultSet object scrollable updatable . As mention previously , JdbcRowSet object default scrollable updatable . Because content identical ResultSet object , operate JdbcRowSet object equivalent operate ResultSet object . And JdbcRowSet object ongoing connection database , change make data also make data database . This section cover following topic : Navigating JdbcRowSet Objects Updating Column Values Inserting Rows Deleting Rows Navigating JdbcRowSet Objects A ResultSet object scrollable use next method move cursor forward , move cursor forward first row last row . A default JdbcRowSet object , however , use cursor movement method define ResultSet interface . A JdbcRowSet object call method next , also call ResultSet cursor movement method . For example , following line code move cursor fourth row jdbcRs object back third row : jdbcRs.absolute ( 4 ) ; jdbcRs.previous ( ) ; The method previous analogous method next use loop traverse row order . The difference must move cursor position last row , previous move cursor toward beginning . Updating Column Values You update data JdbcRowSet object way update data ResultSet object . Assume Coffee Break owner want raise price pound Espresso coffee . If owner know Espresso third row jdbcRs object , code might look like following : jdbcRs.absolute ( 3 ) ; jdbcRs.updateFloat ( `` PRICE '' , 10.99f ) ; jdbcRs.updateRow ( ) ; The code move cursor third row change value column PRICE 10.99 , update database new price . Calling method updateRow update database jdbcRs maintain connection database . For disconnect RowSet object , situation different . Inserting Rows If owner Coffee Break chain want add one coffee offer , owner need add one row COFFEES table new coffee , following code fragment JdbcRowSetSample . Notice jdbcRs object always connect database , insert row JdbcRowSet object insert row ResultSet object : You move cursor insert row , use appropriate updater method set value column , call method insertRow : jdbcRs.moveToInsertRow ( ) ; jdbcRs.updateString ( `` COF_NAME '' , `` HouseBlend '' ) ; jdbcRs.updateInt ( `` SUP_ID '' , 49 ) ; jdbcRs.updateFloat ( `` PRICE '' , 7.99f ) ; jdbcRs.updateInt ( `` SALES '' , 0 ) ; jdbcRs.updateInt ( `` TOTAL '' , 0 ) ; jdbcRs.insertRow ( ) ; jdbcRs.moveToInsertRow ( ) ; jdbcRs.updateString ( `` COF_NAME '' , `` HouseDecaf '' ) ; jdbcRs.updateInt ( `` SUP_ID '' , 49 ) ; jdbcRs.updateFloat ( `` PRICE '' , 8.99f ) ; jdbcRs.updateInt ( `` SALES '' , 0 ) ; jdbcRs.updateInt ( `` TOTAL '' , 0 ) ; jdbcRs.insertRow ( ) ; When call method insertRow , new row insert jdbcRs object also insert database . The precede code fragment go process twice , two new row insert jdbcRs object database . Deleting Rows As true update data insert new row , delete row JdbcRowSet object ResultSet object . The owner want discontinue sell French Roast decaffeinate coffee , last row jdbcRs object . In following line code , first line move cursor last row , second line delete last row jdbcRs object database : jdbcRs.last ( ) ; jdbcRs.deleteRow ( ) ; Code Sample The sample JdbcRowSetSample following : Creates new JdbcRowSet object initialize ResultSet object produce execution query retrieve row COFFEES table Moves cursor third row COFFEES table update PRICE column row Inserts two new row , one HouseBlend one HouseDecaf Moves cursor last row delete