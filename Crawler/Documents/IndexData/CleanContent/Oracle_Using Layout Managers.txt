A layout manager object implement LayoutManager interface* determine size position component within container . Although component provide size alignment hint , container 's layout manager final say size position component within container . Note : This lesson cover write layout code hand , challenge . If interested learn detail layout management , might prefer use GroupLayout layout manager combine builder tool lay GUI . One builder tool NetBeans IDE . Otherwise , want code hand want use GroupLayout , GridBagLayout recommend next flexible powerful layout manager . If interested use JavaFX create GUI , see Working With Layouts JavaFX . This section discuss common task relate use layout manager : Setting Layout Manager Adding Components Container Providing Size Alignment Hints Putting Space Between Components Setting Container 's Orientation Tips Choosing Layout Manager Third-Party Layout Managers Setting Layout Manager As rule , container whose layout manager need worry JPanels content pane . Each JPanel object initialize use FlowLayout , unless specify differently create JPanel . Content pane use BorderLayout default . If like default layout manager panel content pane us , free change different one . However , unless use JToolBar , FlowLayout BorderLayout manager useful prototyping . Any real application need reset layout manager . Again , use appropriate tool , rather cod manager hand . You set panel 's layout manager use JPanel constructor . For example : JPanel panel = new JPanel ( new BorderLayout ( ) ) ; After container create , set layout manager use setLayout method . For example : Container contentPane = frame.getContentPane ( ) ; contentPane.setLayout ( new FlowLayout ( ) ) ; Although strongly recommend use layout manager , perform layout without . By set container 's layout property null , make container use layout manager . With strategy , call absolute positioning , must specify size position every component within container . One drawback absolute positioning adjust well top-level container resize . It also adjust well difference user system , different font size locale . Adding Components Container When add component panel content pane , argument specify add method depend layout manager panel content pane use . In fact , layout manager even require add component explicitly ; example , GroupLayout . For example , BorderLayout require specify area component add ( use one constant define BorderLayout ) use code like : pane.add ( aComponent , BorderLayout.PAGE_START ) ; The how-to section layout manager detail , , argument need specify add method . Some layout manager , GridBagLayout SpringLayout , require elaborate setup procedure . Many layout manager , however , simply place component base order add container . Swing container JPanel content pane generally provide API use instead add method . For example , instead add component directly scroll pane ( , actually , viewport ) , either specify component JScrollPane constructor use setViewportView . Because specialized API like , need know layout manager ( ) many Swing container use . ( For curious : scroll pane happen use layout manager name ScrollPaneLayout . ) For information add component specific container , see how-to page container . You find component how-to page use How Use Various Components . Providing Size Alignment Hints Sometimes need customize size hint component provide container 's layout manager , component lay well . You specify one minimum , prefer , maximum size component . You invoke component 's method set size hint — setMinimumSize , setPreferredSize , setMaximumSize . Or create subclass component override appropriate getter method — getMinimumSize , getPreferredSize , getMaximumSize . Here example make component 's maximum size unlimited : component.setMaximumSize ( new Dimension ( Integer.MAX_VALUE , Integer.MAX_VALUE ) ) ; Many layout manager pay attention component 's request maximum size . However , BoxLayout SpringLayout . Furthermore , GroupLayout provide ability set minimum , prefer maximum size explicitly , without touch component . Besides provide size hint , also provide alignment hint . For example , specify top edge two component align . You set alignment hint either invoke component 's setAlignmentX setAlignmentY method , override component 's getAlignmentX getAlignmentY method . Although layout manager ignore alignment hint , BoxLayout honor . You find example set alignment How Use BoxLayout . Putting Space Between Components Three factor influence amount space visible component container : The layout manager Some layout manager automatically put space component ; others . Some let specify amount space component . See how-to page layout manager information space support . Invisible component You create lightweight component perform painting , take space GUI . Often , use invisible component container control BoxLayout . See How Use BoxLayout example use invisible component . Empty border No matter layout manager , affect apparent amount space component add empty border component . The best candidate empty border component typically default border , panel label . Some component might work well border look-and-feel implementation , way painting code implement . For information border , see How Use Borders . Setting Container 's Orientation This website write English , text run leave right , top bottom . However , many language different orientation . The componentOrientation property provide way indicate particular component use something different default left-to-right , top-to-bottom orientation . In component radio button , orientation might use hint look feel switch location icon text button . In container , orientation use hint layout manager . To set container 's orientation , use either Component-defined method setComponentOrientation , set orientation container 's child well , applyComponentOrientation . The argument either method constant ComponentOrientation.RIGHT_TO_LEFT , call ComponentOrientation method getOrientation ( Locale ) . For example , following code cause JComponents initialize Arabic-language locale , set orientation content pane component inside accordingly : JComponent.setDefaultLocale ( new Locale ( `` ar '' ) ) ; JFrame frame = new JFrame ( ) ; ... Container contentPane = frame.getContentPane ( ) ; contentPane.applyComponentOrientation ( ComponentOrientation.getOrientation ( contentPane.getLocale ( ) ) ) ; Here two picture show FlowLayout lay component container exactly , except orientation . Default orientation ( left-to-right ) Right-to-left orientation The standard layout manager support component orientation FlowLayout , BorderLayout , BoxLayout , GridBagLayout , GridLayout . Note : Care must take component orientation apply renderers , editor component unreachable normal traversal containment hierarchy . Tips Choosing Layout Manager Layout manager different strength weakness . This section discuss common layout scenario layout manager might work scenario . However , , strongly recommend use builder tool create layout manager , NetBeans IDE Matisse GUI builder , rather cod manager hand . The scenario list give information purpose , case curious type manager use different situation , case absolutely must code manager manually . If none layout manager discuss right situation use builder tool , feel free use layout manager may write find . Also keep mind flexible layout manager GridBagLayout SpringLayout fulfill many layout need . Scenario : You need display component much space get . If component container , use GridLayout BorderLayout . Otherwise , BorderLayout GridBagLayout might good match . If use BorderLayout , need put space-hungry component center . With GridBagLayout , need set constraint component fill=GridBagConstraints.BOTH . Another possibility use BoxLayout , make space-hungry component specify large preferred maximum size . Scenario : You need display component compact row natural size . Consider use JPanel group component use either JPanel 's default FlowLayout manager BoxLayout manager . SpringLayout also good . Scenario : You need display component size row column . GridLayout perfect . Scenario : You need display component row column , possibly vary amount space , custom alignment , custom component size . BoxLayout perfect . Scenario : You need display aligned column , form-like interface column label use describe text field adjacent column . SpringLayout natural choice . The SpringUtilities class use several Tutorial example define makeCompactGrid method let easily align multiple row column component . Scenario : You complex layout many component . Consider either use flexible layout manager GridBagLayout SpringLayout , group component one JPanels simplify layout . If take latter approach , JPanel might use different layout manager . Third Party Layout Managers Other third party layout manager create Swing community , complement provide Java platform . The following list mean definitive , layout manager list popular : MiGLayout Karsten Lentzsch 's FormLayout *Way back JDK 1.1 second interface , LayoutManager2 , introduce . LayoutManager2 extend LayoutManager , provide support maximum size alignment . LayoutManager2 also add method addLayoutComponent , take Object , invalidateLayout . Layout manager also need notification provide LayoutManager2 , modern layout manager need implement .