The JTextArea class provide component display multiple line text optionally allow user edit text . If need obtain one line input user , use text field . If want text area display text use multiple font style , use editor pane text pane . If displayed text limited length never edit user , use label . Many Tutorial 's example use uneditable text area display program output . Here picture example call TextDemo enable type text use text field ( top ) append typed text text area ( underneath ) . Click Launch button run TextDemo use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . You find entire code program TextDemo.java . The following code creates initialize text area : textArea = new JTextArea ( 5 , 20 ) ; JScrollPane scrollPane = new JScrollPane ( textArea ) ; textArea.setEditable ( false ) ; The two argument JTextArea constructor hint number row column , respectively , text area display . The scroll pane contain text area pay attention hint determine big scroll pane . Without creation scroll pane , text area would automatically scroll . The JScrollPane constructor show precede snippet set text area view scroll pane , specifies scroll pane 's scroll bar visible need . See How Use Scroll Panes want information . Text area editable default . The code setEditable ( false ) make text area uneditable . It still selectable user copy data , user change text area 's content directly . The following code add text text area . Note text system use '\n ' character internally represent newlines ; detail , see API documentation DefaultEditorKit . private final static String newline = `` \n '' ; ... textArea.append ( text + newline ) ; Unless user move caret ( insertion point ) click drag text area , text area automatically scroll appended text visible . You force text area scroll bottom move caret end text area call append : textArea.setCaretPosition ( textArea.getDocument ( ) .getLength ( ) ) ; Customizing Text Areas You customize text area several way . For example , although give text area display text one font color , set font color use . This customization option perform component . You also determine text area wrap line number character per tab . Finally , use method JTextArea class inherits JTextComponent class set property caret , support drag , color selection . The following code take TextSamplerDemo.java demonstrate initialize editable text area . The text area use specified italic font , wrap line word . JTextArea textArea = new JTextArea ( `` This editable JTextArea. `` + `` A text area \ '' plain\ '' text component , `` + `` mean although display text `` + `` font , text font . '' ) ; textArea.setFont ( new Font ( `` Serif '' , Font.ITALIC , 16 ) ) ; textArea.setLineWrap ( true ) ; textArea.setWrapStyleWord ( true ) ; By default , text area wrap line long display area . Instead , use one line text newline character — text area within scroll pane — allow scroll horizontally . This example turn line wrap call setLineWrap method call setWrapStyleWord method indicate text area wrap line word boundary rather character boundary . To provide scroll capability , example put text area scroll pane . JScrollPane areaScrollPane = new JScrollPane ( textArea ) ; areaScrollPane.setVerticalScrollBarPolicy ( JScrollPane.VERTICAL_SCROLLBAR_ALWAYS ) ; areaScrollPane.setPreferredSize ( new Dimension ( 250 , 250 ) ) ; You might notice JTextArea constructor use example specify number row column . Instead , code limit size text area set scroll pane 's preferred size . Another Example : TextAreaDemo The TextAreaDemo example introduces editable text area special feature — word completion function . As user type word , program suggest hint complete word whenever program 's vocabulary contain word start type . Here picture TextAreaDemo application . Click Launch button run TextAreaDemo use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . You find entire code program TextAreaDemo.java . This example provide scrolling capacity text area default scroll bar policy . By default , vertical scroll bar appear display area entirely fill text room append new word . You provide scroll pane type following code : textArea.setWrapStyleWord ( true ) ; jScrollPane1 = new JScrollPane ( textArea ) ; As mention , text area editable . You play text area type paste text , delete part text entire content . Also try use standard key binding edit text within text area . Now explore word completion function implement . Type word like `` Swing '' `` special '' . As soon type `` sw '' program show possible completion `` ing '' highlight light-blue . Press Enter accept completion continue type . The following code add document listener text area 's document : textArea.getDocument ( ) .addDocumentListener ( ) ; When start type word , insertUpdate method check whether program 's vocabulary contain typed prefix . Once completion prefix find , call invokeLater method submit task change document later . It important remember modify document within document event notification , otherwise get exception . Examine following code . String prefix = content.substring ( w + 1 ) .toLowerCase ( ) ; int n = Collections.binarySearch ( word , prefix ) ; ( n < 0 & & -n < = words.size ( ) ) { String match = words.get ( -n - 1 ) ; ( match.startsWith ( prefix ) ) { // A completion find String completion = match.substring ( pos - w ) ; // We modify Document within notification , // submit task change later SwingUtilities.invokeLater ( new CompletionTask ( completion , po + 1 ) ) ; } } else { // Nothing find mode = Mode.INSERT ; } The code show bold illustrate selection create . The caret first set end complete word , move back position last character type . The moveCaretPosition method move caret new position also select text two position . The completion task implement following code : private class CompletionTask implement Runnable { String completion ; int position ; CompletionTask ( String completion , int position ) { this.completion = completion ; this.position = position ; } public void run ( ) { textArea.insert ( completion , position ) ; textArea.setCaretPosition ( position + completion.length ( ) ) ; textArea.moveCaretPosition ( position ) ; mode = Mode.COMPLETION ; } } The Text Area API The following table list commonly use JTextArea constructor method . Other method likely call define JTextComponent , list The Text Component API . You might also invoke method text area inherit ancestor , setPreferredSize , setForeground , setBackground , setFont , . See The JComponent Class table commonly use inherit method . The API use text area include following category : Setting Obtaining Contents Fine Tuning Appearance Implementing Functionality Setting Obtaining Contents Method Constructor Purpose JTextArea ( ) JTextArea ( String ) JTextArea ( String , int , int ) JTextArea ( int , int ) Creates text area . When present , String argument contain initial text . The int argument specify desired width column height row , respectively . void setText ( String ) String getText ( ) ( define JTextComponent ) Sets obtain text display text area . Fine Tuning Text Area 's Appearance Method Purpose void setEditable ( boolean ) boolean isEditable ( ) ( define JTextComponent ) Sets indicate whether user edit text text area . void setColumns ( int ) ; int getColumns ( ) Sets obtain number column display text area . This really hint compute area 's preferred width . void setRows ( int ) ; int getRows ( ) Sets obtain number row display text area . This hint compute area 's preferred height . int setTabSize ( int ) Sets number character tab equivalent . int setLineWrap ( boolean ) Sets whether line wrap long fit within allocated width . By default property false line wrap . int setWrapStyleWord ( boolean ) Sets whether line wrap white space ( word boundary ) character . By default property false , line wrap ( line wrapping turn ) character . Implementing Text Area 's Functionality Method Purpose void selectAll ( ) ( define JTextComponent ) Selects character text area . void append ( String ) Adds specified text end text area . void insert ( String , int ) Inserts specified text specified position . void replaceRange ( String , int , int ) Replaces text indicated position specified string . int getLineCount ( ) int getLineOfOffset ( int ) int getLineStartOffset ( int ) int getLineEndOffset ( int ) Utilities find line number position beginning end specified line . Examples That Use Text Areas This table list example use text area point example describe . Example Where Described Notes TextDemo This section An application append user-entered text text area . TextAreaDemo This section An application text area word completion function . TextSamplerDemo Using Text Components Uses one Swing text component . HtmlDemo How Use HTML Swing Components A text area enable user type HTML code display label . BasicDnD Introduction DnD Demonstrates built-in drag-and-drop functionality several Swing component , include text area . FocusConceptsDemo How Use Focus Subsystem Demonstrates focus work use component include text area .