The JTextComponent class foundation Swing text component . This class provide follow customizable feature descendant : A model , know document , manage component 's content . A view , display component screen . A controller , know editor kit , read write text implement edit capability action . Support infinite undo redo . A pluggable caret support caret change listener navigation filter . See example call TextComponentDemo explore capability . Although TextComponentDemo example contain customized instance JTextPane , capability discuss section inherit JTextComponent subclass . The upper text component customized text pane . The low text component instance JTextArea , serve log report change make content text pane . The status line bottom window report either location selection position caret , depend whether text select . Try : Click Launch button run TextComponentDemo use Javaâ„¢ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . Use mouse select text place cursor text pane . Information selection cursor display bottom window . Enter text type keyboard . You move caret around use arrow key keyboard four emacs key binding : Ctrl-B ( backward one character ) , Ctrl-F ( forward one character ) , Ctrl-N ( one line ) , Ctrl-P ( one line ) . Open Edit menu , use menu item edit text text pane . Make selection text area bottom window . Because text area editable , Edit menu 's command , like copy-to-clipboard , work . It important note though , menu operate text component . Use item Style menu apply different style text text pane . Using TextComponentDemo example reference point , section cover following topic : Associating Text Actions With Menus Buttons Associating Text Actions With Key Strokes Implementing Undo Redo Concepts : About Documents Implementing Document Filter Listening Changes Document Listening Caret Selection Changes Concepts : About Editor Kits Associating Text Actions With Menus Buttons All Swing text component support standard edit command cut , copy , paste , insert character . Each edit command represent implement Action object . ( To learn action see How Use Actions . ) Actions allow associate command GUI component , menu item button , therefore build GUI around text component . You invoke getActions method text component receive array contain action support component . It also possible load array action HashMap program retrieve action name . Here code TextComponentDemo example take action text pane load HashMap . private HashMap < Object , Action > createActionTable ( JTextComponent textComponent ) { HashMap < Object , Action > action = new HashMap < Object , Action > ( ) ; Action [ ] actionsArray = textComponent.getActions ( ) ; ( int = 0 ; < actionsArray.length ; i++ ) { Action = actionsArray [ ] ; actions.put ( a.getValue ( Action.NAME ) , ) ; } return action ; } Here method retrieve action name hash map : private Action getActionByName ( String name ) { return actions.get ( name ) ; } You use method verbatim program . The following code show cut menu item create associate action remove text text component . protect JMenu createEditMenu ( ) { JMenu menu = new JMenu ( `` Edit '' ) ; ... menu.add ( getActionByName ( DefaultEditorKit.cutAction ) ) ; ... This code get action name use handy method show previously . It add action menu . That need . The menu action take care everything else . Note name action come DefaultEditorKit . This kit provide action basic text editing superclass editor kit provide Swing . So capability available text component unless thay override customization . For efficiency , text component share action . The Action object return getActionByName ( DefaultEditorKit.cutAction ) share uneditable JTextArea bottom window . This share characteristic two important ramification : Generally , modify Action object get editor kit . If , change affect text component program . Action object operate text component program , sometimes intend . In example , even though editable , JTextArea share action JTextPane . ( Select text text area , choose cut-to-clipboard menu item . You hear beep text area editable . ) If want share , instantiate Action object . DefaultEditorKit define number useful Action subclass . Here code create Style menu put Bold menu item : protect JMenu createStyleMenu ( ) { JMenu menu = new JMenu ( `` Style '' ) ; Action action = new StyledEditorKit.BoldAction ( ) ; action.putValue ( Action.NAME , `` Bold '' ) ; menu.add ( action ) ; ... The StyledEditorKit provide Action subclass implement edit command styled text . You note instead get action editor kit , code create instance BoldAction class . Thus , action share text component , change name affect text component . Associating Text Actions With Key Strokes In addition associate action GUI component , also associate action key stroke use text component 's input map . Input map describe How Use Key Bindings . The text pane TextComponentDemo example support four key binding provide default . Ctrl-B move caret backward one character Ctrl-F move caret forward one character Ctrl-N move caret one line Ctrl-P move caret one line The following code add Ctrl-B key bind text pane . The code add three binding list similar . InputMap inputMap = textPane.getInputMap ( ) ; KeyStroke key = KeyStroke.getKeyStroke ( KeyEvent.VK_B , Event.CTRL_MASK ) ; inputMap.put ( key , DefaultEditorKit.backwardAction ) ; First , code obtain text component 's input map . Next , find KeyStroke object represent Ctrl-B key sequence . Finally , code bind key stroke Action move cursor backward . Implementing Undo Redo Implementing undo redo two part : Remembering undoable edits . Implementing undo redo command provide user interface . Part 1 : Remembering Undoable Edits To support undo redo , text component must remember edit occur , order edits , need undo edit . The example program use instance UndoManager class manage list undoable edits . The undo manager create member variable declare : protect UndoManager undo = new UndoManager ( ) ; Now , let u look program discovers undoable edits add undo manager . A document notifies interested listener whenever undoable edit occur document content . An important step implement undo redo register undoable edit listener document text component . The following code add instance MyUndoableEditListener text pane 's document : doc.addUndoableEditListener ( new MyUndoableEditListener ( ) ) ; The undoable edit listener use example add edit undo manager 's list : protected class MyUndoableEditListener implement UndoableEditListener { public void undoableEditHappened ( UndoableEditEvent e ) { //Remember edit update menu undo.addEdit ( e.getEdit ( ) ) ; undoAction.updateUndoState ( ) ; redoAction.updateRedoState ( ) ; } } Note method update two object : undoAction redoAction . These action object attach Undo Redo menu item , respectively . The next step show create menu item implement two action . For general information undoable edit listener undoable edit event , see How Write Undoable Edit Listener . Note : By default , undoable edit undo single character entry . It possible effort group edits series key stroke combine one undoable edit . Grouping edits manner would require define class intercept undoable edit event document , combine appropriate forward result undoable edit listener . Part 2 : Implementing Undo Redo Commands The first step implement undo redo create action put Edit menu . JMenu menu = new JMenu ( `` Edit '' ) ; //Undo redo action creation undoAction = new UndoAction ( ) ; menu.add ( undoAction ) ; redoAction = new RedoAction ( ) ; menu.add ( redoAction ) ; ... The undo redo action implement custom AbstractAction subclasses : UndoAction RedoAction , respectively . These class inner class example 's primary class . When user invoke undo command , actionPerformed method UndoAction class call : public void actionPerformed ( ActionEvent e ) { try { undo.undo ( ) ; } catch ( CannotUndoException ex ) { System.out.println ( `` Unable undo : `` + ex ) ; ex.printStackTrace ( ) ; } updateUndoState ( ) ; redoAction.updateRedoState ( ) ; } This method call undo manager 's undo method update menu item reflect new undo/redo state . Similarly , user invoke redo command , actionPerformed method RedoAction class call : public void actionPerformed ( ActionEvent e ) { try { undo.redo ( ) ; } catch ( CannotRedoException ex ) { System.out.println ( `` Unable redo : `` + ex ) ; ex.printStackTrace ( ) ; } updateRedoState ( ) ; undoAction.updateUndoState ( ) ; } This method similar undo , except call undo manager 's redo method . Much code UndoAction RedoAction class dedicate enable disable action appropriate current state , change name menu item reflect edit undone redone . Note : The implementation undo redo TextComponentDemo example take NotePad demo come JDK software . Many programmer also able copy implementation undo/redo without modification . Concepts : About Documents Like Swing component , text component separate data ( know model ) view data . If yet familiar model-view split use Swing component , refer Using Models . A text component 's model know document instance class implement Document interface . A document provide following service text component : Contains text . A document store textual content Element object , represent logical text structure , paragraph , text run share style . We describe Element object . Provides support edit text remove insertString method . Notifies document listener undoable edit listener change text . Manages Position object , track particular location within text even text modify . Allows obtain information text , length , segment text string . The Swing text package contain subinterface Document , StyledDocument , add support mark text style . One JTextComponent subclass , JTextPane , require document StyledDocument rather merely Document . The javax.swing.text package provide following hierarchy document class , implement specialized document various JTextComponent subclass : A PlainDocument default document text field , password field , text area . PlainDocument provide basic container text text display font . Even though editor pane styled text component , use instance PlainDocument default . The default document standard JTextPane instance DefaultStyledDocument â€” container styled text particular format . However , document instance use particular editor pane text pane depend type content bound . If use setPage method load text editor pane text pane , document instance use pane might change . Refer How Use Editor Panes Text Panes detail . Although set document text component , usually easy allow set automatically , necessary , use document filter change text component 's data set . You implement certain customizations either instal document filter replace text component 's document one . For example , text pane TextComponentDemo example document filter limit number character text pane contain . Implementing Document Filter To implement document filter , create subclass DocumentFilter attach document use setDocumentFilter method define AbstractDocument class . Although possible document descend AbstractDocument , default Swing text component use AbstractDocument subclass document . The TextComponentDemo application document filter , DocumentSizeFilter , limit number character text pane contain . Here code create filter attach text pane 's document : ... //Where member variable declare : JTextPane textPane ; AbstractDocument doc ; static final int MAX_CHARACTERS = 300 ; ... textPane = new JTextPane ( ) ; ... StyledDocument styledDoc = textPane.getStyledDocument ( ) ; ( styledDoc instanceof AbstractDocument ) { doc = ( AbstractDocument ) styledDoc ; doc.setDocumentFilter ( new DocumentSizeFilter ( MAX_CHARACTERS ) ) ; } To limit character allow document , DocumentSizeFilter override DocumentFilter class 's insertString method , call time text insert document . It also override replace method , likely call user paste new text . In general , text insertion result user type paste new text , setText method call . Here DocumentSizeFilter class 's implementation insertString method : public void insertString ( FilterBypass fb , int offs , String str , AttributeSet ) throw BadLocationException { ( ( fb.getDocument ( ) .getLength ( ) + str.length ( ) ) < = maxCharacters ) super.insertString ( fb , offs , str , ) ; else Toolkit.getDefaultToolkit ( ) .beep ( ) ; } The code replace similar . The FilterBypass parameter method define DocumentFilter class simply object enable document update thread-safe way . Because precede document filter concern addition document 's data , override insertString replace method . Most document filter would override DocumentFilter 's remove method well . Listening Changes Document You register two different type listener document : document listener undoable edit listener . This subsection describe document listener . For information undoable edit listener , refer Implementing Undo Redo . A document notifies register document listener change document . Use document listener create reaction text insert remove document , text style change . The TextComponentDemo program use document listener update change log whenever change make text pane . The following line code register instance MyDocumentListener class listener text pane 's document : doc.addDocumentListener ( new MyDocumentListener ( ) ) ; Here implementation MyDocumentListener class : protected class MyDocumentListener implement DocumentListener { public void insertUpdate ( DocumentEvent e ) { displayEditInfo ( e ) ; } public void removeUpdate ( DocumentEvent e ) { displayEditInfo ( e ) ; } public void changedUpdate ( DocumentEvent e ) { displayEditInfo ( e ) ; } private void displayEditInfo ( DocumentEvent e ) { Document document = ( Document ) e.getDocument ( ) ; int changeLength = e.getLength ( ) ; changeLog.append ( e.getType ( ) .toString ( ) + `` : `` + changeLength + `` character '' + ( ( changeLength == 1 ) ? `` . `` : `` s. `` ) + `` Text length = `` + document.getLength ( ) + `` . '' + newline ) ; } } The listener implement three method handle three different type document event : insertion , removal , style change . StyledDocument instance fire three type event . PlainDocument instance fire event insertion removal . For general information document listener document event , see How Write Document Listener . Remember document filter text pane limit number character allow document . If try add text document filter allow , document filter block change listener 's insertUpdate method call . Document listener notify change change already occur . You may want change document 's text within document listener . However , never modify content text component within document listener . If , program likely deadlock . Instead , use formatted text field provide document filter . Listening Caret Selection Changes The TextComponentDemo program use caret listener display current position caret , text select , extent selection . The caret listener class example JLabel subclass . Here code create caret listener label make caret listener text pane : //Create status area CaretListenerLabel caretListenerLabel = new CaretListenerLabel ( `` Caret Status '' ) ; ... textPane.addCaretListener ( caretListenerLabel ) ; A caret listener must implement one method , caretUpdate , call time caret move selection change . Here CaretListenerLabel implementation caretUpdate : public void caretUpdate ( CaretEvent e ) { //Get location text int dot = e.getDot ( ) ; int mark = e.getMark ( ) ; ( dot == mark ) { // selection try { Rectangle caretCoords = textPane.modelToView ( dot ) ; //Convert view coordinate setText ( `` caret : text position : `` + dot + `` , view location = [ `` + caretCoords.x + `` , `` + caretCoords.y + `` ] '' + newline ) ; } catch ( BadLocationException ble ) { setText ( `` caret : text position : `` + dot + newline ) ; } } else ( dot < mark ) { setText ( `` selection : `` + dot + `` `` + mark + newline ) ; } else { setText ( `` selection : `` + mark + `` `` + dot + newline ) ; } } As see , listener update text label reflect current state caret selection . The listener get information display caret event object . For general information caret listener caret event , see How Write Caret Listener . As document listener , caret listener passive . It react change caret selection , change caret selection . If want change caret selection , use navigation filter custom caret . Implementing navigation filter similar implement document filter . First , write subclass NavigationFilter . Then attach instance subclass text component setNavigationFilter method . You might create custom caret customize appearance caret . To create custom caret , write class implement Caret interface â€” perhaps extend DefaultCaret class . Then provide instance class argument setCaret method text component . Concepts : About Editor Kits Text component use EditorKit tie various piece text component together . The editor kit provide view factory , document , caret , action . An editor kit also read write document particular format . Although text component use editor kit , component hide . You set get editor kit use text field text area . Editor pane text pane provide getEditorKit method get current editor kit setEditorKit method change . For component , JTextComponent class provide API indirectly invoke customize editor kit capability . For example , JTextComponent provide read write method , invoke editor kit 's read write method . JTextComponent also provide method , getActions , return action support component . The Swing text package provide following editor kit : DefaultEditorKit Reads write plain text , provide basic set edit command . Details text system treat newlines find DefaultEditorKit API documentation . Briefly , '\n ' character use internally , document platform line separator use write file . All editor kit descendant DefaultEditorKit class . StyledEditorKit Reads write style text , provide minimal set action styled text . This class subclass DefaultEditorKit editor kit use JTextPane default . HTMLEditorKit Reads , write , edit HTML . This subclass StyledEditorKit . Each editor kit list register JEditorPane class associate text format kit read , writes , edits . When file load editor pane , pane check format file registered kit . If registered kit find support file format , pane use kit read file , display , edit . Thus , editor pane effectively transform editor text format . You extend JEditorPane support text format create editor kit , use JEditorPane 's registerEditorKitForContentType associate kit text format .