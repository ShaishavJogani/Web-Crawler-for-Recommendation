A Java Web Start application display customized loading progress indicator show progress download application 's resource . Consider Weather application CustomProgress class understand implement customized loading progress indicator Java Web Start application . For purpose demonstrate large prolonged download , Java Web Start application 's JAR file artificially inflate customprogress_webstart.jnlp file specifies additional JAR file resource . Developing Customized Loading Progress Indicator To develop customized loading progress indicator Java Web Start application , create class implement DownloadServiceListener interface . The constructor loading progress indicator class parameter . import javax.jnlp.DownloadServiceListener ; import java.awt.Container ; import java.applet.AppletStub ; import netscape.javascript . * ; // ... public class CustomProgress implement DownloadServiceListener { JFrame frame = null ; JProgressBar progressBar = null ; boolean uiCreated = false ; public CustomProgress ( ) { } ... } The following code snippet show build UI loading progress indicator : private void create ( ) { JPanel top = createComponents ( ) ; frame = new JFrame ( ) ; // top level custom progress // indicator UI frame.getContentPane ( ) .add ( top , BorderLayout.CENTER ) ; frame.setBounds ( 300,300,400,300 ) ; frame.pack ( ) ; updateProgressUI ( 0 ) ; } private JPanel createComponents ( ) { JPanel top = new JPanel ( ) ; top.setBackground ( Color.WHITE ) ; top.setLayout ( new BorderLayout ( 20 , 20 ) ) ; String lblText = `` < html > < font color=green size=+2 '' + `` > JDK Documentation < /font > < br/ > `` + `` The one-stop shop Java enlightenment ! < br/ > < /html > '' ; JLabel lbl = new JLabel ( lblText ) ; top.add ( lbl , BorderLayout.NORTH ) ; ... progressBar = new JProgressBar ( 0 , 100 ) ; progressBar.setValue ( 0 ) ; progressBar.setStringPainted ( true ) ; top.add ( progressBar , BorderLayout.SOUTH ) ; return top ; } Create update loading progress indicator follow method base overallPercent argument . These method invoke regularly Java Web Start software communicate progress application 's download . Java Web Start software always send message download validation resource 100 % complete . public void progress ( URL url , String version , long readSoFar , long total , int overallPercent ) { updateProgressUI ( overallPercent ) ; } public void upgradingArchive ( java.net.URL url , java.lang.String version , int patchPercent , int overallPercent ) { updateProgressUI ( overallPercent ) ; } public void validating ( java.net.URL url , java.lang.String version , long entry , long total , int overallPercent ) { updateProgressUI ( overallPercent ) ; } private void updateProgressUI ( int overallPercent ) { ( overallPercent > 0 & & overallPercent < 99 ) { ( ! uiCreated ) { uiCreated = true ; // create custom progress indicator's // UI work , // mean overallPercent > 0 // < 100 prevents flash // RIA load cache create ( ) ; } progressBar.setValue ( overallPercent ) ; SwingUtilities.invokeLater ( new Runnable ( ) { public void run ( ) { frame.setVisible ( true ) ; } } ) ; } else { // hide frame overallPercent // 99 SwingUtilities.invokeLater ( new Runnable ( ) { public void run ( ) { frame.setVisible ( false ) ; frame.dispose ( ) ; } } ) ; } } Compile loading progress indicator class build JAR file resource need display loading progress indicator . Include < JRE directory > /lib/javaws.jar file classpath enable compilation . The loading progress indicator class ready use . The next step specify loading progress indicator JAR file Java Web Start application 's progress indicator . Specifying Customized Loading Progress Indicator Java Web Start Application To specify customized loading progress indicator Java Web Start application , include following information application 's JNLP file : jar tag download= '' progress '' attribute progress-class attribute fully qualified name customized loading progress class . The following code snippet customprogress_webstart.jnlp file display usage download= '' progress '' progress-class attribute . < jnlp spec= '' 1.0+ '' codebase= `` http : //docs.oracle.com/javase/tutorialJWS/samples/deployment '' href= '' customprogress_webstartJWSProject/customprogress_webstart.jnlp '' > < ! -- ... -- > < resource > < j2se version= '' 1.7+ '' / > < jar href= `` webstart_AppWithCustomProgressIndicator/webstart_AppWithCustomProgressIndicator.jar '' / > < jar href= `` webstart_CustomProgressIndicator/webstart_CustomProgressIndicator.jar '' download= '' progress '' / > < jar href= `` webstart_AppWithCustomProgressIndicator/lib/IconDemo.jar '' / > < jar href= `` webstart_AppWithCustomProgressIndicator/lib/SplitPaneDemo.jar '' / > < jar href= `` webstart_AppWithCustomProgressIndicator/lib/SplitPaneDemo2.jar '' / > < jar href= `` webstart_AppWithCustomProgressIndicator/lib/TextBatchPrintingDemo.jar '' / > < jar href= `` webstart_AppWithCustomProgressIndicator/lib/ToolBarDemo.jar '' / > < jar href= `` webstart_AppWithCustomProgressIndicator/lib/ToolBarDemo2.jar '' / > < jar href= `` webstart_AppWithCustomProgressIndicator/lib/SwingSet2.jar '' / > < /resources > < application-desc main-class= '' customprogressindicatordemo.Main '' progress-class= '' customprogressindicator.CustomProgress '' / > < ! -- ... -- > < /jnlp > Deploy Java Web Start application web page . Open JavaWebStartAppPage.html web browser view customized loading progress indicator Weather application . Note : To view example properly , need install least Java SE Development Kit ( JDK ) 6 update 18 release.Note : If view Java Web Start application , clear cache use Java Control Panel view application . You able see progress indicator previously cache application . Note : If n't see example running , might need enable JavaScript interpreter browser Deployment Toolkit script function properly . Download source code Java Web Start Application With Customized Loading Progress Indicator example experiment far . See Customizing Loading Experience topic information customize rich Internet application ( RIA ) load experience .