Focus event fire whenever component gain lose keyboard focus . This true whether change focus occurs mouse , keyboard , programmatically . To get familiar basic focus concept obtain detailed information focus , see How Use Focus Subsystem . This section explain get focus event particular component register FocusListener instance . To get focus window , implement WindowFocusListener instance instead . To obtain focus status many component , consider implement PropertyChangeListener instance KeyboardFocusManager class , describe Tracking Focus Changes Multiple Components How Use Focus Subsystem . The following example demonstrate focus event . The window display variety component . A focus listener , register component , report every focus-gained focus-lost event . For event , component involve focus change , opposite component , report . For example , focus go button text field , focus-lost event fire button ( text field opposite component ) focus-gained event fire text field ( button opposite component ) . Focus-lost well focus-gained event temporary . For example , temporary focus-lost event occur window lose focus . A temporary focus-gained event occur popup menu . Running Example Click Launch button run FocusEventDemo use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run example , consult example index . You see `` Focus gain : JTextField '' message text area â `` opposite component '' null , since first component focus . Click label . Nothing happen label , default , get focus . Click combo box . A focus-lost event fire text field focus-gained event combo box . The combo box show focus , perhaps dotted line around text â exactly represent look feel dependent . Notice focus change one component another , first component fire focus-lost event second component fire focus-gained event . Select choice combo box 's menu . Click combo box . Notice focus event report . As long user manipulate component , focus stay component . Click text area focus event print . Nothing happen text area render unclickable setRequestFocusEnabled ( false ) . Click text field return focus initial component . Press Tab keyboard . The focus move combo box skip label . Press Tab . The focus move button . Click another window FocusEventDemo window lose focus . A temporary focus-lost event generate button . Click top FocusEventDemo window . A focus-gained event fire button . Press Tab keyboard . The focus move list . Press Tab . The focus move text area . Notice even though allow click text area , tab . This user use assistive technology determine component contain . The demo disable click-to-focus text area , retain tab-to-focus capability , invoke setRequestFocusEnabled ( false ) text area . The demo could use setFocusable ( false ) truly remove text area focus cycle , would unfortunate effect make component unavailable use assistive technology . Press Tab . The focus move list back text field . You complete focus cycle . See introduction How Use Focus Subsystem discussion focus terminology concept . The complete code demo FocusEventDemo.java file . The following code snippet represent focus-event handling mechanism : public class FocusEventDemo ... implement FocusListener ... { public FocusEventDemo ( ) { ... JTextField textField = new JTextField ( `` A TextField '' ) ; textField.addFocusListener ( ) ; ... JLabel label = new JLabel ( `` A Label '' ) ; label.addFocusListener ( ) ; ... JComboBox comboBox = new JComboBox ( vector ) ; comboBox.addFocusListener ( ) ; ... JButton button = new JButton ( `` A Button '' ) ; button.addFocusListener ( ) ; ... JList list = new JList ( listVector ) ; list.setSelectedIndex ( 1 ) ; //It 's easy see focus change //if item select . list.addFocusListener ( ) ; JScrollPane listScrollPane = new JScrollPane ( list ) ; ... //Set area report focus-gained focus-lost event . display = new JTextArea ( ) ; display.setEditable ( false ) ; //The method setRequestFocusEnabled prevents //component clickable , still //get focus keyboard - ensure //user accessibility . display.setRequestFocusEnabled ( false ) ; display.addFocusListener ( ) ; JScrollPane displayScrollPane = new JScrollPane ( display ) ; ... } ... public void focusGained ( FocusEvent e ) { displayMessage ( `` Focus gain '' , e ) ; } public void focusLost ( FocusEvent e ) { displayMessage ( `` Focus lose '' , e ) ; } void displayMessage ( String prefix , FocusEvent e ) { display.append ( prefix + ( e.isTemporary ( ) ? `` ( temporary ) : '' : `` : '' ) + e.getComponent ( ) .getClass ( ) .getName ( ) + `` ; Opposite component : `` + ( e.getOppositeComponent ( ) ! = null ? e.getOppositeComponent ( ) .getClass ( ) .getName ( ) : `` null '' ) + newline ) ; } ... } The Focus Listener API The FocusListener Interface The corresponding adapter class FocusAdapter . Method Purpose focusGained ( FocusEvent ) Called listened-to component get focus . focusLost ( FocusEvent ) Called listened-to component lose focus . The FocusEvent API Method Purpose boolean isTemporary ( ) Returns true value focus-lost focus-gained event temporary . Component getComponent ( ) ( java.awt.event.ComponentEvent ) Returns component fire focus event . Component getOppositeComponent ( ) Returns component involve focus change . For FOCUS_GAINED event , component lose focus . For FOCUS_LOST event , component gain focus . If focus change involve native application , Java application different VM context , component , null return . Examples Use Focus Listeners The follow table list example use focus listener . Example Where Described Notes FocusEventDemo This section Reports focus event occur several component demonstrate circumstance focus event fire . TrackFocusDemo How Use Focus Subsystem The custom component , Picture , implement focus listener draw red border around component current focus owner .