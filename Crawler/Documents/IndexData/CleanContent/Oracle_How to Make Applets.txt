This section cover JApplet — class enable applet use Swing component . JApplet subclass java.applet.Applet , cover Java Applets trail . If 've never write regular applet , urge read trail proceed section . The information provide trail apply Swing applet , exception section explain . Any applet contain Swing component must implement subclass JApplet . Here 's Swing version one applet help make Java famous — animation applet ( well know configuration ) show mascot Duke cartwheel : // < ! [ CDATA [ var attribute = { archive : 'https : //docs.oracle.com/javase/tutorialJWS/samples/uiswing/TumbleItemProject/TumbleItem.jar ' , codebase : 'https : //docs.oracle.com/javase/tutorialJWS/samples/uiswing/TumbleItemProject ' , code : 'components.TumbleItem ' , width : '600 ' , height : '95 ' } ; var parameter = { permission : 'sandbox ' , nimgs : '17 ' , offset : '-57 ' , img : 'images/tumble ' , maxwidth : '120 ' } ; deployJava.runApplet ( attribute , parameter , '1.7 ' ) ; // ] ] > A browser Javascript enable require page operate properly . Note : If n't see applet running , need install least Java SE Development Kit ( JDK ) 7 release.You find main source code applet TumbleItem.java . This section discuss following topic : Features Provided JApplet Threads Applets Using Images Swing Applet Embedding Applet HTML Page The JApplet API Applet Examples Features Provided JApplet Because JApplet top-level Swing container , Swing applet root pane . The noticeable effect root pane 's presence support add menu bar need use content pane . As describe Using Top-Level Containers , top-level container JApplet single content pane . The content pane make Swing applet different regular applet following way : You add component Swing applet 's content pane , directly applet . Adding Components Content Pane show . You set layout manager Swing applet 's content pane , directly applet . The default layout manager Swing applet 's content pane BorderLayout . This differs default layout manager Applet , FlowLayout . You put paint code directly JApplet object . See Performing Custom Painting example perform custom paint applet . Threads Applets Swing component create , query , manipulate event-dispatching thread , browser n't invoke applet `` milestone '' method thread . For reason , milestone method — init , start , stop , destroy — use SwingUtilities method invokeAndWait ( , appropriate , invokeLater ) code refer Swing component execute event-dispatching thread . More information method event-dispatching thread Concurrency Swing . Here example init method : public void init ( ) { //Execute job event-dispatching thread : //creating applet 's GUI . try { javax.swing.SwingUtilities.invokeAndWait ( new Runnable ( ) { public void run ( ) { createGUI ( ) ; } } ) ; } catch ( Exception e ) { System.err.println ( `` createGUI n't successfully complete '' ) ; } } private void createGUI ( ) { JLabel label = new JLabel ( `` You successfully run Swing applet ! `` ) ; label.setHorizontalAlignment ( JLabel.CENTER ) ; label.setBorder ( BorderFactory.createMatteBorder ( 1,1,1,1 , Color.black ) ) ; getContentPane ( ) .add ( label , BorderLayout.CENTER ) ; } The invokeLater method appropriate implementation allow init return initialization complete , cause applet problem difficult debug . The init method TumbleItem complex , following code show . Like first example , init method implementation use SwingUtilities.invokeAndWait execute GUI creation code event-dispatching thread . This init method set Swing timer fire action event update animation . Also , init use javax.swing.SwingWorker create background task load animation image file , let applet present GUI right away , without wait resource load . private void createGUI ( ) { ... animator = new Animator ( ) ; animator.setOpaque ( true ) ; animator.setBackground ( Color.white ) ; setContentPane ( animator ) ; ... } public void init ( ) { loadAppletParameters ( ) ; //Execute job event-dispatching thread : //creating applet 's GUI . try { javax.swing.SwingUtilities.invokeAndWait ( new Runnable ( ) { public void run ( ) { createGUI ( ) ; } } ) ; } catch ( Exception e ) { System.err.println ( `` createGUI n't successfully complete '' ) ; } //Set timer perform animation . timer = new javax.swing.Timer ( speed , ) ; timer.setInitialDelay ( pause ) ; timer.setCoalesce ( false ) ; timer.start ( ) ; //Start animation . //Background task load image . SwingWorker worker = ( new SwingWorker < ImageIcon [ ] , Object > ( ) { public ImageIcon [ ] doInBackground ( ) { final ImageIcon [ ] innerImgs = new ImageIcon [ nimgs ] ; ... //Load image ... return imgs ; } public void ( ) { //Remove `` Loading image '' label . animator.removeAll ( ) ; loopslot = -1 ; try { imgs = get ( ) ; } ... //Handle possible exception } } ) .execute ( ) ; } You find applet 's source code TumbleItem.java . To find file require applet , see example index . Using Images Swing Applet The Applet class provide getImage method load image applet . The getImage method creates return Image object represent loaded image . Because Swing component use Icons rather Images refer picture , Swing applet tend use getImage . Instead Swing applet create instance ImageIcon — icon load image file . ImageIcon come code-saving benefit : handle image track automatically . Refer How Use Icons information . The animation Duke cartwheel require 17 different picture . The applet use one ImageIcon per picture load init method . Because image take long time load , icon load separate thread implement SwingWorker object . Here 's code : public void init ( ) { ... imgs = new ImageIcon [ nimgs ] ; ( new SwingWorker < ImageIcon [ ] , Object > ( ) { public ImageIcon [ ] doInBackground ( ) { //Images numbered 1 nimgs , //but fill array 0 nimgs-1 . ( int = 0 ; < nimgs ; i++ ) { imgs [ ] = loadImage ( i+1 ) ; } return imgs ; } ... } ) .execute ( ) ; } ... protected ImageIcon loadImage ( int imageNum ) { String path = dir + `` /T '' + imageNum + `` .gif '' ; int MAX_IMAGE_SIZE = 2400 ; //Change size //your big image , byte . int count = 0 ; BufferedInputStream imgStream = new BufferedInputStream ( this.getClass ( ) .getResourceAsStream ( path ) ) ; ( imgStream ! = null ) { byte buf [ ] = new byte [ MAX_IMAGE_SIZE ] ; try { count = imgStream.read ( buf ) ; imgStream.close ( ) ; } catch ( java.io.IOException ioe ) { System.err.println ( `` Could n't read stream file : `` + path ) ; return null ; } ( count < = 0 ) { System.err.println ( `` Empty file : `` + path ) ; return null ; } return new ImageIcon ( Toolkit.getDefaultToolkit ( ) .createImage ( buf ) ) ; } else { System.err.println ( `` Could n't find file : `` + path ) ; return null ; } } The loadImage method load image specified frame animation . It use getResourceAsStream method rather usual getResource method get image . The result code n't pretty , getResourceAsStream efficient getResource load image JAR file applet execute use Java Plug-in™ software . For detail , see Loading Images Into Applets . Embedding Applet HTML Page You deploy simple applet use applet tag . Or , use Deployment Toolkit . Here code cartwheeling Duke applet : < script src= '' http : //www.java.com/js/deployJava.js '' type= '' text/javascript '' > < /script > < script type= '' text/javascript '' > // < ! [ CDATA [ var attribute = { archive : 'https : //docs.oracle.com/javase/tutorialJWS/samples/uiswing/TumbleItemProject/TumbleItem.jar ' , codebase : 'https : //docs.oracle.com/javase/tutorialJWS/samples/uiswing/TumbleItemProject ' , code : 'components.TumbleItem ' , width : '600 ' , height : '95 ' } ; var parameter = { permission : 'sandbox ' , nimgs : '17 ' , offset : '-57 ' , img : 'images/tumble ' , maxwidth : '120 ' } ; deployJava.runApplet ( attribute , parameter , '1.7 ' ) ; // ] ] > < /script > < noscript > A browser Javascript enable require page operate properly. < /noscript > For information , see Deploying Applet Java Applets lesson . The JApplet API The next table list interesting method JApplet add applet API . They give access feature provide root pane . Other method might use define Component Applet class . See Component Methods list commonly use Component method , Java Applets help use Applet method . Method Purpose void setContentPane ( Container ) Container getContentPane ( ) Set get applet 's content pane . The content pane contain applet 's visible GUI component opaque . void setRootPane ( JRootPane ) JRootPane getRootPane ( ) Create , set , get applet 's root pane . The root pane manage interior applet include content pane , glass pane , . void setJMenuBar ( JMenuBar ) JMenuBar getJMenuBar ( ) Set get applet 's menu bar manage set menu applet . void setGlassPane ( Component ) Component getGlassPane ( ) Set get applet 's glass pane . You use glass pane intercept mouse event . void setLayeredPane ( JLayeredPane ) JLayeredPane getLayeredPane ( ) Set get applet 's layered pane . You use applet 's layered pane put component top behind component . Applet Example This table show example Swing applet example describe . Example Where Described Notes TumbleItem This page An animation applet