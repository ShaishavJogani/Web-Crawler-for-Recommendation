This page map section Java Tutorials topic cover Java SE 8 Programmer II exam . This exam associate Oracle Certified Professional , Java SE 8 Programmer certificate . The topic cover exam : Java Class Design Advanced Class Design Generics Collections Lambda Built-In Functional Interfaces Java Stream API Exceptions Assertions Use Java SE 8 Date/Time API Java I/O Fundamentals Java File I/O ( NIO.2 ) Concurrency Building Database Applications JDBC Localization Section 1 : Java Class Design Item 1 : Implement encapsulation . What Is Object ? Item 2 : Implement inheritance include visibility modifier composition . Inheritance Overriding Hiding Methods Item 3 : Implement polymorphism . Polymorphism Item 4 : Override hasCode , equal , toString method Object class . Object Superclass Item 5 : Create use singleton class immutable class . The Singleton Design Pattern A Strategy Defining Immutable Objects Item 6 : Develop code use static keyword initialize block , variable , method , class . Understanding Class Members Initializing Fields Overriding Hiding Methods Default Methods Section 2 : Advanced Class Design Item 1 : Develop code use abstract class method . Abstract Methods Classes Item 2 : Develop code use final . Variables Understanding Class Members Item 3 : Create inner class include static inner class , local class , nested class , anonymous innter class . Nested Classes Inner Class Example Local Classes Anonymous Classes When Use Nested Classes , Local Classes , Anonymous Classes , Lambda Expressions Item 4 : Use enumerate type include method , constructor enum type Enum Types Default Methods Enumerated Types Item 5 : Develop code declare , implement and/or extends interface use @ Override annotation . Predefined Annotation Types Item 6 : Create use lambda expression . Lambda Expressions Section 3 : Generics Collections The Generics ( Updated ) lesson , Collections trail , particular , specify page . Item 1 : Create use generic class . Generic Types Item 2 : Create use ArrayList , TreeSet , TreeMap , ArrayDeque object . The List Interface The Set Interface The Map Interface The Deque Interface Item 3 : Use java.util.Comparator java.lang.Comparable interface . Object Ordering Item 4 : Collections , stream , filter . Aggregate Operations Item 5 : Iterate use forEach method Streams List . The Collection Interface Aggregate Operations Item 6 : Describe Stream interface Stream pipeline . Aggregate Operations Item 7 : Filter collection use lambda expression . The Collection Interface Aggregate Operations Item 8 : Use method reference stream . Method References Section 4 : Lambda Built-In Functional Interfaces The section Lambda Expressions Aggregate Operations cover following item : Item 1 : Use built-in interface include java.util.function package Predicate , Consumer , Function , Supplier . Item 2 : Develop code use primitive version functional interface . Item 3 : Develop code use binary version functional interface . Item 4 : Develop code use UnaryOperator interface . Section 5 : Java Stream API The section Lambda Expressions Aggregate Operations cover following item : Item 1 : Develop code extract data object use peek ( ) map ( ) method include primitive version map ( ) method . Item 2 : Search data use search method Stream class include findFirst , findAny , anyMatch , allMatch , noneMatch . Item 3 : Develop code use Optional class . Item 4 : Develop code use Stream data method calculation method . Item 5 : Sort collection use Stream API . Item 6 : Save result collection use collect method group/partition data use Collectors class . Item 7 : Use flatMap ( ) method Stream API . Section 6 : Exceptions Assertions Item 1 : Use try-catch throw statement . Specifying Exceptions Thrown Method How Throw Exceptions Item 2 : Use catch , multi-catch , finally clause . Catching Handling Exceptions The try Block The catch Blocks The finally Block Putting It All Together Item 3 : Use autoclose resource try-with-resources statement . The try-with-resources Statement Item 4 : Create custom exception autocloseable resource . Creating Exception Classes Item 5 : Test invariant use assertion . Questions Exercises : Classes ( assertion example ) Section 7 : Use Java SE 8 Date/Time API Item 1 : Create manage date-based time-based event include combination date time single object use LocalDate , LocalTime , LocalDateTime , Instant , Period , Duration . Date Classes Date Time Classes Instant Class Period Duration Item 2 : Work date time across timezones manage change result daylight saving include Format date time value . Time Zone Offset Classes Item 3 : Define create manage date-based time-based event use Instant , Period , Duration , TemporalUnit . Instant Class Period Duration The Temporal Package Section 8 : Java I/O Fundamentals Item 1 : Read write data console . The I/O Streams lesson , particular , following page : Byte Streams I/O Command Line Item 2 : Use BufferedReader , BufferedWriter , File , FileReader , FileWriter , FileInputStream , FileOutputStream , ObjectOutputStream , ObjectInputStream , PrintWriter java.io package . The File I/O ( Featuring NIO.2 ) lesson , particular , following page : Reading , Writing , Creating Files Creating Reading Directories Random Access Files Section 9 : Java File I/O ( NIO.2 ) Item 1 : Use Path interface operate file directory path . What Is Path ? ( And Other File System Facts ) Path Operations Item 2 : Use Files class check , read , delete , copy , move , manage metadata file directory . File Operations Checking File Directory Deleting File Directory Copying File Directory Moving File Directory Managing Metadata ( File File Store Attributes ) Walking File Tree Finding Files What Glob ? Watching Directory Changes Item 3 : Use Stream API NIO.2 . Section 3 : Object-Oriented Design Principles The Java Tutorials cover Design Patterns topic . The following reference cover design pattern use Java programming language : Head First Design Patterns Elizabeth Freeman , et al . Java Design Pattern Essentials Tony Bevis Item 1 : Write code declare , implement and/or extend interface . Defining Interface Interfaces Implementing Interface Item 2 : Choose interface inheritance class inheritance . Item 3 : Develop code implement `` is-a '' and/or `` has-a '' relationship . Item 4 : Apply object composition principle . Item 5 : Design class use Singleton design pattern . Item 6 : Write code implement DAO pattern . Item 7 : Design create object use factory , use factory API . Section 5 : String Processing Item 1 : Search , parse build string . Strings Converting Between Numbers Strings Comparing Strings Portions Strings Manipulating Characters String Item 2 : Search , parse , replace string use regular expression . Methods Pattern Class Methods Matcher Class Item 3 : Use string formatting . Strings Formatting Numeric Print Output Section 10 : Concurrency Item 1 : Create worker thread use Runnable , Callable use ExecutorService concurrently execute task . Executors Executor Interfaces Thread Pools Item 2 : Identify potential threading problem among deadlock , starvation , livelock , race condition . Memory Consistency Errors Deadlock Item 3 : Use synchronize keyword java.util.concurrent.atomic package control order thread execution . Atomic Variables Item 4 : Use java.util.concurrent collection class include CyclicBarrier CopyOnWriteArrayList . Concurrent Collections Item 5 : Use parallel Fork/Join Framework . Fork/Join Item 6 : Use parallel Streams include reduction , decomposition , merge process , pipeline performance . Section 11 : Building Database Applicatons JDBC Item 1 : Describe interface make core JDBC API include Driver , Connection , Statement , ResultSet interface relationship provider implementation . JDBC Basics : Getting Started Item 2 : Identify component require connect database use DriverManager class include JDBC URL . Establishing Connection Connecting DataSource Objects Item 3 : Submit query read result database include create statement , return result set , iterate result , properly close result set , statement , connection . Processing SQL Statements JDBC Using Transactions Using RowSet Objects Using JdbcRowSet Objects Section 12 : Localization Item 1 : Read set locale use Locale object.. Setting Locale Creating Locale Item 2 : Create read Properties file . About ResourceBundle Class Backing ResourceBundle Properties Files Item 3 : Build resource bundle locale load resource bundle application . Customizing Resource Bundle Loading