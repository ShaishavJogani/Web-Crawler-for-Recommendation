You Path instance represent file directory , file exist file system ? Is readable ? Writable ? Executable ? Verifying Existence File Directory The method Path class syntactic , mean operate Path instance . But eventually must access file system verify particular Path exists , exist . You exists ( Path , LinkOption ... ) notExists ( Path , LinkOption ... ) method . Note ! Files.exists ( path ) equivalent Files.notExists ( path ) . When test file 's existence , three result possible : The file verify exist . The file verify exist . The file 's status unknown . This result occur program access file . If exists notExists return false , existence file verify . Checking File Accessibility To verify program access file need , use isReadable ( Path ) , isWritable ( Path ) , isExecutable ( Path ) method . The following code snippet verifies particular file exists program ability execute file . Path file = ... ; boolean isRegularExecutableFile = Files.isRegularFile ( file ) & Files.isReadable ( file ) & Files.isExecutable ( file ) ; Note : Once method completes , guarantee file access . A common security flaw many application perform check access file . For information , use favorite search engine look TOCTTOU ( pronounced TOCK-too ) . Checking Whether Two Paths Locate Same File When file system use symbolic link , possible two different path locate file . The isSameFile ( Path , Path ) method compare two path determine locate file file system . For example : Path p1 = ... ; Path p2 = ... ; ( Files.isSameFile ( p1 , p2 ) ) { // Logic path locate file }