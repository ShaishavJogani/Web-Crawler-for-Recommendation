A JToolBar container group several component — usually button icon — row column . Often , tool bar provide easy access functionality also menu . How Use Actions describe provide functionality menu item tool bar button . The following image show application name ToolBarDemo contain tool bar text area . Click Launch button run ToolBarDemo use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run , consult example index . By default , user drag tool bar another edge container window . The next figure show application look user drag tool bar right edge container . For drag behavior work correctly , tool bar must container use BorderLayout layout manager . The component tool bar affect generally center container . The tool bar must component container , must center . The next figure show application look user drag tool bar outside window . The following code create tool bar add container . You find entire program ToolBarDemo.java . public class ToolBarDemo extend JPanel implement ActionListener { ... public ToolBarDemo ( ) { super ( new BorderLayout ( ) ) ; ... JToolBar toolBar = new JToolBar ( `` Still draggable '' ) ; addButtons ( toolBar ) ; ... setPreferredSize ( new Dimension ( 450 , 130 ) ) ; add ( toolBar , BorderLayout.PAGE_START ) ; add ( scrollPane , BorderLayout.CENTER ) ; } ... } This code position tool bar scroll pane place component panel control border layout , tool bar PAGE_START position scroll pane CENTER position . Because scroll pane center component except tool bar container , default tool bar drag edge container . The tool bar also drag window , case window title `` Still draggable '' , specify JToolBar constructor . Creating Tool Bar Buttons The button tool bar ordinary JButton instance use image Java Look Feel Graphics Repository . Use image Java Look Feel Graphics Repository tool bar Java look feel . Here code create button add tool bar . protect void addButtons ( JToolBar toolBar ) { JButton button = null ; //first button button = makeNavigationButton ( `` Back24 '' , PREVIOUS , `` Back previous something-or-other '' , `` Previous '' ) ; toolBar.add ( button ) ; //second button button = makeNavigationButton ( `` Up24 '' , UP , `` Up something-or-other '' , `` Up '' ) ; toolBar.add ( button ) ; ... //similar code create add third button ... } protect JButton makeNavigationButton ( String imageName , String actionCommand , String toolTipText , String altText ) { //Look image . String imgLocation = `` images/ '' + imageName + `` .gif '' ; URL imageURL = ToolBarDemo.class.getResource ( imgLocation ) ; //Create initialize button . JButton button = new JButton ( ) ; button.setActionCommand ( actionCommand ) ; button.setToolTipText ( toolTipText ) ; button.addActionListener ( ) ; ( imageURL ! = null ) { //image find button.setIcon ( new ImageIcon ( imageURL , altText ) ) ; } else { //no image find button.setText ( altText ) ; System.err.println ( `` Resource find : `` + imgLocation ) ; } return button ; } The first call makeNavigationButton create image first button , use 24x24 `` Back '' navigation image graphic repository . Besides find image button , makeNavigationButton method also create button , set string action command tool tip text , add action listener button . If image miss , method print error message add text button , button still usable . Note : If button tool bar duplicate functionality component , menu item , probably create add tool bar button describe How Use Actions . Customizing Tool Bars By add line code precede example , demonstrate tool bar feature : Using setFloatable ( false ) make tool bar immovable . Using setRollover ( true ) visually indicate tool bar button user pass cursor . Adding separator tool bar . Adding non-button component tool bar . You see feature run ToolBarDemo2 . Click Launch button run ToolBarDemo2 use Java™ Web Start ( download JDK 7 later ) . Alternatively , compile run , consult example index . You find entire code program ToolBarDemo2.java . Below see picture new UI use customize feature . Because tool bar longer drag , longer bump left edge . Here code turn drag : toolBar.setFloatable ( false ) ; The tool bar rollover mode , button cursor visual indicator . The kind visual indicator depend look feel . For example , Metal look feel use gradient effect indicate button cursor type look feel use border purpose . Here code set rollover mode : toolBar.setRollover ( true ) ; Another visible difference example tool bar contain two new component , precede blank space call separator . Here code add separator : toolBar.addSeparator ( ) ; Here code add new component : //fourth button button = new JButton ( `` Another button '' ) ; ... toolBar.add ( button ) ; //fifth component NOT button ! JTextField textField = new JTextField ( `` A text field '' ) ; ... toolBar.add ( textField ) ; You easily make tool bar component either top-aligned bottom-aligned instead center invoke setAlignmentY method . For example , align top component tool bar , invoke setAlignmentY ( TOP_ALIGNMENT ) component . Similarly , use setAlignmentX method specify alignment component tool bar vertical . This layout flexibility possible tool bar use BoxLayout position component . For information , see How Use BoxLayout . The Tool Bar API The follow table list commonly use JToolBar constructor method . Other method might call list API table The JComponent Class . Method Constructor Purpose JToolBar ( ) JToolBar ( int ) JToolBar ( String ) JToolBar ( String , int ) Creates tool bar . The optional int parameter let specify orientation ; default HORIZONTAL . The optional String parameter allow specify title tool bar 's window drag outside container . Component add ( Component ) Adds component tool bar . You associate button Action use setAction ( Action ) method define AbstractButton . void addSeparator ( ) Adds separator end tool bar . void setFloatable ( boolean ) boolean isFloatable ( ) The floatable property true default , indicate user drag tool bar separate window . To turn tool bar dragging , use toolBar.setFloatable ( false ) . Some type look feel might ignore property . void setRollover ( boolean ) boolean isRollover ( ) The rollover property false default . To make tool bar button indicate visually user pass cursor , set property true . Some type look feel might ignore property . Examples That Use Tool Bars This table list example use JToolBar point example describe . Example Where Described Notes ToolBarDemo This page A basic tool bar icon-only button . ToolBarDemo2 This page Demonstrates non-floatable tool bar rollover mode contain separator non-button component . ActionDemo How Use Actions Implements tool bar use Action object .