A JoinRowSet implementation let create SQL JOIN RowSet object connect data source . This important save overhead create one connection . The following topic cover : Creating JoinRowSet Objects Adding RowSet Objects Managing Match Columns The JoinRowSet interface subinterface CachedRowSet interface thereby inherit capability CachedRowSet object . This mean JoinRowSet object disconnected RowSet object operate without always connect data source . Creating JoinRowSet Objects A JoinRowSet object serf holder SQL JOIN . The following line code show create JoinRowSet object : JoinRowSet jr = new JoinRowSetImpl ( ) ; The variable jr hold nothing RowSet object add . Note : Alternatively , use constructor JoinRowSet implementation JDBC driver . However , implementation RowSet interface differ reference implementation . These implementation different name constructor . For example , Oracle JDBC driver 's implementation JoinRowSet interface name oracle.jdbc.rowset.OracleJoinRowSet . Adding RowSet Objects Any RowSet object add JoinRowSet object long part SQL JOIN . A JdbcRowSet object , always connect data source , add , typically form part JOIN operate data source directly instead become part JOIN add JoinRowSet object . The point provide JoinRowSet implementation make possible disconnected RowSet object become part JOIN relationship . The owner The Coffee Break chain coffee house want get list coffee buy Acme , Inc . In order , owner get information two table , COFFEES SUPPLIERS . In database world RowSet technology , programmer would send following query database : String query = `` SELECT COFFEES.COF_NAME `` + `` FROM COFFEES , SUPPLIERS `` + `` WHERE SUPPLIERS.SUP_NAME = Acme.Inc. `` + `` `` + `` SUPPLIERS.SUP_ID = COFFEES.SUP_ID '' ; In world RowSet technology , accomplish result without send query data source . You add RowSet object contain data two table JoinRowSet object . Then , pertinent data JoinRowSet object , perform query get desire data . The following code fragment JoinSample.testJoinRowSet create two CachedRowSet object , coffee populate data table COFFEES , supplier populate data table SUPPLIERS . The coffee supplier object make connection database execute command get populate data , , reconnect order form JOIN . coffee = new CachedRowSetImpl ( ) ; coffees.setCommand ( `` SELECT * FROM COFFEES '' ) ; coffees.setUsername ( settings.userName ) ; coffees.setPassword ( settings.password ) ; coffees.setUrl ( settings.urlString ) ; coffees.execute ( ) ; supplier = new CachedRowSetImpl ( ) ; suppliers.setCommand ( `` SELECT * FROM SUPPLIERS '' ) ; suppliers.setUsername ( settings.userName ) ; suppliers.setPassword ( settings.password ) ; suppliers.setUrl ( settings.urlString ) ; suppliers.execute ( ) ; Managing Match Columns Looking SUPPLIERS table , see Acme , Inc. identification number 101 . The coffee table COFFEES supplier identification number 101 Colombian Colombian_Decaf . The joining information table possible two table column SUP_ID common . In JDBC RowSet technology , SUP_ID , column JOIN base , call match column . Each RowSet object add JoinRowSet object must match column , column JOIN base . There two way set match column RowSet object . The first way pass match column JoinRowSet method addRowSet , show following line code : jrs.addRowSet ( coffee , 2 ) ; This line code add coffee CachedRowSet jr object set second column coffee ( SUP_ID ) match column . The line code could also use column name rather column number . jrs.addRowSet ( coffee , `` SUP_ID '' ) ; At point , jr coffee . The next RowSet object add jrs able form JOIN coffee , true supplier table column SUP_ID . The following line code add supplier jrs set column SUP_ID match column . jrs.addRowSet ( supplier , 1 ) ; Now jrs contain JOIN coffee supplier owner get name coffee supply Acme , Inc. Because code set type JOIN , jr hold inner JOIN , default . In word , row jr combine row coffee row supplier . It hold column coffee plus column supplier row value COFFEES.SUP_ID column match value SUPPLIERS.SUP_ID . The following code print name coffee supply Acme , Inc. , String supplierName equal Acme , Inc . Note possible column SUP_NAME , supplier , COF_NAME , coffee , include JoinRowSet object jr . System.out.println ( `` Coffees buy `` + supplierName + `` : `` ) ; ( jrs.next ( ) ) { ( jrs.getString ( `` SUP_NAME '' ) .equals ( supplierName ) ) { String coffeeName = jrs.getString ( 1 ) ; System.out.println ( `` `` + coffeeName ) ; } } This produce output similar following : Coffees buy Acme , Inc. : Colombian Colombian_Decaf The JoinRowSet interface provide constant set type JOIN form , currently type implement JoinRowSet.INNER_JOIN .