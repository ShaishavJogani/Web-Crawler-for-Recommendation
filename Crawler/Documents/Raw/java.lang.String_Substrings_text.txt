
It may also be sometimes useful to createsubstrings, or strings using the order of letters from an existing string.  This can be done in two methods.
The first method involves creating a substring out of the characters of a string from a given index to the end:


The index of the first character in a string is 0.

coffee012345

By counting from there, it is apparent that the character in index 3 is the second "f" in "coffee". This is known as thebeginIndex. All characters from thebeginIndexuntil the end of the string will be copied into the new substring.
The second method involves a user-definedbeginIndexandendIndex:


The string returned bysubstring()would be "port".

supporting0123456789

Please note that the endIndex isnotinclusive. This means that the last character will be of the indexendIndex-1. Therefore, in this example, every character from index 3 to index 6, inclusive, was copied into the substring.

It is easy to mistake the methodsubstring()forsubString()(which does not exist and would return with a syntax error on compilation).Substringis considered to be one word. This is why the method name does not seem to follow the common syntax of Java. Just remember that this style only applies to methods or other elements that are made up of more than one word.

