
You surely would have noticed by now, the wordspublic,protectedandprivateat the beginning of class's method declarations used in this book. These keywords are called theaccess modifiersin the Java language syntax, and they define the scope of a given item.

For a class[edit]

If a class haspublicvisibility, the class can be referenced by anywhere in the program.If a class hasprotectedvisibility, the class can be referenced only in the package where the class is defined.If a class hasprivatevisibility, (it can happen only if the class is defined nested in an other class) the class can be accessed only in the outer class.

For a variable[edit]

If a variable is defined in apublicclass and it haspublicvisibility, the variable can be referenced anywhere in the application through the class it is defined in.If a variable hasprotectedvisibility, the variable can be referenced only in the sub-classes and in the same package through the class it is defined in.If a variable haspackagevisibility, the variable can be referenced only in the same package through the class it is defined in.If a variable hasprivatevisibility, the variable can be accessed only in the class it is defined in.

For a method[edit]

If a method is defined in apublicclass and it haspublicvisibility, the method can be called anywhere in the application through the class it is defined in.If a method hasprotectedvisibility, the method can be called only in the sub-classes and in the same package through the class it is defined in.If a method haspackagevisibility, the method can be called only in the same package through the class it is defined in.If a method hasprivatevisibility, the method can be called only in the class it is defined in.

For an interface[edit]

The interface methods and interfaces are alwayspublic. You do not need to specify the access modifier. It will default topublic. For clarity it is considered a good practice to put thepublickeyword.
The same way all member variables defined in the Interface by default will becomestaticfinalonce inherited in a class.

Summary[edit]

ClassNested classMethod, or Member variableInterfaceInterface method signaturepublicvisible from anywheresame as its classsame as its classvisible from anywherevisible from anywhereprotectedN/Aits class and its subclassits class and its subclass, and from its packageN/AN/Apackageonly from its packageonly from its packageonly from its packageN/AN/AprivateN/Aonly from its classonly from its classN/AN/A

The cases in bold are the default.

